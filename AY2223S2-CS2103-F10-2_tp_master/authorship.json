[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jedidiahC"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F10-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103-F10-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jedidiahC"},"content":"Welcome to the Le Tracker project!","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jedidiahC"},"content":"* Our goal is to help create a stress-free learning environment for all students!\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jedidiahC"},"content":"* Le Tracker enables students to **easily log their lecture progress**. \u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jedidiahC"},"content":"  * add-module /code CS2040 /name Data Structures \u0026 Algorithms","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jedidiahC"},"content":"  * mark /module CS2040 /lecture 1 /video lecture_01-part-1","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jedidiahC"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"jedidiahC":8,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"### Lee Shao Wee","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"\u003cimg src\u003d\"images/shaowi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"[[homepage](https://leeshaowee.netlify.app/)]","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"[[github](https://github.com/shaowi)]","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"[[portfolio](team/shaowi.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"- Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"- Responsibilities: Deliverables, deadlines, scheduling and tracking","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"### Hing Zi Yang Benedict","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"\u003cimg src\u003d\"images/hingen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"shaowi"},"content":"[[github](http://github.com/hingen)]","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"[[portfolio](team/hingen.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"shaowi"},"content":"- Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"shaowi"},"content":"- Responsibilities: Code Quality + Integration","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"shaowi"},"content":"### Khang Tran","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"\u003cimg src\u003d\"images/lennoxtr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"shaowi"},"content":"[[github](http://github.com/lennoxtr)]","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"shaowi"},"content":"[[portfolio](team/lennoxtr.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"shaowi"},"content":"- Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"shaowi"},"content":"- Responsibilities: File I/O","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"shaowi"},"content":"### Joy Tan QiaoTong","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"shaowi"},"content":"\u003cimg src\u003d\"images/joytqt-1202.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"shaowi"},"content":"[[github](http://github.com/joytqt-1202)]","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"shaowi"},"content":"[[portfolio](team/joytqt-1202.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"shaowi"},"content":"- Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"shaowi"},"content":"- Responsibilities: Documentation + Testing","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"shaowi"},"content":"### Jedidiah Cheng","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"shaowi"},"content":"\u003cimg src\u003d\"images/jedidiahc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"shaowi"},"content":"[[github](https://github.com/jedidiahC)]","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"jedidiahC"},"content":"[[portfolio](team/jedidiahc.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"shaowi"},"content":"- Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"shaowi"},"content":"- Responsibilities: UI","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"shaowi":30,"jedidiahC":1,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"- Table of Contents","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"shaowi"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"shaowi"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"shaowi"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"shaowi"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"shaowi"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"shaowi"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"shaowi"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"shaowi"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"shaowi"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"shaowi"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"shaowi"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"shaowi"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"shaowi"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"shaowi"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"shaowi"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"shaowi"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"shaowi"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"shaowi"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"shaowi"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"shaowi"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"shaowi"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"shaowi"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"shaowi"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"shaowi"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"shaowi"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"shaowi"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"shaowi"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"shaowi"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"shaowi"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-02-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"shaowi"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"shaowi"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-02-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"shaowi"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"shaowi"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"shaowi"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-02-26"},{"lineNumber":253,"author":{"gitId":"shaowi"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"shaowi"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-02-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"joytqt-1202"},"content":"- NUS Students","lastModifiedDate":"2023-03-02"},{"lineNumber":265,"author":{"gitId":"joytqt-1202"},"content":"- has a need to manage a significant number of lectures","lastModifiedDate":"2023-03-02"},{"lineNumber":266,"author":{"gitId":"joytqt-1202"},"content":"- falling behind on lectures","lastModifiedDate":"2023-03-02"},{"lineNumber":267,"author":{"gitId":"joytqt-1202"},"content":"- feeling unmotivated to watch lectures","lastModifiedDate":"2023-03-02"},{"lineNumber":268,"author":{"gitId":"joytqt-1202"},"content":"- feeling lost regarding lecture content","lastModifiedDate":"2023-03-02"},{"lineNumber":269,"author":{"gitId":"shaowi"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-02-26"},{"lineNumber":270,"author":{"gitId":"shaowi"},"content":"- can type fast","lastModifiedDate":"2023-02-26"},{"lineNumber":271,"author":{"gitId":"shaowi"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-02-26"},{"lineNumber":272,"author":{"gitId":"shaowi"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-02-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"joytqt-1202"},"content":"**Value proposition**: fun, fast and stress-free way to organise and track lecture material","lastModifiedDate":"2023-03-02"},{"lineNumber":275,"author":{"gitId":"joytqt-1202"},"content":"- gamified tracking application","lastModifiedDate":"2023-03-02"},{"lineNumber":276,"author":{"gitId":"joytqt-1202"},"content":"- easily log lecture progress, search for lecture by mod code / keywords / topics for a stress-free learning environment","lastModifiedDate":"2023-03-02"},{"lineNumber":277,"author":{"gitId":"joytqt-1202"},"content":"- tailored to needs of students: provides additional information specific to lecture media such as watch progress and topics","lastModifiedDate":"2023-03-02"},{"lineNumber":278,"author":{"gitId":"joytqt-1202"},"content":"- faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-03-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"shaowi"},"content":"| Priority | As a/an …​       | I can …​                                                                           | So that I can…​                                                                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":285,"author":{"gitId":"shaowi"},"content":"| -------- | ---------------- | ---------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-02-26"},{"lineNumber":286,"author":{"gitId":"shaowi"},"content":"| `* * *`  | new user         | access a starter guide on how to use the app                                       |                                                                                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":287,"author":{"gitId":"shaowi"},"content":"| `* * *`  | forgetful user   | access a help manual easily                                                        | recall on how to use the app                                                                 |","lastModifiedDate":"2023-02-26"},{"lineNumber":288,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | add a module, lecture or video                                                     |                                                                                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":289,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | delete a module, lecture or video                                                  | remove entries that I no longer need                                                         |","lastModifiedDate":"2023-02-26"},{"lineNumber":290,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | search for lectures by relevant keywords (tags)                                    | find a specific lecture easily                                                               |","lastModifiedDate":"2023-02-26"},{"lineNumber":291,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | mark the lecture that I have watched                                               | track the ones that I have missed out                                                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":292,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | unmark lecture that I have previously marked as watched                            | correct my mistakes when I mark a lecture wrongly                                            |","lastModifiedDate":"2023-02-26"},{"lineNumber":293,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | tag lectures                                                                       | find a specific lecture easily                                                               |","lastModifiedDate":"2023-02-26"},{"lineNumber":294,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | tag timestamps on lectures                                                         | find a specific lecture timestamp easily                                                     |","lastModifiedDate":"2023-02-26"},{"lineNumber":295,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | remove tags from lectures                                                          | correct my mistakes when I tag a lecture wrongly                                             |","lastModifiedDate":"2023-02-26"},{"lineNumber":296,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | set my current watch timestamp of a video on a per lecture basis                   | track my current progress for a specific lecture                                             |","lastModifiedDate":"2023-02-26"},{"lineNumber":297,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | see my current watch timestamp of a video on a per lecture basis                   | have an idea of my current progress for a specific lecture and also resume my watch progress |","lastModifiedDate":"2023-02-26"},{"lineNumber":298,"author":{"gitId":"shaowi"},"content":"| `* * *`  | user             | see my lecture watch progress of a module (lectures watched / over total lectures) | have an idea of my current progress for the module                                           |","lastModifiedDate":"2023-02-26"},{"lineNumber":299,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | bookmark the lectures                                                              | find them easily                                                                             |","lastModifiedDate":"2023-02-26"},{"lineNumber":300,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | easily access my lecture slides                                                    | refer to them when watching a lecture                                                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":301,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | find lecture videos that cover a specific topic                                    | avoid wasting time on non-relevant videos                                                    |","lastModifiedDate":"2023-02-26"},{"lineNumber":302,"author":{"gitId":"shaowi"},"content":"| `* *`    | seasoned user    | export and archive my progress from previous semesters                             | have a clean tracker but still reference lecture information from past modules if needed     |","lastModifiedDate":"2023-02-26"},{"lineNumber":303,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | backup data that I have entered into the app and import previous backups           | restore my tracker should I change my device or wipe my device                               |","lastModifiedDate":"2023-02-26"},{"lineNumber":304,"author":{"gitId":"shaowi"},"content":"| `* *`    | unmotivated user | feel rewarded for making progress in watching lectures                             | be motivated to keep up or catch up                                                          |","lastModifiedDate":"2023-02-26"},{"lineNumber":305,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | group my lectures                                                                  | they appear more organise                                                                    |","lastModifiedDate":"2023-02-26"},{"lineNumber":306,"author":{"gitId":"shaowi"},"content":"| `* *`    | forgetful user   | constantly be reminded of the \"help\" command                                       | continue using the app even when I forgot all the other commands                             |","lastModifiedDate":"2023-02-26"},{"lineNumber":307,"author":{"gitId":"shaowi"},"content":"| `* *`    | seasoned user    | bypass the tutorial and disable any features for helping beginners                 | I am not held back and annoyed by those features                                             |","lastModifiedDate":"2023-02-26"},{"lineNumber":308,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | write summaries/notes for lectures I have watched                                  | reference those notes when I\u0027m revising the contents of the lecture                          |","lastModifiedDate":"2023-02-26"},{"lineNumber":309,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | collate questions about a specific lecture                                         | pull it up when I have a chance to ask the professor                                         |","lastModifiedDate":"2023-02-26"},{"lineNumber":310,"author":{"gitId":"shaowi"},"content":"| `* *`    | seasoned user    | look up notes from previous semester lecture content                               | supplement my current semester content                                                       |","lastModifiedDate":"2023-02-26"},{"lineNumber":311,"author":{"gitId":"shaowi"},"content":"| `* *`    | seasoned user    | delete notes from previous semesters                                               | save my storage space                                                                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":312,"author":{"gitId":"shaowi"},"content":"| `* *`    | user             | see a quick overview of my current progress for all modules                        |                                                                                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":313,"author":{"gitId":"shaowi"},"content":"| `*`      | user             | view videos on any device (e.g. laptop, mobile)                                    | access them wherever I am                                                                    |","lastModifiedDate":"2023-02-26"},{"lineNumber":314,"author":{"gitId":"shaowi"},"content":"| `*`      | user             | allow app notification to notify me when a new lecture is out                      | stay up to date with my lectures                                                             |","lastModifiedDate":"2023-02-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"joytqt-1202"},"content":"(For all use cases below, the **System** is the `Le Tracker` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"joytqt-1202"},"content":"**Use case: Add a module**","lastModifiedDate":"2023-02-27"},{"lineNumber":321,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":322,"author":{"gitId":"joytqt-1202"},"content":"**MSS**","lastModifiedDate":"2023-02-27"},{"lineNumber":323,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":324,"author":{"gitId":"joytqt-1202"},"content":"1. User requests to add a new module.","lastModifiedDate":"2023-02-27"},{"lineNumber":325,"author":{"gitId":"joytqt-1202"},"content":"2. User specifies the name and code of the module.","lastModifiedDate":"2023-02-27"},{"lineNumber":326,"author":{"gitId":"joytqt-1202"},"content":"3. A new module is added into the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":327,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":328,"author":{"gitId":"joytqt-1202"},"content":"    Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":329,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":330,"author":{"gitId":"joytqt-1202"},"content":"**Extensions**","lastModifiedDate":"2023-02-27"},{"lineNumber":331,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":332,"author":{"gitId":"joytqt-1202"},"content":"- 2a. The module name or code is blank.","lastModifiedDate":"2023-02-27"},{"lineNumber":333,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":334,"author":{"gitId":"joytqt-1202"},"content":"   - 2a1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":336,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":337,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":338,"author":{"gitId":"joytqt-1202"},"content":"- 2b. Module code already exists.","lastModifiedDate":"2023-02-27"},{"lineNumber":339,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":340,"author":{"gitId":"joytqt-1202"},"content":"   - 2b1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":341,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":342,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":343,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":344,"author":{"gitId":"joytqt-1202"},"content":"**Use case: Add a lecture**","lastModifiedDate":"2023-02-27"},{"lineNumber":345,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":346,"author":{"gitId":"joytqt-1202"},"content":"**Preconditions**: User has added a module","lastModifiedDate":"2023-02-27"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-02-27"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":350,"author":{"gitId":"joytqt-1202"},"content":"1. User requests to add a new lecture.","lastModifiedDate":"2023-02-27"},{"lineNumber":351,"author":{"gitId":"joytqt-1202"},"content":"2. User specifies a name for the lecture with reference to a module code.","lastModifiedDate":"2023-02-27"},{"lineNumber":352,"author":{"gitId":"joytqt-1202"},"content":"3. A new lecture is appended into the list in that module.","lastModifiedDate":"2023-02-27"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-02-27"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":358,"author":{"gitId":"joytqt-1202"},"content":"- 2a. Lecture name is blank.","lastModifiedDate":"2023-02-27"},{"lineNumber":359,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":360,"author":{"gitId":"joytqt-1202"},"content":"  - 2a1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":361,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":362,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":363,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":364,"author":{"gitId":"joytqt-1202"},"content":"- 2b. Module code does not exist.","lastModifiedDate":"2023-02-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":366,"author":{"gitId":"joytqt-1202"},"content":"  - 2b1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":367,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":368,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":369,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":370,"author":{"gitId":"joytqt-1202"},"content":"**Use case: Add a video**","lastModifiedDate":"2023-02-27"},{"lineNumber":371,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":372,"author":{"gitId":"joytqt-1202"},"content":"**Preconditions**: User has added a module and a lecture","lastModifiedDate":"2023-02-27"},{"lineNumber":373,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":374,"author":{"gitId":"joytqt-1202"},"content":"**MSS**","lastModifiedDate":"2023-02-27"},{"lineNumber":375,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":376,"author":{"gitId":"joytqt-1202"},"content":"1. User requests to add a new video.","lastModifiedDate":"2023-02-27"},{"lineNumber":377,"author":{"gitId":"joytqt-1202"},"content":"2. User specifies a name for the video with reference to a module code and that module lecture index number.","lastModifiedDate":"2023-02-27"},{"lineNumber":378,"author":{"gitId":"joytqt-1202"},"content":"3. A new video is appended into the list in that lecture residing in the module.","lastModifiedDate":"2023-02-27"},{"lineNumber":379,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":380,"author":{"gitId":"joytqt-1202"},"content":"    Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":381,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":382,"author":{"gitId":"joytqt-1202"},"content":"**Extensions**","lastModifiedDate":"2023-02-27"},{"lineNumber":383,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":384,"author":{"gitId":"joytqt-1202"},"content":"- 2a. Video name is blank.","lastModifiedDate":"2023-02-27"},{"lineNumber":385,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":386,"author":{"gitId":"joytqt-1202"},"content":"   - 2a1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":387,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":388,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":389,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":390,"author":{"gitId":"joytqt-1202"},"content":"- 2b. Module code does not exist.","lastModifiedDate":"2023-02-27"},{"lineNumber":391,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":392,"author":{"gitId":"joytqt-1202"},"content":"   - 2b1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":393,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":394,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":395,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":396,"author":{"gitId":"joytqt-1202"},"content":"- 2c. Lecture index does not exist.","lastModifiedDate":"2023-02-27"},{"lineNumber":397,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":398,"author":{"gitId":"joytqt-1202"},"content":"   - 2c1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":399,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":400,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":401,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":402,"author":{"gitId":"joytqt-1202"},"content":"**Use case: Mark/Unmark a video**","lastModifiedDate":"2023-02-27"},{"lineNumber":403,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":404,"author":{"gitId":"joytqt-1202"},"content":"**Preconditions**: User has added a module and a lecture and a video","lastModifiedDate":"2023-02-27"},{"lineNumber":405,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":406,"author":{"gitId":"joytqt-1202"},"content":"**MSS**","lastModifiedDate":"2023-02-27"},{"lineNumber":407,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":408,"author":{"gitId":"joytqt-1202"},"content":"1. User requests to mark/unmark a video as watched.","lastModifiedDate":"2023-02-27"},{"lineNumber":409,"author":{"gitId":"joytqt-1202"},"content":"2. User specifies the module code, lecture index number and video index number to mark/unmark.","lastModifiedDate":"2023-02-27"},{"lineNumber":410,"author":{"gitId":"joytqt-1202"},"content":"3. Video shows a marked/unmarked indicator.","lastModifiedDate":"2023-02-27"},{"lineNumber":411,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":412,"author":{"gitId":"joytqt-1202"},"content":"    Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":413,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":414,"author":{"gitId":"joytqt-1202"},"content":"**Extensions**","lastModifiedDate":"2023-02-27"},{"lineNumber":415,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":416,"author":{"gitId":"joytqt-1202"},"content":"- 2a. Module code does not exist.","lastModifiedDate":"2023-02-27"},{"lineNumber":417,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":418,"author":{"gitId":"joytqt-1202"},"content":"   - 2a1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":419,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":420,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":421,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":422,"author":{"gitId":"joytqt-1202"},"content":"- 2b. Lecture index does not exist.","lastModifiedDate":"2023-02-27"},{"lineNumber":423,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":424,"author":{"gitId":"joytqt-1202"},"content":"   - 2b1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":425,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":426,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":427,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":428,"author":{"gitId":"joytqt-1202"},"content":"- 2c. Video index does not exist.","lastModifiedDate":"2023-02-27"},{"lineNumber":429,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":430,"author":{"gitId":"joytqt-1202"},"content":"   - 2b1. LeTracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":431,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":432,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":433,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":434,"author":{"gitId":"joytqt-1202"},"content":"**Use case: Delete a Lecture**","lastModifiedDate":"2023-02-27"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"joytqt-1202"},"content":"1.  User requests to list lectures of a specific module","lastModifiedDate":"2023-02-27"},{"lineNumber":439,"author":{"gitId":"joytqt-1202"},"content":"2.  Le Tracker shows a list of lectures of the specified module","lastModifiedDate":"2023-02-27"},{"lineNumber":440,"author":{"gitId":"joytqt-1202"},"content":"3.  User requests to delete a specific lecture in the list, while citing the correct _module code_","lastModifiedDate":"2023-02-27"},{"lineNumber":441,"author":{"gitId":"joytqt-1202"},"content":"4.  Le Tracker deletes the lecture","lastModifiedDate":"2023-02-27"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"joytqt-1202"},"content":"* 2a. There is no lecture in the specified module.","lastModifiedDate":"2023-02-27"},{"lineNumber":448,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":449,"author":{"gitId":"joytqt-1202"},"content":"   Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":450,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":451,"author":{"gitId":"joytqt-1202"},"content":"* 2b. There is no such module.","lastModifiedDate":"2023-02-27"},{"lineNumber":452,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":453,"author":{"gitId":"joytqt-1202"},"content":"   * 2b1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"joytqt-1202"},"content":"    * 3a1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":460,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":461,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-27"},{"lineNumber":462,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":463,"author":{"gitId":"joytqt-1202"},"content":"* 3b. The given module code is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":464,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":465,"author":{"gitId":"joytqt-1202"},"content":"    * 3b1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"joytqt-1202"},"content":"**Use case: Delete a Lecture Video**","lastModifiedDate":"2023-02-27"},{"lineNumber":470,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":471,"author":{"gitId":"joytqt-1202"},"content":"**MSS**","lastModifiedDate":"2023-02-27"},{"lineNumber":472,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":473,"author":{"gitId":"joytqt-1202"},"content":"1.  User requests to list lecture videos of a specific lecture of a specific module","lastModifiedDate":"2023-02-27"},{"lineNumber":474,"author":{"gitId":"joytqt-1202"},"content":"2.  Le Tracker shows a list of lecture videos of such specifications","lastModifiedDate":"2023-02-27"},{"lineNumber":475,"author":{"gitId":"joytqt-1202"},"content":"3.  User requests to delete a specific video in the list, while citing the correct _module code_ and _lecture id","lastModifiedDate":"2023-02-27"},{"lineNumber":476,"author":{"gitId":"joytqt-1202"},"content":"4.  Le Tracker deletes the lecture video","lastModifiedDate":"2023-02-27"},{"lineNumber":477,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":478,"author":{"gitId":"joytqt-1202"},"content":"    Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":479,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":480,"author":{"gitId":"joytqt-1202"},"content":"**Extensions**","lastModifiedDate":"2023-02-27"},{"lineNumber":481,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":482,"author":{"gitId":"joytqt-1202"},"content":"* 2a. There is no video in the specified module lecture.","lastModifiedDate":"2023-02-27"},{"lineNumber":483,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":484,"author":{"gitId":"joytqt-1202"},"content":"   Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":485,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":486,"author":{"gitId":"joytqt-1202"},"content":"* 2b. There is no such lecture in the module.","lastModifiedDate":"2023-02-27"},{"lineNumber":487,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":488,"author":{"gitId":"joytqt-1202"},"content":"   * 2b1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":489,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":490,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":491,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":492,"author":{"gitId":"joytqt-1202"},"content":"* 2c. There is no such module.","lastModifiedDate":"2023-02-27"},{"lineNumber":493,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":494,"author":{"gitId":"joytqt-1202"},"content":"   * 2c1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":495,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":496,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":497,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":498,"author":{"gitId":"joytqt-1202"},"content":"* 3a. The given index of the video is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":499,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":500,"author":{"gitId":"joytqt-1202"},"content":"   * 3a1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":501,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":502,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-27"},{"lineNumber":503,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":504,"author":{"gitId":"joytqt-1202"},"content":"* 3b. The given index of the lecture is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":505,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":506,"author":{"gitId":"joytqt-1202"},"content":"   * 3b1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":507,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":508,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-27"},{"lineNumber":509,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":510,"author":{"gitId":"joytqt-1202"},"content":"* 3c. The given index of the module is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":511,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":512,"author":{"gitId":"joytqt-1202"},"content":"   * 3c1. Le Tracker shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":513,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":514,"author":{"gitId":"joytqt-1202"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-27"},{"lineNumber":515,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":516,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":517,"author":{"gitId":"shaowi"},"content":"_{More to be added}_","lastModifiedDate":"2023-02-26"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"joytqt-1202"},"content":"2.  Should be able to hold up to 1000 lectures without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-27"},{"lineNumber":523,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"joytqt-1202"},"content":"4.  Should be easy to navigate through using commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":525,"author":{"gitId":"joytqt-1202"},"content":"5.  Should be easy to pick up on how to use the application.","lastModifiedDate":"2023-02-27"},{"lineNumber":526,"author":{"gitId":"joytqt-1202"},"content":"6.  Should allow multiple users to use the application.","lastModifiedDate":"2023-02-27"},{"lineNumber":527,"author":{"gitId":"joytqt-1202"},"content":"7.  Will not be pulling data from any third party APIs.","lastModifiedDate":"2023-02-27"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"shaowi"},"content":"_{More to be added}_","lastModifiedDate":"2023-02-26"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"joytqt-1202"},"content":"* **Module Code**: Unique code for each module","lastModifiedDate":"2023-02-27"},{"lineNumber":535,"author":{"gitId":"joytqt-1202"},"content":"* **Lecture Index**: Unique identifier for each lecture (Starting from 0)","lastModifiedDate":"2023-02-27"},{"lineNumber":536,"author":{"gitId":"joytqt-1202"},"content":"* **Video Index**: Unique identifier for each video (Starting from 0)","lastModifiedDate":"2023-02-27"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shaowi":90,"joytqt-1202":191,"-":308}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"LE TRACKER is a gamified tracking application that allows fast typist to easily log their lecture progress, search for lecture by mod code/ keywords/ topics for a stress-free learning environment. Unlike todo list applications, LE TRACKER is tailored to the needs of students; it provides additional information specific to lecture media such as watch progress and topics.","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"- Table of Contents","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"  - [Quick Start](#quick-start)","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"  - [Features](#features)","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"## Quick Start","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"2. Type the command in the command box.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"3. Press Enter to execute it. e.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"- List","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"  - `list /module`: Lists the names of all the recorded modules","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"shaowi"},"content":"  - `list /module /{module_code}`: Lists all the videos recorded in that module code","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"- Add","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"  - `add-module /code {module_code} [/name {module_name}]`: Adds a module to Le Tracker","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"shaowi"},"content":"  - `add-lecture /module {module_code}`: Adds a lecture to a module","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"  - `add-video /module {module_name} /lecture {lecture_index} /video {video_name}`: Adds a video to the module code","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"shaowi"},"content":"- Mark/Unmark","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"shaowi"},"content":"  - `mark /module {module_code} /lecture {lecture_index} /video {video_name}`: Marks a video as watched","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"shaowi"},"content":"  - `unmark /module {module_code} /lecture {lecture_index} /video {video_name}`: Unmarks a video as unwatched","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"shaowi"},"content":"- Delete","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"shaowi"},"content":"  - `delete-module {module_code}`: Deletes a module from Le Tracker","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"shaowi"},"content":"  - `delete-lecture /module {module_code} /lecture {lecture_id}`: Deletes the specified lecture from the specified module","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"  - `delete-video /module {module_code} /lecture {lecture_id} /video {video_id}`: Deletes the specified video from the specified lecture from the specified module","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"shaowi"},"content":"- Tag","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"  - `tag /module {module_code} /lecture {lecture_id} /description {tag_description}`: Tags a module from Le Tracker","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"  - `untag /module {module_code} /lecture {lecture_id} /tag {tag_id}`: Untags a module from Le Tracker","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"shaowi"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"- Words encapsulated in `{}` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"  e.g. in `add-module /code {module_code}`, `{module_code}` is a parameter which can be used as `add-module /code CS2040`.","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"shaowi"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"  e.g `/code {module_code} [/name {module_name}]` can be used as `/code CS2040 /name Data Structures \u0026 Algorithms` or as `/code CS2040`.","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"shaowi"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"  e.g. if the command specifies `/code {module_code} /name {module_name}`, `/name {module_name} /code {module_code}` is also acceptable.","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"shaowi"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"  e.g. if you specify `/code CS2030 /code CS2040`, only `CS2040` will be taken.","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"### Add a Module","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"Adds a module to Le Tracker","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"Format: `add-module /code {module_code} [/name {module_name}]`","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"- `module_code` has to be unique","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"- If the name argument is not specified, the module will have no name","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"hingen"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"- `add-module /code CS2040 /name Data Structures \u0026 Algorithms`","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"### Add a Lecture","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"hingen"},"content":"Adds a lecture to a module","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"hingen"},"content":"Format: `add-lecture /module {module_code}`","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"hingen"},"content":"- `module_code` has to belong to an existing module","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"hingen"},"content":"- `add-lecture /module CS2040`","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"### Add a Video","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"Adds a video to a lecture","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"Format: `add-video /module {module_name} /lecture {lecture_index} /video {video_name}`","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"- `module_code` must belong to an existing module","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"- `lecture_index` must belong to an existing lecture","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"- `video_name` has to be unique","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"- `add-video /module CS2040 /lecture 1 /video lecture-01-part-1`","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"joytqt-1202"},"content":"### Mark/Unmark a Video","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"joytqt-1202"},"content":"Marks/Unmarks a video as watched/unwatched in a lecture of its specified module","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"joytqt-1202"},"content":"Format: `mark /module {module_name} /lecture {lecture_index} /video {video_name}`","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"joytqt-1202"},"content":"Format: `unmark /module {module_name} /lecture {lecture_index} /video {video_name}`","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"joytqt-1202"},"content":"Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"joytqt-1202"},"content":"- `mark /module CS2040 /lecture 1 /video lecture_01-part-1`","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"joytqt-1202"},"content":"- `unmark /module CS2040 /lecture 1 /video lecture_01-part-1`","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"joytqt-1202"},"content":"### Delete a Module","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"joytqt-1202"},"content":"Deletes the specified module and all its embodied content from the application","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"joytqt-1202"},"content":"Format: `delete-module CS2040`","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"joytqt-1202"},"content":"- Deletes the module of the specified `module_code`","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"joytqt-1202"},"content":"- If the module does not exist, nothing happens","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"joytqt-1202"},"content":"Examples: ","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"joytqt-1202"},"content":"- `delete-module CS2040`","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"joytqt-1202"},"content":"### Delete a Lecture","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"joytqt-1202"},"content":"Deletes the specified lecture from the specified module","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"joytqt-1202"},"content":"Format: `delete-lecture /module {module_code} /lecture {lecture_id}`","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"joytqt-1202"},"content":"- Deletes the lecture of the specified `lecture_id` from the specified `module_code`","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"joytqt-1202"},"content":"- The `lecture_id` **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"joytqt-1202"},"content":"- `delete-lecture CS2040 /lecture 1` deletes the 1st lecture in the results of the `list /module CS2040` command","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"joytqt-1202"},"content":"### Delete a Video","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"joytqt-1202"},"content":"Deletes the specified video from the specified lecture from the specified module","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"joytqt-1202"},"content":"Format: `delete-video /module {module_code} /lecture {lecture_id} /video {video_id}`","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"joytqt-1202"},"content":"- Deletes the video of the specified `video_id` from the specified `lecture_id` of the specified `module_code`","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"joytqt-1202"},"content":"- `video_id` refers to the index number shown when listing the videos of the specified lecture using the `lecture_id` in the specified module using the `module_code`","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"joytqt-1202"},"content":"- the `video_id` **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"joytqt-1202"},"content":"Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"joytqt-1202"},"content":"- `delete-video /module CS2040 /lecture 1 /video 3` deletes the 3rd video in the results of the `list /module CS2040 /lecture 1` command","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"lennoxtr"},"content":"### Tag a lecture","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"lennoxtr"},"content":"Tags a specified lecture from a specified module with a description","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"lennoxtr"},"content":"Format:  `tag /module {module_code} /lecture {lecture_id} /description {tag_description}`","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"lennoxtr"},"content":"- Tag a lecture of the specified `lecture_id` from the specified `module_code`","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"lennoxtr"},"content":"- The `lecture_id` refers to the index number shown when listing the lectures specified in it’s `module_code`","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"lennoxtr"},"content":"- The `lecture_id` **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"lennoxtr"},"content":"- `tag /module CS2040 /lecture 1 /description Boohoo` tags the 1st lecture in the results of the `list /module CS2040` command with the description `Boohoo`","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"lennoxtr"},"content":"### Delete a tag","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"lennoxtr"},"content":"Deletes a specified tag of a specified lecture","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"lennoxtr"},"content":"Format: `untag /module {module_code} /lecture {lecture_id} /tag {tag_id}`","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"lennoxtr"},"content":"- Untag a lecture of the specified `lecture_id` from the specified `module_code`","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"lennoxtr"},"content":"- The `lecture_id` refers to the index number shown when listing the lectures specified in it’s `module_code`","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"lennoxtr"},"content":"- The `lecture_id` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"lennoxtr"},"content":"- The `tag_id` refers to the index number shown when listing the tags available of a lecture","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"lennoxtr"},"content":"- The `tag_id` **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"lennoxtr"},"content":"Example: `untag /module CS2040 /lecture 1 /tag 1` deletes the 1st tag of the 1st lecture in the results of the `list /module CS2040` command","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"jedidiahC"},"content":"### Progress","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"jedidiahC"},"content":"Displays lecture progress for a specified module","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"jedidiahC"},"content":"Format: `progress {module_code}`","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"jedidiahC"},"content":"- Displays progress of a specified `module_code`","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":173,"author":{"gitId":"jedidiahC"},"content":"Example: `progress CS2040S` lists progress for the module CS2040S","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"jedidiahC"},"content":"### List Modules","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"jedidiahC"},"content":"Lists all modules","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"jedidiahC"},"content":"Format: `list`","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"jedidiahC"},"content":"### List Lectures of Modules","lastModifiedDate":"2023-03-02"},{"lineNumber":181,"author":{"gitId":"jedidiahC"},"content":"Lists all lectures belonging to a specified module code","lastModifiedDate":"2023-03-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":183,"author":{"gitId":"jedidiahC"},"content":"Format: `list /module {module_code}`","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"jedidiahC"},"content":"- Lists all lectures of a specified `module_code`","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"jedidiahC"},"content":"Examples: `list /module CS2040S` lists lectures belonging to CS2040S","lastModifiedDate":"2023-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":188,"author":{"gitId":"jedidiahC"},"content":"### List Videos of Lectures","lastModifiedDate":"2023-03-02"},{"lineNumber":189,"author":{"gitId":"jedidiahC"},"content":"Lists all video belonging to a specified lecture code of a specified module code","lastModifiedDate":"2023-03-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":191,"author":{"gitId":"jedidiahC"},"content":"Format: `list /module {module_code} /lecture {lecture_id}`","lastModifiedDate":"2023-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":193,"author":{"gitId":"jedidiahC"},"content":"Examples: `list /module CS2040 /lecture 1` Lists videos belongs to lecture 1 of module CS2040S","lastModifiedDate":"2023-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"hingen"},"content":"Le Tracker data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":201,"author":{"gitId":"hingen"},"content":"Le Tracker data are saved as a JSON file `[JAR file location]/data/letracker.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"hingen"},"content":"If your changes to the data file makes its format invalid, Le Tracker will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":207,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"hingen"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Le Tracker home folder.","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"shaowi"},"content":"| Action               | Format, Examples                                                                                                                                         |","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"hingen"},"content":"| -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"hingen"},"content":"| **Add a Module**     | `add-module /code {module_code} [/name {module_name}]` \u003cbr\u003e e.g., `add-module /code CS2040 /name Data Structures \u0026 Algorithms`                           |","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"hingen"},"content":"| **Add a Lecture**    | `add-lecture /module {module_code}` \u003cbr\u003e e.g., `add-lecture /module CS2040`                                                                              |","lastModifiedDate":"2023-02-25"},{"lineNumber":222,"author":{"gitId":"hingen"},"content":"| **Add a Video**      | `add-video /module {module_name} /lecture {lecture_index} /video {video_name}` \u003cbr\u003e e.g., `add-video /module CS2040 /lecture 1 /video lecture-01-part-1` |","lastModifiedDate":"2023-02-25"},{"lineNumber":223,"author":{"gitId":"lennoxtr"},"content":"| **Tag a Lecture**    | `tag /module {module_code} /lecture {lecture_id} /description {tag_description}` \u003cbr\u003e e.g, `tag /module CS2040 /lecture 1 /description Boohoo`|","lastModifiedDate":"2023-03-02"},{"lineNumber":224,"author":{"gitId":"lennoxtr"},"content":"| **Delete a Tag**     | `untag /module {module_code} /lecture {lecture_id} /tag {tag_id}` \u003cbr\u003e e.g,  `untag /module CS2040 /lecture 1 /tag 1` |","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"hingen":40,"shaowi":31,"joytqt-1202":29,"lennoxtr":18,"jedidiahC":17,"-":89}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"hingen"},"content":"    content: \"Le Tracker\";","lastModifiedDate":"2023-02-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"hingen":1,"-":293}},{"path":"docs/team/hingen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"layout: page","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"title: Hingen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"### Project: Le Tracker","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"For fast typist NUS students who need a fun way to organise and track lecture material, Le Tracker is a gamified","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"tracking application that allows them to easily log their lecture progress, search for lecture by mod code/ keywords/","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"topics for a stress-free learning environment. Unlike todo list applications, Le Tracker is tailored to the needs of","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"students; it provides additional information specific to lecture media such as watch progress and topics.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"#### Table of Contents","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"- [Code Contributions](#code)","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"- [UG Contributions](#user-guide)","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"- [DG Contributions](#developer-guide)","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"- [Team-Based Tasks Contributions](#team-based-tasks)","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"- [Review/Mentoring Contributions](#reviewmentoring)","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"- [Misc Contributions](#misc)","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"#### Code and Features","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"Check out the code [here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dhingen\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"* Feature 1","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"* Feature 2","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"#### User Guide","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"#### Developer Guide","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"#### Team-Based Tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"* Created GitHub organisation","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"* Created team repository","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"* Created Week 7 GitHub issues and milestones","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"* Updated project site-wide settings","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"#### Review/Mentoring","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"#### Misc","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"to be added soon","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"hingen":43}},{"path":"docs/team/jedidiahc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jedidiahC"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"jedidiahC"},"content":"title: Jedidiah\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"jedidiahC"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"jedidiahC"},"content":"### Project: Le Tracker","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"jedidiahC"},"content":"For fast typist NUS students who need a fun way to organise and track lecture material, Le Tracker is a gamified","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"jedidiahC"},"content":"tracking application that allows them to easily log their lecture progress, search for lecture by mod code/ keywords/","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"jedidiahC"},"content":"topics for a stress-free learning environment. Unlike todo list applications, Le Tracker is tailored to the needs of","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"jedidiahC"},"content":"students; it provides additional information specific to lecture media such as watch progress and topics.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"jedidiahC"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"jedidiahC"},"content":"#### Table of Contents","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"jedidiahC"},"content":"#### Code and Features","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"jedidiahC"},"content":"* Feature 1","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"jedidiahC"},"content":"* Feature 2","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"jedidiahC"},"content":"#### User Guide","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"jedidiahC"},"content":"to be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"jedidiahC"},"content":"#### Developer Guide","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"jedidiahC"},"content":"to be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"jedidiahC"},"content":"#### Team-Based Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"jedidiahC"},"content":"#### Review/Mentoring","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"jedidiahC"},"content":"to be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"jedidiahC"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"jedidiahC"},"content":"#### Misc","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"jedidiahC"},"content":"to be added soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"jedidiahC":31}},{"path":"docs/team/joytqt-1202.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joytqt-1202"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"joytqt-1202"},"content":"layout: page","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"joytqt-1202"},"content":"title: Joy Tan QiaoTong\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"joytqt-1202"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"joytqt-1202"},"content":"## Overview","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"joytqt-1202"},"content":"Short overview of product","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"joytqt-1202"},"content":"- Opening 1-2 sentences may be reused by all team members","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"joytqt-1202"},"content":"- Anything beyond 1-2 sentences to be written separately","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"joytqt-1202"},"content":"## Summary of Contributions","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"joytqt-1202"},"content":"### Code Contributed","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"joytqt-1202"},"content":"### Enhancements Implemented","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"joytqt-1202"},"content":"### Contributions to UG","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"joytqt-1202"},"content":"(extracts are optional)","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"joytqt-1202"},"content":"### Contributions to DG","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"joytqt-1202"},"content":"(extracts are optional)","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"joytqt-1202"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"joytqt-1202"},"content":"### Reviewing/Mentoring Contributions","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"joytqt-1202"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"joytqt-1202"},"content":"### Contributions beyond the Project Team","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"joytqt-1202":27}},{"path":"docs/team/lennoxtr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"title: Khang Tran\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"### Project: Le Tracker","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"Le Tracker is a gamified tracking application to help NUS fast-typisting students organize","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"and track lecture material. ","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"#### Table of Contents","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"* **New Feature**: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"* **Code contributed**: TBA ","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"  * User Guide: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"  * Developer Guide: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"* **Team-Based Tasks**: TBA","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"* **Others**: TBA","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"lennoxtr":25,"-":14}},{"path":"docs/team/shaowi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"title: Shao Wee\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"### Project: LE TRACKER","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"LE TRACKER is a gamified tracking application that allows fast typist to easily log their lecture progress, search for lecture by mod code/ keywords/ topics for a stress-free learning environment. Unlike todo list applications, LE TRACKER is tailored to the needs of students; it provides additional information specific to lecture media such as watch progress and topics.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"**New Feature**: TBA","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"- TBA","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"**Code contributed**: [Repo link](https://github.com/shaowi/tp)","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"**Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"- TBA","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"**Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"shaowi"},"content":"- TBA","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"shaowi"},"content":"**Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"- User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"shaowi"},"content":"  - TBA","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"shaowi"},"content":"- Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"shaowi"},"content":"  - TBA","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"shaowi"},"content":"**Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"- TBA","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"shaowi"},"content":"**Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"shaowi"},"content":"- TBA","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"shaowi":39}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getTrackerFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hingen":1,"-":182}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.Lecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.ReadOnlyLecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.ReadOnlyModule;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.Video;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"    Predicate\u003c? super ReadOnlyModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"    // TODO: Replace this","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"    // TODO: Replace this","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"     * Replaces tracker data with the data in {@code tracker}.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"    void setTracker(ReadOnlyTracker tracker);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"     * Returns the Tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"    ReadOnlyTracker getTracker();","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"     * Returns true if a module with the same code as {@code module} exists in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"    boolean hasModule(ReadOnlyModule module);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"hingen"},"content":"     * Deletes the given module.","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"hingen"},"content":"     * The module must exist in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"hingen"},"content":"    void deleteModule(ReadOnlyModule target);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"hingen"},"content":"     * Adds the given module.","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"hingen"},"content":"    void addModule(Module module);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"hingen"},"content":"     * Replaces the given module {@code target} with {@code editedModule}.","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"     * The module code of {@code editedModule} must not be the same as another existing module in the tracker.","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"hingen"},"content":"    void setModule(ReadOnlyModule target, Module editedModule);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"     * Returns true if a lecture with the same name as {@code lecture} exists in {@code module}.","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"hingen"},"content":"    boolean hasLecture(ReadOnlyModule module, ReadOnlyLecture lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"hingen"},"content":"     * Deletes the given lecture {@code target}.","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"hingen"},"content":"     * The lecture must exist in {@code module}.","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"hingen"},"content":"    void deleteLecture(ReadOnlyModule module, ReadOnlyLecture target);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"hingen"},"content":"     * Adds the given lecture to {@code module}.","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"hingen"},"content":"    void addLecture(ReadOnlyModule module, Lecture lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"hingen"},"content":"     * Replaces the given lecture {@code target} with {@code editedLecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in {@code module}.","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"hingen"},"content":"     * The name of {@code editedLecture} must not be the same as another existing lecture in {@code module}.","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"hingen"},"content":"    void setLecture(ReadOnlyModule module, ReadOnlyLecture target, Lecture editedLecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"hingen"},"content":"     * Returns true if a video with the same name as {@code video} exists in {@code lecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"hingen"},"content":"    boolean hasVideo(ReadOnlyLecture lecture, Video video);","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"hingen"},"content":"     * Deletes the given video {@code target}.","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"hingen"},"content":"     * The video must exist in {@code lecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"hingen"},"content":"    void deleteVideo(ReadOnlyLecture lecture, Video video);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"hingen"},"content":"     * Adds the given video to {@code lecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"hingen"},"content":"    void addVideo(ReadOnlyLecture lecture, Video video);","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"hingen"},"content":"     * Replaces the given video {@code target} with {@code editedVideo}.","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in {@code lecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"hingen"},"content":"     * The name of {@code editedVideo} must not be the same as another existing video in {@code lecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"hingen"},"content":"    void setVideo(ReadOnlyLecture lecture, Video target, Video editedVideo);","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"hingen"},"content":"    /** Returns an unmodifiable view of the filtered module list */","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"hingen"},"content":"    ObservableList\u003c? extends ReadOnlyModule\u003e getFilteredModuleList();","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"hingen"},"content":"     * Updates the filter of the filtered module list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"hingen"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"hingen"},"content":"    void updateFilteredModuleList(Predicate\u003c? super ReadOnlyModule\u003e predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":184,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"hingen"},"content":"    // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hingen":107,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.Lecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.ReadOnlyLecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.ReadOnlyModule;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.Video;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"    private final Tracker tracker;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"    private final FilteredList\u003c? extends ReadOnlyModule\u003e filteredModules;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"    private final AddressBook addressBook; // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons; // TODO: Remove this","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"        this.tracker \u003d new Tracker(); //TODO: assign this from constructor arguments","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"        filteredModules \u003d new FilteredList\u003c\u003e(this.tracker.getModuleList());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"        return userPrefs.getTrackerFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"        userPrefs.setTrackerFilePath(addressBookFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tracker \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"    public void setTracker(ReadOnlyTracker tracker) {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"        this.tracker.resetData(tracker);","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"hingen"},"content":"    public ReadOnlyTracker getTracker() {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"        return tracker;","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"hingen"},"content":"    public boolean hasModule(ReadOnlyModule module) {","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"hingen"},"content":"        return tracker.hasModule(module);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"hingen"},"content":"    public void deleteModule(ReadOnlyModule target) {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"hingen"},"content":"        tracker.removeModule(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"hingen"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"hingen"},"content":"        tracker.addModule(module);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"hingen"},"content":"        updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"hingen"},"content":"    public void setModule(ReadOnlyModule target, Module editedModule) {","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"hingen"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"hingen"},"content":"        tracker.setModule(target, editedModule);","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"hingen"},"content":"    public boolean hasLecture(ReadOnlyModule module, ReadOnlyLecture lecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"hingen"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"hingen"},"content":"        return module.hasLecture(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"hingen"},"content":"    public void deleteLecture(ReadOnlyModule module, ReadOnlyLecture target) {","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"hingen"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"hingen"},"content":"        ((Module) module).removeLecture(target);","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"hingen"},"content":"    public void addLecture(ReadOnlyModule module, Lecture lecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"hingen"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"hingen"},"content":"        ((Module) module).addLecture(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"hingen"},"content":"    public void setLecture(ReadOnlyModule module, ReadOnlyLecture target, Lecture editedLecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"hingen"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"hingen"},"content":"        ((Module) module).setLecture(target, editedLecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"hingen"},"content":"    public boolean hasVideo(ReadOnlyLecture lecture, Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"hingen"},"content":"        requireNonNull(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"hingen"},"content":"        return lecture.hasVideo(video);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"hingen"},"content":"    public void deleteVideo(ReadOnlyLecture lecture, Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"hingen"},"content":"        requireNonNull(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"hingen"},"content":"        ((Lecture) lecture).removeVideo(video);","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"hingen"},"content":"    public void addVideo(ReadOnlyLecture lecture, Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"hingen"},"content":"        requireNonNull(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"hingen"},"content":"        ((Lecture) lecture).addVideo(video);","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"hingen"},"content":"    public void setVideo(ReadOnlyLecture lecture, Video target, Video editedVideo) {","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"hingen"},"content":"        requireNonNull(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"hingen"},"content":"        ((Lecture) lecture).setVideo(target, editedVideo);","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"hingen"},"content":"        //CHECKSTYLE.ON: SeparatorWrap","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"hingen"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Module List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"hingen"},"content":"    public ObservableList\u003c? extends ReadOnlyModule\u003e getFilteredModuleList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"hingen"},"content":"        return filteredModules;","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"hingen"},"content":"    public void updateFilteredModuleList(Predicate\u003c? super ReadOnlyModule\u003e predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"hingen"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"hingen"},"content":"        filteredModules.setPredicate(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":265,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 tracker.equals(other.tracker)","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 filteredModules.equals(other.filteredModules);","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hingen":123,"-":147}},{"path":"src/main/java/seedu/address/model/ReadOnlyTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.ReadOnlyModule;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":" * Unmodifiable view of a tracker","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"public interface ReadOnlyTracker {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"     * Returns an unmodifiable view of the module list.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"     * This list will not contain any duplicate modules.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"    ObservableList\u003c? extends ReadOnlyModule\u003e getModuleList();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"     * Returns the module whose module code is the same as {@code code}. If no such module exist, return null.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"    ReadOnlyModule getModule(ModuleCode code);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":22}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"    Path getTrackerFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"hingen":1,"-":15}},{"path":"src/main/java/seedu/address/model/Tracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.ReadOnlyModule;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.UniqueModuleList;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":" * Wraps all data at the tracker level","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":" * Duplicate modules are not allowed (by .isSameModule comparison)","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"public class Tracker implements ReadOnlyTracker {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"    private final UniqueModuleList modules;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"    {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"        modules \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    public Tracker() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * Creates a Tracker using the Modules in the {@code toBeCopied}","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"    public Tracker(ReadOnlyTracker toBeCopied) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"        this();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"     * Replaces the contents of the module list with {@code modules}.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"     * Resets the existing data of this {@code Tracker} with {@code newData}.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"    public void resetData(ReadOnlyTracker newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"        setModules(newData.getModuleList().stream().map((d) -\u003e (Module) d).collect(Collectors.toList()));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"    //// module-level operations","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"     * Returns true if a module with the same code as {@code module} exists in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"    public boolean hasModule(ReadOnlyModule module) {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"        return modules.contains((Module) module);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"     * Adds a module to the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"hingen"},"content":"     * The module must not already exist in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"hingen"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"        modules.add(module);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"hingen"},"content":"     * Replaces the given module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"hingen"},"content":"     * The module of {@code editedModule} must not be the same as another existing module in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"    public void setModule(ReadOnlyModule target, Module editedModule) {","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"hingen"},"content":"        requireNonNull(editedModule);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"        modules.setModule((Module) target, editedModule);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"     * Removes {@code key} from this {@code Tracker}.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"     * {@code key} must exist in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"hingen"},"content":"    public void removeModule(ReadOnlyModule key) {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"hingen"},"content":"        modules.remove((Module) key);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"hingen"},"content":"    //// util methods","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"hingen"},"content":"        return modules.asUnmodifiableObservableList().size() + \" modules\";","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"hingen"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"hingen"},"content":"    public ObservableList\u003c? extends ReadOnlyModule\u003e getModuleList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"hingen"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"hingen"},"content":"    public ReadOnlyModule getModule(ModuleCode code) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"hingen"},"content":"        return getModuleList()","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"hingen"},"content":"                .stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"hingen"},"content":"                .filter((m) -\u003e m.getCode().equals(code))","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"hingen"},"content":"                .findFirst()","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"hingen"},"content":"                .orElse(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"hingen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"hingen"},"content":"                || (other instanceof Tracker // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 modules.equals(((Tracker) other).modules));","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"hingen"},"content":"        return modules.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":131}},{"path":"src/main/java/seedu/address/model/UniqueDataList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"import java.util.function.BiPredicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":" * A list of data that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":" * A data is considered unique by comparing using {@code isSameChecker.test(T, T)}. As such, adding and updating of","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":" * data uses {@code isSameChecker.test(T, T)} for equality so as to ensure that the data being added or updated is","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":" * unique in the UniqueDataList. However, the removal of a data uses {@code T#equals(Object)} so as to ensure that","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":" * the data with exactly the same fields will be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"public class UniqueDataList\u003cT\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    private final BiPredicate\u003cT, T\u003e isSameChecker;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"    private final Supplier\u003cRuntimeException\u003e duplicateExceptionCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    private final Supplier\u003cRuntimeException\u003e notFoundExceptionCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * Constructs a {@code UniqueDataList\u003cT\u003e}.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"     * @param isSameChecker Use to check if 2 data are the same.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"     * @param duplicateExceptionCreator Creates any exception thrown due to duplicate data.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"     * @param notFoundExceptionCreator Creates any exception thrown due to data not found.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"    public UniqueDataList(BiPredicate\u003cT, T\u003e isSameChecker,","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"            Supplier\u003cRuntimeException\u003e duplicateExceptionCreator,","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"            Supplier\u003cRuntimeException\u003e notFoundExceptionCreator) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"        this.isSameChecker \u003d isSameChecker;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"        this.duplicateExceptionCreator \u003d duplicateExceptionCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"        this.notFoundExceptionCreator \u003d notFoundExceptionCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"     * Returns true if the list contains an equivalent data as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"        return internalList.stream().anyMatch((data) -\u003e isSameChecker.test(toCheck, data));","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"     * Adds a data to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"     * The data must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"            throw duplicateExceptionCreator.get();","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"     * Replaces the data {@code target} in the list with {@code editedData}.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"hingen"},"content":"     * {@code editedData} must not be the same as another existing data in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"hingen"},"content":"    public void setData(T target, T editedData) {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"        requireAllNonNull(target, editedData);","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"hingen"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"hingen"},"content":"            throw notFoundExceptionCreator.get();","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"hingen"},"content":"        if (!isSameChecker.test(target, editedData) \u0026\u0026 contains(editedData)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"            throw duplicateExceptionCreator.get();","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"        internalList.set(index, editedData);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"     * Removes the equivalent data from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"     * The data must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"hingen"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"hingen"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"hingen"},"content":"            throw notFoundExceptionCreator.get();","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"hingen"},"content":"    public void setAllData(UniqueDataList\u003cT\u003e replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"hingen"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"hingen"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"hingen"},"content":"     * Replaces the contents of this list with {@code data}.","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"hingen"},"content":"     * {@code data} must not contain duplicate data.","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"hingen"},"content":"    public void setAllData(List\u003cT\u003e data) {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"hingen"},"content":"        requireAllNonNull(data);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"hingen"},"content":"        if (!dataAreUnique(data)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"hingen"},"content":"            throw duplicateExceptionCreator.get();","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"hingen"},"content":"        internalList.setAll(data);","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"hingen"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"hingen"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"hingen"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"hingen"},"content":"     * Returns the backing list as an unmodifiable {@code List}.","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"hingen"},"content":"    public List\u003cT\u003e asUnmodifiableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"hingen"},"content":"        return Collections.unmodifiableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"hingen"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"hingen"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"hingen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"hingen"},"content":"                || (other instanceof UniqueDataList\u003c?\u003e // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"hingen"},"content":"                        \u0026\u0026 internalList.equals(((UniqueDataList\u003c?\u003e) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"hingen"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"hingen"},"content":"     * Returns true if {@code data} contains only unique data.","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"hingen"},"content":"    private boolean dataAreUnique(List\u003cT\u003e data) {","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"hingen"},"content":"        for (int i \u003d 0; i \u003c data.size() - 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"hingen"},"content":"            for (int j \u003d i + 1; j \u003c data.size(); j++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"hingen"},"content":"                if (isSameChecker.test(data.get(i), data.get(j))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"hingen"},"content":"                    return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"hingen"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"hingen"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"hingen"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":163}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"    private Path trackerFilePath \u003d Paths.get(\"data\" , \"letracker.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"        setTrackerFilePath(newUserPrefs.getTrackerFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"    public Path getTrackerFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"        return trackerFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"    public void setTrackerFilePath(Path trackerFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"        requireNonNull(trackerFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"        this.trackerFilePath \u003d trackerFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 trackerFilePath.equals(o.trackerFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"        return Objects.hash(guiSettings, trackerFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"hingen"},"content":"        sb.append(\"\\nLocal data file location : \" + trackerFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hingen":10,"-":77}},{"path":"src/main/java/seedu/address/model/lecture/Lecture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.lecture;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.UniqueVideoList;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.Video;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.VideoName;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":" * Represents a lecture of a module that is in the tracker..","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable with the exception of video list.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"public class Lecture implements ReadOnlyLecture {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"    private final LectureName name;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"    private final UniqueVideoList videos \u003d new UniqueVideoList();","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"     * Constructs a {@code Lecture}.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"     * @param name The name of the lecture.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"     * @param tags The tags applied to the module.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"    public Lecture(LectureName name, Set\u003cTag\u003e tags, List\u003cVideo\u003e videos) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"        requireAllNonNull(name, tags, videos);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"        this.videos.setVideos(videos);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"    public LectureName getName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"    public ObservableList\u003cVideo\u003e getVideoList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"        return videos.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"    public Video getVideo(VideoName name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"        return getVideoList()","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"                .stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"                .filter((v) -\u003e v.getName().equals(name))","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"                .findFirst()","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"                .orElse(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"    public boolean hasVideo(Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"        requireNonNull(video);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"        return videos.contains(video);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"hingen"},"content":"    public boolean isSameLecture(Lecture other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"hingen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"hingen"},"content":"        return other !\u003d null","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 other.getName().equals(getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"     * Adds a video to the lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"hingen"},"content":"     * The video must not already exist in the lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"    public void addVideo(Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"        videos.add(video);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"     * Replaces the given video {@code target} in the list with {@code editedVideo}.","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"hingen"},"content":"     * The video of {@code editedVideo} must not be the same as another existing video in the lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"    public void setVideo(Video target, Video editedVideo) {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"hingen"},"content":"        requireNonNull(editedVideo);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"hingen"},"content":"        videos.setVideo(target, editedVideo);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"hingen"},"content":"     * Removes {@code key} from this {@code Lecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"hingen"},"content":"     * {@code key} must exist in the lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"hingen"},"content":"     * @param key","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"hingen"},"content":"    public void removeVideo(Video key) {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"hingen"},"content":"        videos.remove(key);","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"hingen"},"content":"     * Returns true if both lectures have the same fields.","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"hingen"},"content":"     * This defines a stronger notion of equality between two lectures.","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"hingen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"hingen"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"hingen"},"content":"        if (!(other instanceof Lecture)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"hingen"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"hingen"},"content":"        Lecture otherLecture \u003d (Lecture) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"hingen"},"content":"        return otherLecture.getName().equals(getName())","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 otherLecture.getTags().equals(getTags())","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 otherLecture.getVideoList().equals(getVideoList());","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"hingen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"hingen"},"content":"        return Objects.hash(name, tags, videos);","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"hingen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"hingen"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"hingen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"hingen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"hingen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"hingen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"hingen"},"content":"        List\u003cVideo\u003e videos \u003d getVideoList();","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"hingen"},"content":"        if (!videos.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"hingen"},"content":"            builder.append(\"; Videos: \");","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"hingen"},"content":"            videos.forEach(builder::append);","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"hingen"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":156}},{"path":"src/main/java/seedu/address/model/lecture/LectureName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.lecture;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":" * Represents a lecture\u0027s name in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":" * Guarantees: immutable, is valid as declared in {@link #isValidName(String)}.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"public class LectureName {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"     * Constructs a {@code LectureName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"    public LectureName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"        return fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"                || (other instanceof LectureName // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 fullName.equals(((LectureName) other).fullName)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":59}},{"path":"src/main/java/seedu/address/model/lecture/ReadOnlyLecture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.lecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.Video;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.VideoName;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":" * Unmodifiable view of a lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"public interface ReadOnlyLecture {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"     * Returns the name of the lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"    public LectureName getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"    public Set\u003cTag\u003e getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"     * Returns an immutable video list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"    public ObservableList\u003cVideo\u003e getVideoList();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"     * Returns the video whose name is the same as {@code name}. If no such video exist, return null.","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    public Video getVideo(VideoName name);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"     * Returns true if a video with the same name as {@code video} exists in the lecture.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"    public boolean hasVideo(Video video);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"     * Returns true if both lectures have the same name.","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"     * This defines a weaker notion of equality between two lectures.","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"    public boolean isSameLecture(Lecture other);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"hingen":46}},{"path":"src/main/java/seedu/address/model/lecture/UniqueLectureList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.lecture;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import seedu.address.model.UniqueDataList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.exceptions.DuplicateLectureException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.exceptions.LectureNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":" * A list of lectures that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":" * A lecture is considered unique by comparing using {@code Lecture#isSameLecture(Lecture)}. As such, adding and","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":" * updating of lectures uses Lecture#isSameLecture(Lecture) for equality so as to ensure that the lecture being added or","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":" * updated is unique in terms of code in the UniqueLectureList. However, the removal of a lecture uses","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":" * Lecture#equals(Object) so as to ensure that the lecture with exactly the same fields will be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":" * @see Lecture#isSameLecture(Lecture)","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"public class UniqueLectureList extends UniqueDataList\u003cLecture\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"    public UniqueLectureList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"        super((a, b) -\u003e a.isSameLecture(b), DuplicateLectureException::new, LectureNotFoundException::new);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     * Returns true if the list contains an equivalent lecture as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    public boolean contains(Lecture toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"        return super.contains(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * Adds a lecture to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     * The lecture must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"    public void add(Lecture toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"        super.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"     * Replaces the lecture {@code target} in the list with {@code editedLecture}.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"     * The name of {@code editedLecture} must not be the same as another existing lecture in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    public void setLecture(Lecture target, Lecture editedLecture) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"        super.setData(target, editedLecture);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"     * Removes the equivalent lecture from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"     * The lecture must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"    public void remove(Lecture toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"        super.remove(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"    public void setLectures(UniqueLectureList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"        super.setAllData(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"     * Replaces the contents of this list with {@code lectures}.","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"     * {@code lectures} must not contain duplicate lectures.","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"    public void setLectures(List\u003cLecture\u003e lectures) {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"        super.setAllData(lectures);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":72}},{"path":"src/main/java/seedu/address/model/lecture/exceptions/DuplicateLectureException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.lecture.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":" * Signals that the operation will result in duplicate Lectures (Lectures are considered duplicates if they have the","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":" * same name).","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"public class DuplicateLectureException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"    public DuplicateLectureException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"        super(\"Operation would result in duplicate lectures\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":11}},{"path":"src/main/java/seedu/address/model/lecture/exceptions/LectureNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.lecture.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":" * Signals that the operation is unable to find the specified lecture.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"public class LectureNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":6}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.Lecture;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.LectureName;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.ReadOnlyLecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.UniqueLectureList;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":" * Represents a module in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":" * Guarantees: details are not null, field values are validated, immutable with exception of lecture list.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"public class Module implements ReadOnlyModule {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"    private final ModuleCode code;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"    private final ModuleName name;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    private final UniqueLectureList lectures \u003d new UniqueLectureList();","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"     * Every field must be not null.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * @param code The module\u0027s code.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     * @param name The name of the module.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"     * @param tags The tags applied to the module.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"     * @param lectures The lectures of the module.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"    public Module(ModuleCode code, ModuleName name, Set\u003cTag\u003e tags, List\u003cLecture\u003e lectures) {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"        requireAllNonNull(code, name, tags, lectures);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"        this.lectures.setLectures(lectures);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"    public ModuleCode getCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"        return code;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"    public ModuleName getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"        return name;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"    public ObservableList\u003c? extends ReadOnlyLecture\u003e getLectureList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"        return lectures.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"    public ReadOnlyLecture getLecture(LectureName name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"        return getLectureList()","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"                .stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"                .filter((l) -\u003e l.getName().equals(name))","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"hingen"},"content":"                .findFirst()","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"hingen"},"content":"                .orElse(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"    public boolean hasLecture(ReadOnlyLecture lecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"hingen"},"content":"        requireNonNull(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"hingen"},"content":"        return lectures.contains((Lecture) lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"    public boolean isSameModule(Module other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"hingen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"hingen"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"hingen"},"content":"        return other !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 other.getCode().equals(getCode());","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"hingen"},"content":"     * Adds a lecture to the module.","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"hingen"},"content":"     * The lecture must not already exist in the module.","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"hingen"},"content":"    public void addLecture(Lecture lecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"hingen"},"content":"        lectures.add(lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"hingen"},"content":"     * Replaces the given lecture {@code target} in the list with {@code editedLecture}.","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the module.","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"hingen"},"content":"     * The lecture of {@code editedLecture} must not be the same as another existing lecture in the module.","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"hingen"},"content":"    public void setLecture(ReadOnlyLecture target, Lecture editedLecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"hingen"},"content":"        requireNonNull(editedLecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"hingen"},"content":"        lectures.setLecture((Lecture) target, editedLecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"hingen"},"content":"     * Removes {@code key} from this {@code Module}.","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"hingen"},"content":"     * {@code key} must exist in the module.","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"hingen"},"content":"     * @param key","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"hingen"},"content":"    public void removeLecture(ReadOnlyLecture key) {","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"hingen"},"content":"        lectures.remove((Lecture) key);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"hingen"},"content":"     * Returns true if both modules have the same fields.","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"hingen"},"content":"     * This defines a stronger notion of equality between two modules.","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"hingen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"hingen"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"hingen"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"hingen"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"hingen"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"hingen"},"content":"        return otherModule.getCode().equals(getCode())","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 otherModule.getName().equals(getName())","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 otherModule.getTags().equals(getTags())","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 otherModule.getLectureList().equals(getLectureList());","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"hingen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"hingen"},"content":"        return Objects.hash(code, name, tags, lectures);","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"hingen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"hingen"},"content":"        builder.append(getCode());","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"hingen"},"content":"        if (!name.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"hingen"},"content":"            builder.append(\"; Name: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"hingen"},"content":"                .append(getName());","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"hingen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"hingen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"hingen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"hingen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"hingen"},"content":"        ObservableList\u003c? extends ReadOnlyLecture\u003e lectures \u003d getLectureList();","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"hingen"},"content":"        if (!lectures.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"hingen"},"content":"            builder.append(\"; Lectures: \");","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"hingen"},"content":"            lectures.forEach(builder::append);","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"hingen"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":172}},{"path":"src/main/java/seedu/address/model/module/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":" * Represents a module\u0027s code in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"public class ModuleCode {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"            \"Module codes should begin with uppercase alphabet characters, followed by numeric characters, optionally \"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"                    + \"followed by more uppercase alphabet characters, and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z]+[0-9]+[A-Z]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"    private final String code;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"     * Constructs a {@code ModuleCode}.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"     * @param code A valid code.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"    public ModuleCode(String code) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"        requireNonNull(code);","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    public static boolean isValidCode(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"        return code;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"                || (other instanceof ModuleCode","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 code.equals(((ModuleCode) other).code));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"        return code.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":52}},{"path":"src/main/java/seedu/address/model/module/ModuleName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":" * Represents a module\u0027s name in the tracker.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"public class ModuleName {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"    private final String name;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"     * Constructs a {@code ModuleName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"     * @param name A possibly empty, but non-NULL, name.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"    public ModuleName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"     * Returns true if the name is empty. Otherwise, returns false.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"     * @return true if the name is empty. Otherwise, false.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"        return name.isEmpty();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"        return name;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"                || (other instanceof ModuleName","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 name.equals(((ModuleName) other).name));","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"        return name.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":48}},{"path":"src/main/java/seedu/address/model/module/ReadOnlyModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.LectureName;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.ReadOnlyLecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":" * Unmodifiable view of a module.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"public interface ReadOnlyModule {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"     * Returns the module code.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"    public ModuleCode getCode();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"     * Returns the module\u0027s name.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"     * @return","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"    public ModuleName getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"    public Set\u003cTag\u003e getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"     * Returns an immutable lecture list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"    public ObservableList\u003c? extends ReadOnlyLecture\u003e getLectureList();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"     * Returns the lecture whose name is the same as {@code name}. If no such lecture exist, return null.","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"    public ReadOnlyLecture getLecture(LectureName name);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"     * Returns true if a lecture with the same name as {@code lecture} exists in the module.","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"    public boolean hasLecture(ReadOnlyLecture lecture);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"     * Returns true if both modules have the same code.","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"     * This defines a weaker notion of equality between two modules.","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"    public boolean isSameModule(Module other);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"hingen":52}},{"path":"src/main/java/seedu/address/model/module/UniqueModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import seedu.address.model.UniqueDataList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":" * A list of modules that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":" * A module is considered unique by comparing using {@code Module#isSameModule(Module)}. As such, adding and updating of","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":" * modules uses Module#isSameModule(Module) for equality so as to ensure that the module being added or updated is","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":" * unique in terms of code in the UniqueModuleList. However, the removal of a module uses Module#equals(Object) so","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":" * as to ensure that the module with exactly the same fields will be removed.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":" * @see Module#isSameModule(Module)","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"public class UniqueModuleList extends UniqueDataList\u003cModule\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"    public UniqueModuleList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"        super((a, b) -\u003e a.isSameModule(b), DuplicateModuleException::new, ModuleNotFoundException::new);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    public boolean contains(Module toCheck) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"        return super.contains(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * Adds a module to the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     * The module must not already exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"    public void add(Module toAdd) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"        super.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"     * Replaces the module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"     * The module code of {@code editedModule} must not be the same as another existing module in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"        super.setData(target, editedModule);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"     * Removes the equivalent module from the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"     * The module must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"        super.remove(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"    public void setModules(UniqueModuleList replacement) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"        super.setAllData(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"     * Replaces the contents of this list with {@code modules}.","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"        super.setAllData(modules);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":72}},{"path":"src/main/java/seedu/address/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":" * Signals that the operation will result in duplicate Modules (Modules are considered duplicates if they have the same","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":" * code).","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"        super(\"Operation would result in duplicate modules\");","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":11}},{"path":"src/main/java/seedu/address/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":" * Signals that the operation is unable to find the specified module.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"public class ModuleNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"hingen":6}},{"path":"src/main/java/seedu/address/model/video/UniqueVideoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.video;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import seedu.address.model.UniqueDataList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.exceptions.DuplicateVideoException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.exceptions.VideoNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":" * A list of videos that enforces uniqueness between its elements and does not allow nulls. A video is considered unique","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":" * by comparing using {@code Video#isSameVideo(Video)}. As such, adding and updating of videos uses","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":" * Video#isSameVideo(Video) for equality so as to ensure that the video being added or updated is unique in terms of","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":" * name in the UniqueVideoList. However, the removal of a video uses Video#equals(Object) so as to ensure that the","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":" * video with exactly the same fields will be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":" * @see Video#isSameVideo(Video)","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"public class UniqueVideoList extends UniqueDataList\u003cVideo\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"    public UniqueVideoList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"        super((a, b) -\u003e a.isSameVideo(b), DuplicateVideoException::new, VideoNotFoundException::new);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     * Returns true if the list contains an equivalent video as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"    public boolean contains(Video toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"        return super.contains(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * Adds a video to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     * The video must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"    public void add(Video toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"        super.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"     * Replaces the video {@code target} in the list with {@code editedVideo}.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"     * The name of {@code editedVideo} must not be the same as another existing video in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    public void setVideo(Video target, Video editedVideo) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"        super.setData(target, editedVideo);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"     * Removes the equivalent video from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"     * The video must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"    public void remove(Video toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"        super.remove(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"    public void setVideos(UniqueVideoList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"        super.setAllData(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"     * Replaces the contents of this list with {@code videos}.","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"     * {@code videos} must not contain duplicate videos.","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"    public void setVideos(List\u003cVideo\u003e videos) {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"        super.setAllData(videos);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":72}},{"path":"src/main/java/seedu/address/model/video/Video.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.video;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":" * Represents a video of a lecture that belongs to a module that is in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"public class Video {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"    private final VideoName name;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"     * Constructs a {@code Video}.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"     * @param name The name of the video.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"     * @param tags The tags applied to the module.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"    public Video(VideoName name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    public VideoName getName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"     * Returns true if both videos have the same name.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"     * This defines a weaker notion of equality between two videos.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"    public boolean isSameVideo(Video other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"        return other !\u003d null","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 other.getName().equals(getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"hingen"},"content":"     * Returns true if both videos have the same fields.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"hingen"},"content":"     * This defines a stronger notion of equality between two videos.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"hingen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"hingen"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"hingen"},"content":"        if (!(other instanceof Video)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"hingen"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"hingen"},"content":"        Video otherVideo \u003d (Video) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"hingen"},"content":"        return otherVideo.getName().equals(getName())","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 otherVideo.getTags().equals(getTags());","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"hingen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"hingen"},"content":"        return Objects.hash(name, tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"hingen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"hingen"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"hingen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"hingen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"hingen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"hingen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"hingen"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":97}},{"path":"src/main/java/seedu/address/model/video/VideoName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.video;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":" * Represents a video\u0027s name in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":" * Guarantees: immutable, is valid as declared in {@link #isValidName(String)}.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"public class VideoName {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"hingen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"hingen"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"hingen"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hingen"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hingen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"hingen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hingen"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"     * Constructs a {@code VideoName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hingen"},"content":"    public VideoName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"hingen"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"hingen"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hingen"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hingen"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"hingen"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hingen"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hingen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"hingen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"hingen"},"content":"        return fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"hingen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"hingen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"hingen"},"content":"                || (other instanceof VideoName // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hingen"},"content":"                \u0026\u0026 fullName.equals(((VideoName) other).fullName)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"hingen"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"hingen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"hingen"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":59}},{"path":"src/main/java/seedu/address/model/video/exceptions/DuplicateVideoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.video.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":" * Signals that the operation will result in duplicate Videos (Videos are considered duplicates if they have the same","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":" * name).","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"hingen"},"content":"public class DuplicateVideoException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"hingen"},"content":"    public DuplicateVideoException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"hingen"},"content":"        super(\"Operation would result in duplicate videos\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"hingen"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"hingen"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":11}},{"path":"src/main/java/seedu/address/model/video/exceptions/VideoNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hingen"},"content":"package seedu.address.model.video.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"hingen"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"hingen"},"content":" * Signals that the operation is unable to find the specified video.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"hingen"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"hingen"},"content":"public class VideoNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hingen":6}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"hingen"},"content":"import seedu.address.model.ReadOnlyTracker;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.Lecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"hingen"},"content":"import seedu.address.model.lecture.ReadOnlyLecture;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hingen"},"content":"import seedu.address.model.module.ReadOnlyModule;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"hingen"},"content":"import seedu.address.model.video.Video;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"hingen"},"content":"        public void setTracker(ReadOnlyTracker tracker) {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"hingen"},"content":"        public ReadOnlyTracker getTracker() {","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"hingen"},"content":"        public boolean hasModule(ReadOnlyModule module) {","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"hingen"},"content":"        public void deleteModule(ReadOnlyModule target) {","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"hingen"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"hingen"},"content":"        public void setModule(ReadOnlyModule target, Module editedModule) {","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"hingen"},"content":"        public boolean hasLecture(ReadOnlyModule module, ReadOnlyLecture lecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"hingen"},"content":"        public void deleteLecture(ReadOnlyModule module, ReadOnlyLecture target) {","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"hingen"},"content":"        public void addLecture(ReadOnlyModule module, Lecture lecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"hingen"},"content":"        public void setLecture(ReadOnlyModule module, ReadOnlyLecture target, Lecture editedLecture) {","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"hingen"},"content":"        public boolean hasVideo(ReadOnlyLecture lecture, Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"hingen"},"content":"        public void deleteVideo(ReadOnlyLecture lecture, Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":215,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"hingen"},"content":"        public void addVideo(ReadOnlyLecture lecture, Video video) {","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":222,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"hingen"},"content":"        public void setVideo(ReadOnlyLecture lecture, Video target, Video editedVideo) {","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"hingen"},"content":"        public ObservableList\u003c? extends ReadOnlyModule\u003e getFilteredModuleList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"hingen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"hingen"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"hingen"},"content":"        public void updateFilteredModuleList(Predicate\u003c? super ReadOnlyModule\u003e predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"hingen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"hingen"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hingen":86,"-":194}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"hingen"},"content":"        userPrefs.setTrackerFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"hingen"},"content":"        userPrefs.setTrackerFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"hingen"},"content":"        differentUserPrefs.setTrackerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"hingen":3,"-":129}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"hingen"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTrackerFilePath(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"hingen":1,"-":20}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"hingen"},"content":"        userPrefs.setTrackerFilePath(Paths.get(\"letracker.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hingen":1,"-":122}}]
