[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"# Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-F12-4/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/AY2223S2-CS2103T-F12-4/tp)","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"Ultron is a **desktop app for managing internships, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Ultron can streamline your internship management.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"## Quick start","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"**Prerequisites**: Java 11 or above","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"1. Download the latest version of Ultron from our [release page](https://github.com/AY2223S2-CS2103T-F12-2/tp/releases)","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"2. Copy the file to the folder you want to use as the _home folder_ for your Ultron app.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"3. Run the command `java -jar ultron.jar` in the terminal to start the app.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"## Features","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"Listed below are the available commands in Ultron.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"| Command | Format, Examples |","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"|---------|------------------|","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"| To be added soon | To be added soon |","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"## Links","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"* [**User Guide**](https://ay2223s2-cs2103t-f12-4.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"* [**Developer Guide**](https://ay2223s2-cs2103t-f12-4.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"-":3,"Lanreath":27}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"You can reach us at the email `darrensim999@gmail.com`","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"### Kevin Eyo Kai Wen","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/kevineyo1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/KevinEyo1)]","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"* Role: Team Lead/Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"### Tan Yu Fei","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/lanreath.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/Lanreath)]","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"* Role: Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Testing and developer guide","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"### Anton Timothy Lee Zi Jie","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/antonlee59.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/antonlee59)]","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Code quality and developer guide","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"### Alexander Lee Shao Bin","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/varstak.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/Varstak)]","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Deliverables and deadlines, user guide","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"### Darren Sim","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/bagdownb3nny.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/BagDownB3nny)]","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Integration","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"-":36,"Lanreath":24}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"BagDownB3nny"},"content":"* has a need to manage a significant number of internship applications","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"BagDownB3nny"},"content":"| -------- | ------------------------------------------ | ------------------------------ |-----------------------------------------------------|","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"BagDownB3nny"},"content":"| `* * *`  | potential user exploring the app           | see the app populated with sample openings         | easily see how the app will look when it is in use. |","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"BagDownB3nny"},"content":"| `* * *`  | user                                       | add an opening regarding the internship I am interested in               | keep note of it                                     |","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"BagDownB3nny"},"content":"| `* * *`  | user                                       | delete an opening      | remove unwanted openings                            |","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"BagDownB3nny"},"content":"| `* * *`  | user                                       | Be able to see all applications          | track my progress                                   |","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"BagDownB3nny"},"content":"| `* *`    | user                                       | see submission deadlines   | check them                                          |","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"BagDownB3nny"},"content":"| `*`      | user | be able to see the total number of accepted applications           | celebrate my success                              |","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"BagDownB3nny"},"content":"| \u0027*\u0027 | user | see all the outcomes of my application | properly assess my options |","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"BagDownB3nny"},"content":"(For all use cases below, the **System** is `Ultron` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 1 - Adding an opening**","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to add an opening","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron adds the opening to its list of openings","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"BagDownB3nny"},"content":"   Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":300,"author":{"gitId":"BagDownB3nny"},"content":"1a. Ultron detects an error in the entered data.","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the data is invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":302,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":303,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 2 - Deleting an opening**","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":306,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to delete an opening","lastModifiedDate":"2023-03-03"},{"lineNumber":309,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron deletes the opening from its list of openings","lastModifiedDate":"2023-03-03"},{"lineNumber":310,"author":{"gitId":"BagDownB3nny"},"content":"   Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":311,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":312,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":313,"author":{"gitId":"BagDownB3nny"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":314,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":315,"author":{"gitId":"BagDownB3nny"},"content":"1a. Ultron detects an error in the entered data.","lastModifiedDate":"2023-03-03"},{"lineNumber":316,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the data is invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":317,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":318,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":319,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 3 - Editing an opening**","lastModifiedDate":"2023-03-03"},{"lineNumber":320,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":321,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to edit an opening","lastModifiedDate":"2023-03-03"},{"lineNumber":324,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron edits the opening based on the user input parameters","lastModifiedDate":"2023-03-03"},{"lineNumber":325,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"BagDownB3nny"},"content":"1a. Ultron detects an error in the entered data.","lastModifiedDate":"2023-03-03"},{"lineNumber":331,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the data is invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":332,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":333,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":334,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 4 - See all openings**","lastModifiedDate":"2023-03-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":337,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":338,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to list all openings","lastModifiedDate":"2023-03-03"},{"lineNumber":339,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron shows the user a list of all the openings that the user has added","lastModifiedDate":"2023-03-03"},{"lineNumber":340,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"BagDownB3nny"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":344,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":345,"author":{"gitId":"BagDownB3nny"},"content":"1a. List is empty","lastModifiedDate":"2023-03-03"},{"lineNumber":346,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the list is currently empty","lastModifiedDate":"2023-03-03"},{"lineNumber":347,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":348,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":349,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 5 - See all openings with a specific status**","lastModifiedDate":"2023-03-03"},{"lineNumber":350,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":351,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":352,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":353,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to list all openings of a specific status","lastModifiedDate":"2023-03-03"},{"lineNumber":354,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron shows the user a list of all the openings that match the status given by the user","lastModifiedDate":"2023-03-03"},{"lineNumber":355,"author":{"gitId":"BagDownB3nny"},"content":"   Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":359,"author":{"gitId":"BagDownB3nny"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":360,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":361,"author":{"gitId":"BagDownB3nny"},"content":"1a. No opening contains the status specified by the user","lastModifiedDate":"2023-03-03"},{"lineNumber":362,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that no openings of that status exist","lastModifiedDate":"2023-03-03"},{"lineNumber":363,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":364,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"BagDownB3nny"},"content":"2. The app should be fast and respond within 100ms when users input commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":373,"author":{"gitId":"BagDownB3nny"},"content":"3. The app should start up and load the list from a saved file within 1 second of opening.","lastModifiedDate":"2023-03-03"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"BagDownB3nny"},"content":"* **Opening**: Item representing an internship opening","lastModifiedDate":"2023-03-03"},{"lineNumber":381,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"BagDownB3nny"},"content":"      Expected: First email is deleted from the list. Details of the deleted email shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-03-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BagDownB3nny":72,"-":362}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"Ultron is a **desktop app for compiling job and internship openings, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you are familiar with the Ultron interface and type fast, it can help you organise your openings in a structured manner.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"_More details coming soon ..._","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"  e.g. in `status s/STATUS`, `STATUS` is a parameter which can be used as `status s/interviewing`.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"  e.g `c/COMPANY [d/KEYDATE]` can be used as `c/Google d/Interview@20230401` or as `c/Google`.","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"  e.g. `[d/KEYDATE]…​` can be used as ` ` (i.e. 0 times), `d/Interview@20230401`, `d/Interview@20230401 d/OA@20230502` etc.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"  e.g. if the command specifies `p/POSITION c/COMPANY`, `c/COMPANY p/POSITION` is also acceptable.","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"  e.g. if you specify `c/Google c/Shopee`, only `c/Shopee` will be taken.","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"### Adding an opening : `add`","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"Adds a new opening to the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"Format: `add p/POSITION c/COMPANY e/EMAIL s/STATUS [d/KEYDATE]…​`","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"* `KEYDATE` must be in the form `KEY@DATE`, where `KEY` is a stage or event in the application process and `DATE` is the date of the stage in `YYYYMMDD` format.","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"Varstak"},"content":"* `STATUS` **must be of either found, applied, interviewing, offered, accepted or rejected**.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"* `add p/Software Engineer c/Google e/chinese@google.com s/interviewing d/Interview@20230314`","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Varstak"},"content":"### Listing all openings : `list`","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"Shows the whole list of openings in Ultron.","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"Varstak"},"content":"### Editing an opening : `edit`","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Varstak"},"content":"Edits an existing opening.","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"Format: `edit INDEX [p/POSITION] [c/COMPANY] [e/EMAIL] [s/STATUS] [d/KEYDATE]…​`","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Varstak"},"content":"* Edits the opening at the specified `INDEX`. The index refers to the index number shown in the displayed opening list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"* When editing `KEYDATE`, the existing `KEYDATE` of the opening will be removed i.e adding of `KEYDATE` is not cumulative.","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"* You can remove all the `KEYDATE` of the opening by typing `d/` without","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"  specifying any `KEYDATE` after it.","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"*  `edit 1 c/Goggle e/johndoe@example.com` Edits the company and email address of the 1st opening to be `Goggle` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"*  `edit 2 c/Shopee d/` Edits the company of the 2nd opening to be `Shopee` and clears all existing `KEYDATE`.","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"antonlee59"},"content":"### Locating openings by name: `find`","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"antonlee59"},"content":"Finds openings whose NAME_OF_COMPANY contain any of the given keywords.","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"* The search is case-insensitive. e.g `google` will match `Google`","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"antonlee59"},"content":"* The order of the keywords does not matter. e.g. `Goldman Sachs` will match `Sachs Goldman`","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"antonlee59"},"content":"* Only full words will be matched e.g. `Amaz` will not match `Amazon`","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"antonlee59"},"content":"* Openings with NAME_OF_COMPANY matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"antonlee59"},"content":"  e.g. `google amazon meta` will return `Google`, `Meta`, `Amazon Web Services`","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"antonlee59"},"content":"* `find Google` returns `google` and `Google Cloud`","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"antonlee59"},"content":"* `find bank america` returns `Bank of America`, `Bank of Singapore`\u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"antonlee59"},"content":"  \u003c!--![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)--\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Varstak"},"content":"### Deleting an opening : `delete`","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Varstak"},"content":"Deletes an opening from the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Varstak"},"content":"* Deletes the opening at the specified `INDEX`.","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Varstak"},"content":"* The index refers to the index number shown in the displayed opening list.","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Varstak"},"content":"* `list` followed by `delete 2` deletes the 2nd opening in the opening list.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"Varstak"},"content":"Ultron data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Varstak"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"KevinEyo1"},"content":"**Add** | `add p/POSITION c/COMPANY e/EMAIL s/STATUS [d/KEYDATE]…​` \u003cbr\u003e e.g., `add p/Software Engineer c/Google e/chinese@google.com s/interviewing d/Interview@20230314`","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"KevinEyo1"},"content":"**Edit** | `edit INDEX [p/POSITION] [c/COMPANY] [e/EMAIL] [s/STATUS] [d/KEYDATE]…​` \u003cbr\u003e e.g., `edit 1 c/Goggle e/johndoe@example.com`","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Varstak"},"content":"**Status** | `status s/STATUS`\u003cbr\u003e e.g., `status s/interviewing`","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Varstak":23,"antonlee59":10,"KevinEyo1":16,"-":97}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"KevinEyo1"},"content":"    content: \"Ultron\";","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"KevinEyo1":1,"-":294}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"Class JsonAdaptedUltron","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedopening","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"BagDownB3nny":2,"-":41}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"**AddressBook is a desktop application for managing your email details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BagDownB3nny":1,"-":18}},{"path":"docs/team/antonlee59.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"title: antonlee59\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"Ultron is a system which helps students keep track of their internship applications by helping them","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"sort their internships and check the status of each application.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"antonlee59":31}},{"path":"docs/team/bagdownb3nny.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"---","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"layout: page","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"title: BagDownB3nny\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"---","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"Ultron is an application to help students track their internship applications as openings.","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"* **User Guide Contributions**:","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"* **Developer Guide Contributions**:","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"* **Maintaining issue tracker**:","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"* **Review Contributions**:","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"* **Tools**:","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"BagDownB3nny":29}},{"path":"docs/team/kevineyo1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"title: KevinEyo1\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"Ultron is an application to help students track their internship applications as openings.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"* **User Guide Contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"* **Developer Guide Contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"* **Maintaining issue tracker**:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"* **Review Contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"KevinEyo1":29}},{"path":"docs/team/lanreath.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"title: Lanreath\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"* **Testing**:","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Lanreath":22}},{"path":"docs/team/varstak.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"title: Varstak\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"Ultron is a system which helps students keep track of their internship applications by helping them","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"sort their internships and check the status of each application.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Varstak":32}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.LogicManagerNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.LogicNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ModelManagerNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.Ultron;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.UserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.util.SampleDataUtilNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.JsonUltronStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.JsonUserPrefsStorageNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.StorageManagerNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.StorageNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.UltronStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.UserPrefsStorageNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"import seedu.address.ui.UiManagerNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"    protected LogicNew logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"    protected StorageNew storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"    protected ModelNew model;","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Ultron ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"        UserPrefsStorageNew userPrefsStorage \u003d new JsonUserPrefsStorageNew(config.getUserPrefsFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"        UserPrefsNew userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"        UltronStorage ultronStorage \u003d new JsonUltronStorage(userPrefs.getUltronFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"        storage \u003d new StorageManagerNew(ultronStorage, userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"        logic \u003d new LogicManagerNew(model, storage);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"antonlee59"},"content":"        ui \u003d new UiManagerNew(logic);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"     * Returns a {@code ModelManagerNew} with the data from {@code storage}\u0027s  ultron and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"     * The data from the sample ultron will be used instead if {@code storage}\u0027s ultron is not found,","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"     * or an empty ultron will be used instead if errors occur when reading {@code storage}\u0027s ultron.","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"antonlee59"},"content":"    private ModelNew initModelManager(StorageNew storage, ReadOnlyUserPrefsNew userPrefs) {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"        Optional\u003cReadOnlyUltron\u003e ultronOptional;","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"        ReadOnlyUltron initialData;","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"            ultronOptional \u003d storage.readUltron();","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"antonlee59"},"content":"            if (!ultronOptional.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"antonlee59"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"antonlee59"},"content":"            // initialData \u003d ultronOptional.orElseGet(SampleDataUtilNew::getSampleUltron);","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d SampleDataUtilNew.getSampleUltron();","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d new Ultron();","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d new Ultron();","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"antonlee59"},"content":"        return new ModelManagerNew(initialData, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"antonlee59"},"content":"    protected UserPrefsNew initPrefs(UserPrefsStorageNew storage) {","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"antonlee59"},"content":"        UserPrefsNew initializedPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"antonlee59"},"content":"            Optional\u003cUserPrefsNew\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"antonlee59"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefsNew());","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"antonlee59"},"content":"            initializedPrefs \u003d new UserPrefsNew();","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"antonlee59"},"content":"            initializedPrefs \u003d new UserPrefsNew();","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"Starting Ultron \" + MainApp.VERSION);","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Ultron ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"antonlee59":51,"-":133}},{"path":"src/main/java/seedu/address/MainAppOld.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":" * Runs the application.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"public class MainAppOld extends Application {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"    protected Ui ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"    protected Logic logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"    protected Storage storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"    protected Model model;","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"    protected Config config;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"    public void init() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"        super.init();","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"        initLogging(config);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"antonlee59"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"antonlee59"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"antonlee59"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"antonlee59"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"antonlee59"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"antonlee59"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"antonlee59"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"antonlee59"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"antonlee59"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"antonlee59"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"antonlee59"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"antonlee59"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"antonlee59"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"antonlee59"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"antonlee59"},"content":"        Config initializedConfig;","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"antonlee59"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"antonlee59"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"antonlee59"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"antonlee59"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"antonlee59"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"antonlee59"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"antonlee59"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"antonlee59"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"antonlee59"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"antonlee59"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"antonlee59"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"antonlee59"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"antonlee59"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"antonlee59"},"content":"        return initializedConfig;","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"antonlee59"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"antonlee59"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"antonlee59"},"content":"     * reading from the file.","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"antonlee59"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"antonlee59"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"antonlee59"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"antonlee59"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"antonlee59"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"antonlee59"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"antonlee59"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"antonlee59"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"antonlee59"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"antonlee59"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"antonlee59"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"antonlee59"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"antonlee59"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"antonlee59"},"content":"        return initializedPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"antonlee59"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"antonlee59"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"antonlee59"},"content":"    public void stop() {","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"antonlee59"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"antonlee59"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"antonlee59"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":183}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_INVALID_OPENING_DISPLAYED_INDEX \u003d \"The opening index provided is invalid\";","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"    public static final String MESSAGE_OPENING_LISTED_OVERVIEW \u003d \"%1$d openings listed!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BagDownB3nny":1,"antonlee59":1,"-":11}},{"path":"src/main/java/seedu/address/logic/LogicManagerNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.CommandNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.CommandResultNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.parser.UltronParser;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"import seedu.address.storage.StorageNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"public class LogicManagerNew implements LogicNew {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"    private final ModelNew model;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    private final StorageNew storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"    private final UltronParser ultronParser;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    public LogicManagerNew(ModelNew model, StorageNew storage) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"        ultronParser \u003d new UltronParser();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    public CommandResultNew execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"        CommandResultNew commandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"        CommandNew command \u003d ultronParser.parseCommand(commandText);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"            storage.saveUltron(model.getUltron());","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"        return commandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"    public ReadOnlyUltron getUltron() {","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"        return model.getUltron();","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"antonlee59"},"content":"    public ObservableList\u003cOpening\u003e getFilteredOpeningList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"antonlee59"},"content":"        return model.getFilteredOpeningList();","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"antonlee59"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"        return model.getUltronFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"antonlee59"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":81}},{"path":"src/main/java/seedu/address/logic/LogicNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.CommandResultNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":" * API of the Logic component","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"public interface LogicNew {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"    CommandResultNew execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"     * Returns Ultron.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"     * @see seedu.address.model.Model#getUltron()","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"    ReadOnlyUltron getUltron();","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"    /** Returns an unmodifiable view of the filtered list of openings */","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    ObservableList\u003cOpening\u003e getFilteredOpeningList();","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"     * Returns the user prefs\u0027 ultron file path.","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_COMPANY;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_POSITION;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_REMARK;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_STATUS;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * Adds a opening to the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"public class AddCommandNew extends CommandNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a opening to Ultron. \"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_KEYDATE + \"DATE]...\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_POSITION + \"Backend Developer \"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_COMPANY + \"Shopee \"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_EMAIL + \"hr@shopee.com \"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"            + PREFIX_STATUS + \"APPLIED \"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_REMARK + \"3 rounds of interviews \";","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New opening added: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_DUPLICATE_OPENING \u003d \"This opening already exists in Ultron\";","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    private final Opening toAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"     * Creates an AddCommand to add the specified {@code Opening}","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    public AddCommandNew(Opening opening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        toAdd \u003d opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew execute(ModelNew model) throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        if (model.hasOpening(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        model.addOpening(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        return new CommandResultNew(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof AddCommandNew // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 toAdd.equals(((AddCommandNew) other).toAdd));","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":1,"KevinEyo1":2,"Lanreath":65}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.Ultron;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":" * Clears the openings list.","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"public class ClearCommandNew extends CommandNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Openings list has been cleared!\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew execute(ModelNew model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"        model.setUltron(new Ultron());","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"        // model.setOpeningsList(new OpeningsList());","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"        return new CommandResultNew(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BagDownB3nny":18,"Lanreath":6}},{"path":"src/main/java/seedu/address/logic/commands/CommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public abstract class CommandNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    public abstract CommandResultNew execute(ModelNew model) throws CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":20}},{"path":"src/main/java/seedu/address/logic/commands/CommandResultNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"public class CommandResultNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    private final boolean showHelp;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    /** The application should exit. */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    private final boolean exit;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew(String feedbackToUser) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        return feedbackToUser;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        return showHelp;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        return exit;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"        CommandResultNew otherCommandResult \u003d (CommandResultNew) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BagDownB3nny":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"public class DeleteCommandNew extends CommandNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"            + \": Deletes the opening identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_DELETE_OPENING_SUCCESS \u003d \"Deleted Opening: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    public DeleteCommandNew(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew execute(ModelNew model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        Opening openingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"        model.deleteOpening(openingToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        return new CommandResultNew(String.format(MESSAGE_DELETE_OPENING_SUCCESS, openingToDelete));","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof DeleteCommandNew // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommandNew) other).targetIndex)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BagDownB3nny":42,"Lanreath":11}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"Lanreath"},"content":"        private Remark remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"Lanreath"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"Lanreath"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-03-02"},{"lineNumber":192,"author":{"gitId":"Lanreath"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":193,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":194,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"Lanreath"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"Lanreath"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":198,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"BagDownB3nny":1,"-":224,"Lanreath":13}},{"path":"src/main/java/seedu/address/logic/commands/EditCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_COMPANY;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_EMAIL;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_POSITION;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_STATUS;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.model.ModelNew.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Company;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Date;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Email;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Position;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Remark;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Status;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":" * Edits the details of an existing opening in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"public class EditCommandNew extends CommandNew {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the opening identified \"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"            + \"by the index number used in the displayed opening list. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_KEYDATE + \"DATE]...\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"            + PREFIX_COMPANY + \"Microsoft \"","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_EDIT_OPENING_SUCCESS \u003d \"Edited Opening: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_DUPLICATE_OPENING \u003d \"This opening already exists in the address book.\";","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"    private final Index index;","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"    private final EditOpeningDescriptor editOpeningDescriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"     * @param index of the opening in the filtered opening list to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"     * @param editOpeningDescriptor details to edit the opening with","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"    public EditCommandNew(Index index, EditOpeningDescriptor editOpeningDescriptor) {","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        this.editOpeningDescriptor \u003d new EditOpeningDescriptor(editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"    public CommandResultNew execute(ModelNew model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"        Opening openingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"        Opening editedOpening \u003d createEditedOpening(openingToEdit, editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"        if (!openingToEdit.isSameOpening(editedOpening) \u0026\u0026 model.hasOpening(editedOpening)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"        model.setOpening(openingToEdit, editedOpening);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"        return new CommandResultNew(String.format(MESSAGE_EDIT_OPENING_SUCCESS, editedOpening));","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"     * Creates and returns a {@code Opening} with the details of {@code openingToEdit}","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"     * edited with {@code editOpeningDescriptor}.","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"    private static Opening createEditedOpening(Opening openingToEdit, EditOpeningDescriptor editOpeningDescriptor) {","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"        assert openingToEdit !\u003d null;","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"        Position updatedPosition \u003d editOpeningDescriptor.getPosition().orElse(openingToEdit.getPosition());","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"        Company updatedCompany \u003d editOpeningDescriptor.getCompany().orElse(openingToEdit.getCompany());","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"        Email updatedEmail \u003d editOpeningDescriptor.getEmail().orElse(openingToEdit.getEmail());","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"        Status updatedStatus \u003d editOpeningDescriptor.getStatus().orElse(openingToEdit.getStatus());","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"        Remark updatedRemark \u003d editOpeningDescriptor.getRemark().orElse(openingToEdit.getRemark());","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"        Set\u003cDate\u003e updatedDates \u003d editOpeningDescriptor.getDates().orElse(openingToEdit.getDates());","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"        return new Opening(updatedPosition, updatedCompany, updatedEmail, updatedStatus, updatedRemark, updatedDates);","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"KevinEyo1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"KevinEyo1"},"content":"            return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"KevinEyo1"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"KevinEyo1"},"content":"            return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"KevinEyo1"},"content":"        // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"KevinEyo1"},"content":"        EditCommandNew e \u003d (EditCommandNew) other;","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"KevinEyo1"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 editOpeningDescriptor.equals(e.editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"KevinEyo1"},"content":"     * Stores the details to edit the opening with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"KevinEyo1"},"content":"     * corresponding field value of the opening.","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"KevinEyo1"},"content":"    public static class EditOpeningDescriptor {","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"KevinEyo1"},"content":"        private Position position;","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"KevinEyo1"},"content":"        private Company company;","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"KevinEyo1"},"content":"        private Email email;","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"KevinEyo1"},"content":"        private Status status;","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"KevinEyo1"},"content":"        private Remark remark;","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"KevinEyo1"},"content":"        private Set\u003cDate\u003e keydates;","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"KevinEyo1"},"content":"        public EditOpeningDescriptor() {}","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"KevinEyo1"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"KevinEyo1"},"content":"         * A defensive copy of {@code keydates} is used internally.","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"KevinEyo1"},"content":"        public EditOpeningDescriptor(EditOpeningDescriptor toCopy) {","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"KevinEyo1"},"content":"            setPosition(toCopy.position);","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"KevinEyo1"},"content":"            setCompany(toCopy.company);","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"KevinEyo1"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"KevinEyo1"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"KevinEyo1"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"KevinEyo1"},"content":"            setDates(toCopy.keydates);","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"KevinEyo1"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"KevinEyo1"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"KevinEyo1"},"content":"            return CollectionUtil.isAnyNonNull(position, company, email, status, keydates);","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"KevinEyo1"},"content":"        public void setPosition(Position position) {","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"KevinEyo1"},"content":"            this.position \u003d position;","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(position);","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"KevinEyo1"},"content":"        public void setCompany(Company company) {","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"KevinEyo1"},"content":"            this.company \u003d company;","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"KevinEyo1"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"KevinEyo1"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"KevinEyo1"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"KevinEyo1"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"KevinEyo1"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"KevinEyo1"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":199,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":200,"author":{"gitId":"KevinEyo1"},"content":"         * Sets {@code keydates} to this object\u0027s {@code keydates}.","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"KevinEyo1"},"content":"         * A defensive copy of {@code keydates} is used internally.","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":203,"author":{"gitId":"KevinEyo1"},"content":"        public void setDates(Set\u003cDate\u003e keydates) {","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"KevinEyo1"},"content":"            this.keydates \u003d (keydates !\u003d null) ? new HashSet\u003c\u003e(keydates) : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":206,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":207,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":208,"author":{"gitId":"KevinEyo1"},"content":"         * Returns an unmodifiable date set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"KevinEyo1"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"KevinEyo1"},"content":"         * Returns {@code Optional#empty()} if {@code keydates} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cSet\u003cDate\u003e\u003e getDates() {","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"KevinEyo1"},"content":"            return (keydates !\u003d null) ? Optional.of(Collections.unmodifiableSet(keydates)) : Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"KevinEyo1"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"KevinEyo1"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"KevinEyo1"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"KevinEyo1"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"KevinEyo1"},"content":"                return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"KevinEyo1"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"KevinEyo1"},"content":"            if (!(other instanceof EditOpeningDescriptor)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"KevinEyo1"},"content":"                return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":227,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"KevinEyo1"},"content":"            // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"KevinEyo1"},"content":"            EditOpeningDescriptor e \u003d (EditOpeningDescriptor) other;","lastModifiedDate":"2023-03-10"},{"lineNumber":230,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":231,"author":{"gitId":"KevinEyo1"},"content":"            return getPosition().equals(e.getPosition())","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getCompany().equals(e.getCompany())","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2023-03-10"},{"lineNumber":235,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getDates().equals(e.getDates());","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":237,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":238,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"KevinEyo1":238}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":" * Terminates the program.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"public class ExitCommandNew extends CommandNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Ultron as requested ...\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew execute(ModelNew model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"        return new CommandResultNew(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Lanreath":19}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"                String.format(Messages.MESSAGE_OPENING_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"antonlee59":1,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/FindCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":" * Finds and lists all openings in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"public class FindCommandNew extends CommandNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all openings whose names contain any of \"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"    private final CompanyOrPositionContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"    public FindCommandNew(CompanyOrPositionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew execute(ModelNew model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"        model.updateFilteredOpeningList(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        return new CommandResultNew(","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"                String.format(Messages.MESSAGE_OPENING_LISTED_OVERVIEW, model.getFilteredOpeningList().size()));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"                || (other instanceof FindCommandNew // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"                \u0026\u0026 predicate.equals(((FindCommandNew) other).predicate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"antonlee59":37,"Lanreath":5}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"public class HelpCommandNew extends CommandNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew execute(ModelNew model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"        return new CommandResultNew(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Lanreath":21}},{"path":"src/main/java/seedu/address/logic/commands/ListCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import static seedu.address.model.ModelNew.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":" * Lists all openings Ultron to the user.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"public class ListCommandNew extends CommandNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all openings\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    public CommandResultNew execute(ModelNew model) {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"        return new CommandResultNew(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Varstak":24}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    private final Index index;","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"        // state check","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"BagDownB3nny":1,"Lanreath":95}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommandNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.model.ModelNew.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.ModelNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * Changes the remark of an existing opening in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"public class RemarkCommandNew extends CommandNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            + \": Edits the remark of the opening identified \"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            + \"by the index number used in the last opening listing. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Opening: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Opening: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    private final Index index;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"     * @param index of the opening in the filtered opening list to edit the remark","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"     * @param remark of the opening to be updated to","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public RemarkCommandNew(Index index, Remark remark) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    public CommandResultNew execute(ModelNew model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        Opening openingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        Opening editedOpening \u003d new Opening(","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"                openingToEdit.getPosition(), openingToEdit.getCompany(), openingToEdit.getEmail(),","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"                openingToEdit.getStatus(), remark, openingToEdit.getDates());","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        model.setOpening(openingToEdit, editedOpening);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        return new CommandResultNew(generateSuccessMessage(editedOpening));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     * {@code openingToEdit}.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"    private String generateSuccessMessage(Opening openingToEdit) {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"        return String.format(message, openingToEdit);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"        if (!(other instanceof RemarkCommandNew)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"        // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"        RemarkCommandNew e \u003d (RemarkCommandNew) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Lanreath":96}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"                    PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":58,"Lanreath":6}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParserNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_COMPANY;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_POSITION;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_REMARK;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_STATUS;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.AddCommandNew;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Company;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Date;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Position;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Status;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"public class AddCommandParserNew implements ParserNew\u003cAddCommandNew\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    public AddCommandNew parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POSITION, PREFIX_COMPANY, PREFIX_EMAIL,","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"                        PREFIX_STATUS, PREFIX_REMARK, PREFIX_KEYDATE);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POSITION, PREFIX_COMPANY, PREFIX_EMAIL, PREFIX_STATUS)","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommandNew.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        Position position \u003d ParserUtilNew.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        Company company \u003d ParserUtilNew.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        Email email \u003d ParserUtilNew.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        Status status \u003d ParserUtilNew.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        Remark remark \u003d ParserUtilNew.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"        Set\u003cDate\u003e dateList \u003d ParserUtilNew.parseDates(argMultimap.getAllValues(PREFIX_KEYDATE));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        Opening opening \u003d new Opening(position, company, email, status, remark, dateList);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"        return new AddCommandNew(opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"KevinEyo1":3,"Lanreath":63}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":76,"Lanreath":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":14,"Lanreath":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntaxNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"public class CliSyntaxNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"    /* Prefix definitions */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    public static final Prefix PREFIX_KEYDATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"KevinEyo1":1,"Lanreath":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParserNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.DeleteCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"public class DeleteCommandParserNew implements ParserNew\u003cDeleteCommandNew\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public DeleteCommandNew parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"            return new DeleteCommandNew(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommandNew.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Lanreath":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParserNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_COMPANY;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_POSITION;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.parser.CliSyntaxNew.PREFIX_STATUS;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.logic.commands.EditCommandNew;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.logic.commands.EditCommandNew.EditOpeningDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.model.opening.Date;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"public class EditCommandParserNew implements ParserNew\u003cEditCommandNew\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    public EditCommandNew parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POSITION, PREFIX_COMPANY,","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"                        PREFIX_EMAIL, PREFIX_STATUS, PREFIX_KEYDATE);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"            index \u003d ParserUtilNew.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommandNew.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        EditOpeningDescriptor editOpeningDescriptor \u003d new EditOpeningDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"            editOpeningDescriptor.setPosition(ParserUtilNew.parsePosition(argMultimap.getValue(PREFIX_POSITION).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"            editOpeningDescriptor.setCompany(ParserUtilNew.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"            editOpeningDescriptor.setEmail(ParserUtilNew.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"            editOpeningDescriptor.setStatus(ParserUtilNew.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"        parseDatesForEdit(argMultimap.getAllValues(PREFIX_KEYDATE)).ifPresent(editOpeningDescriptor::setDates);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"        if (!editOpeningDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(EditCommandNew.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        return new EditCommandNew(index, editOpeningDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"    private Optional\u003cSet\u003cDate\u003e\u003e parseDatesForEdit(Collection\u003cString\u003e dates) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"        assert dates !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"        if (dates.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"        Collection\u003cString\u003e dateSet \u003d dates.size() \u003d\u003d 1 \u0026\u0026 dates.contains(\"\") ? Collections.emptySet() : dates;","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"        return Optional.of(ParserUtilNew.parseDates(dateSet));","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"KevinEyo1":84}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParserNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.FindCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"public class FindCommandParserNew implements ParserNew\u003cFindCommandNew\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    public FindCommandNew parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommandNew.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"        return new FindCommandNew(new CompanyOrPositionContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"antonlee59":2,"Lanreath":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.CommandNew;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public interface ParserNew\u003cT extends CommandNew\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":124,"Lanreath":11}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtilNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Company;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Date;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Position;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Status;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"public class ParserUtilNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     * trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String position} into a {@code Position}.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(position);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        if (!Position.isValidPosition(trimmedPosition)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String company} into a {@code Company}.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"    public static Status parseStatus(String status) {","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"        String[] dateArray \u003d trimmedDate.split(\"@\");","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"        return new Date(dateArray[0], dateArray[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"     * Parses {@code Collection\u003cString\u003e dates} into a {@code Set\u003cDate\u003e}.","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"    public static Set\u003cDate\u003e parseDates(Collection\u003cString\u003e dates) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(dates);","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Lanreath"},"content":"        final Set\u003cDate\u003e dateSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"        for (String date : dates) {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"            dateSet.add(parseDate(date));","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"        return dateSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":132}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     * and returns an RemarkCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            PREFIX_REMARK);","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        Index index;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"                RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Lanreath":39}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParserNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.RemarkCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"public class RemarkCommandParserNew implements ParserNew\u003cRemarkCommandNew\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     * and returns an RemarkCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public RemarkCommandNew parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            PREFIX_REMARK);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        Index index;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"                RemarkCommandNew.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        return new RemarkCommandNew(index, remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Lanreath":39}},{"path":"src/main/java/seedu/address/logic/parser/UltronParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.AddCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.ClearCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.CommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.DeleteCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.EditCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.ExitCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.FindCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.HelpCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.ListCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.commands.RemarkCommandNew;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":" * Parses user input.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"public class UltronParser {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    public CommandNew parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommandNew.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        case AddCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"            return new AddCommandParserNew().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        case EditCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"            return new EditCommandParserNew().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        case DeleteCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"            return new DeleteCommandParserNew().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"        case ClearCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"            return new ClearCommandNew();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"        case FindCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"            return new FindCommandParserNew().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        case ListCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"            return new ListCommandNew();","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        case ExitCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"            return new ExitCommandNew();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"        case HelpCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"            return new HelpCommandNew();","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"        case RemarkCommandNew.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"            return new RemarkCommandParserNew().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"        default:","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Lanreath":80}},{"path":"src/main/java/seedu/address/model/ModelManagerNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"public class ModelManagerNew implements ModelNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    private final Ultron ultron;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    private final UserPrefsNew userPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    private final FilteredList\u003cOpening\u003e filteredOpenings;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     * Initializes a ModelManager with the given ultron and userPrefs.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    public ModelManagerNew(ReadOnlyUltron ultron, ReadOnlyUserPrefsNew userPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(ultron, userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        logger.fine(\"Initializing with ultron: \" + ultron + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"        this.ultron \u003d new Ultron(ultron);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        this.userPrefs \u003d new UserPrefsNew(userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        filteredOpenings \u003d new FilteredList\u003c\u003e(this.ultron.getOpeningList());","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    public ModelManagerNew() {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        this(new Ultron(), new UserPrefsNew());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    public void setUserPrefs(ReadOnlyUserPrefsNew userPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    public ReadOnlyUserPrefsNew getUserPrefs() {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"        return userPrefs.getUltronFilePath();","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    public void setUltronFilePath(Path ultronFilePath) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"        userPrefs.setUltronFilePath(ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ultron \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"    public void setUltron(ReadOnlyUltron ultron) {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        this.ultron.resetData(ultron);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"    public ReadOnlyUltron getUltron() {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"        return ultron;","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"    public boolean hasOpening(Opening person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"        return ultron.hasOpening(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"    public void deleteOpening(Opening target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"        ultron.removeOpening(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    public void addOpening(Opening person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"        ultron.addOpening(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"        updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"    public void setOpening(Opening target, Opening editedOpening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"        ultron.setOpening(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Opening List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"     * Returns an unmodifiable view of the list of {@code Opening} backed by the internal list of","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"     * {@code versionedUltron}","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Lanreath"},"content":"    public ObservableList\u003cOpening\u003e getFilteredOpeningList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"        return filteredOpenings;","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Lanreath"},"content":"    public void updateFilteredOpeningList(Predicate\u003cOpening\u003e predicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"        filteredOpenings.setPredicate(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Lanreath"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Lanreath"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Lanreath"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Lanreath"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"Lanreath"},"content":"        // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"Lanreath"},"content":"        ModelManagerNew other \u003d (ModelManagerNew) obj;","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Lanreath"},"content":"        return ultron.equals(other.ultron)","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 filteredOpenings.equals(other.filteredOpenings);","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"KevinEyo1":1,"Lanreath":149}},{"path":"src/main/java/seedu/address/model/ModelNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":" * The API of the Model component.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"public interface ModelNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    Predicate\u003cOpening\u003e PREDICATE_SHOW_ALL_OPENINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    void setUserPrefs(ReadOnlyUserPrefsNew userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    ReadOnlyUserPrefsNew getUserPrefs();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    void setUltronFilePath(Path addressBookFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    void setUltron(ReadOnlyUltron addressBook);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    /** Returns the Ultron */","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    ReadOnlyUltron getUltron();","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a opening with the same identity as {@code opening} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    boolean hasOpening(Opening opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"     * Deletes the given opening.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"     * The opening must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    void deleteOpening(Opening target);","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"     * Adds the given opening.","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"     * {@code opening} must not already exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"    void addOpening(Opening opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"     * Replaces the given opening {@code target} with {@code editedOpening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"     * The opening identity of {@code editedOpening} must not be the same","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"     * as another existing opening in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"    void setOpening(Opening target, Opening editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"    /** Returns an unmodifiable view of the filtered opening list */","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"    ObservableList\u003cOpening\u003e getFilteredOpeningList();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"     * Updates the filter of the filtered opening list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    void updateFilteredOpeningList(Predicate\u003cOpening\u003e predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"KevinEyo1":1,"Lanreath":87}},{"path":"src/main/java/seedu/address/model/ReadOnlyUltron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public interface ReadOnlyUltron {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"     * This list will not contain any duplicate openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    ObservableList\u003cOpening\u003e getOpeningList();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefsNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"public interface ReadOnlyUserPrefsNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":16}},{"path":"src/main/java/seedu/address/model/Ultron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.UniqueOpeningList;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" * Duplicates are not allowed (by .isSameOpening comparison)","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"public class Ultron implements ReadOnlyUltron {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    private final UniqueOpeningList openings;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        openings \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    public Ultron() {}","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     * Creates an Ultron using the Openings in the {@code toBeCopied}","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    public Ultron(ReadOnlyUltron toBeCopied) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        this();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"     * Replaces the contents of the opening list with {@code openings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     * {@code openings} must not contain duplicate openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    public void setOpenings(List\u003cOpening\u003e openings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        this.openings.setOpenings(openings);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"     * Resets the existing data of this {@code Ultron} with {@code newData}.","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    public void resetData(ReadOnlyUltron newData) {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        setOpenings(newData.getOpeningList());","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    //// opening-level operations","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a opening with the same identity as {@code opening} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    public boolean hasOpening(Opening opening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        return openings.contains(opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     * Adds a opening to the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     * The opening must not already exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    public void addOpening(Opening p) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"        openings.add(p);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"     * Replaces the given opening {@code target} in the list with {@code editedOpening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"     * The opening identity of {@code editedOpening} must not be the same as another","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"     * existing opening in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    public void setOpening(Opening target, Opening editedOpening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        openings.setOpening(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"     * Removes {@code key} from this {@code Ultron}.","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"    public void removeOpening(Opening key) {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"        openings.remove(key);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"    //// util methods","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"        return openings.asUnmodifiableObservableList().size() + \" openings\";","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"    public ObservableList\u003cOpening\u003e getOpeningList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"        return openings.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Ultron // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 openings.equals(((Ultron) other).openings));","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"        return openings.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":121}},{"path":"src/main/java/seedu/address/model/UserPrefsNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"public class UserPrefsNew implements ReadOnlyUserPrefsNew {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    private Path ultronFilePath \u003d Paths.get(\"data\" , \"ultron.json\");","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * Creates a {@code UserPrefsNew} with default values.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public UserPrefsNew() {}","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     * Creates a {@code UserPrefsNew} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    public UserPrefsNew(ReadOnlyUserPrefsNew userPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        this();","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     * Resets the existing data of this {@code UserPrefsNew} with {@code newUserPrefs}.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    public void resetData(ReadOnlyUserPrefsNew newUserPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        setUltronFilePath(newUserPrefs.getUltronFilePath());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        return guiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        return ultronFilePath;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    public void setUltronFilePath(Path ultronFilePath) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        this.ultronFilePath \u003d ultronFilePath;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        if (!(other instanceof UserPrefsNew)) { //this handles null as well.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        UserPrefsNew o \u003d (UserPrefsNew) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 ultronFilePath.equals(o.ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"        return Objects.hash(guiSettings, ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"        sb.append(\"\\nLocal data file location : \" + ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":87}},{"path":"src/main/java/seedu/address/model/opening/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents a Opening\u0027s company in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"public class Company {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"            \"Companies should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    public final String fullCompany;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Company}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     * @param company A valid company.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    public Company(String company) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"        fullCompany \u003d company;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        return fullCompany;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Company // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 fullCompany.equals(((Company) other).fullCompany)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        return fullCompany.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Lanreath":59}},{"path":"src/main/java/seedu/address/model/opening/CompanyOrPositionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":" * Tests that a {@code Opening}\u0027s {@code Company} or {@code Position} matches any of the keywords given.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"public class CompanyOrPositionContainsKeywordsPredicate implements Predicate\u003cOpening\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"    public CompanyOrPositionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"    public boolean test(Opening opening) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(opening.getPosition().fullPosition, keyword)","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"                        || StringUtil.containsWordIgnoreCase(opening.getCompany().fullCompany, keyword));","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"                || (other instanceof CompanyOrPositionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"                \u0026\u0026 keywords.equals(((CompanyOrPositionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"antonlee59":32}},{"path":"src/main/java/seedu/address/model/opening/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":" * Represents an Opening\u0027s date in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"public class Date {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"            \"Dates should only be in the format yyyy-MM-dd e.g. 2023-01-01\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    public final String fullDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    public Date(String name, String date) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"        fullDate \u003d date;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"            dateFormat.parse(test);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        return fullName + \": \" + fullDate;","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 fullName.equals(((Date) other).fullName)","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 fullDate.equals(((Date) other).fullDate)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"        return Objects.hash(fullName, fullDate);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"antonlee59":1,"Lanreath":63}},{"path":"src/main/java/seedu/address/model/opening/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":" * Represents a Company\u0027s email in the openings list.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"public class Email {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    public static final String VALIDATION_REGEX_EMAIL \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"     * @param email A valid email address.","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    public Email(String email) {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"        value \u003d email;","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        return test.matches(VALIDATION_REGEX_EMAIL);","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BagDownB3nny":13,"Lanreath":58}},{"path":"src/main/java/seedu/address/model/opening/Opening.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":" * Represents an Opening in the Openings list.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"public class Opening {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    // Identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    private final Position position;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    private final Company company;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"    private final Email email;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    // Data fields","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    private final Status status;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    private final Set\u003cDate\u003e dates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    public Opening(Position position, Company company, Email email, Status status, Remark remark, Set\u003cDate\u003e dates) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"        requireAllNonNull(position, company, email, status, dates);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        this.dates.addAll(dates);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    public Position getPosition() {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        return position;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public Company getCompany() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        return company;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"        return email;","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        return status;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        return remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"     * Returns an immutable date set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"    public Set\u003cDate\u003e getDates() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        return Collections.unmodifiableSet(dates);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"     * Returns true if both openings have the same position and company.","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"     * This defines a weaker notion of equality between two openings.","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"    public boolean isSameOpening(Opening otherOpening) {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"        if (otherOpening \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"        return otherOpening !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getPosition().equals(getPosition())","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getCompany().equals(getCompany());","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"     * Returns true if both openings have the same identity and data fields.","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"     * This defines a stronger notion of equality between two openings.","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"        if (!(other instanceof Opening)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"        Opening otherOpening \u003d (Opening) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"        return otherOpening.getPosition().equals(getPosition())","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getCompany().equals(getCompany())","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getRemark().equals(getRemark())","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getDates().equals(getDates());","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"        return Objects.hash(position, company, email, status, remark, dates);","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"        builder.append(getPosition())","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"                .append(\" Company: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"                .append(getCompany())","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"                .append(\" Email: \")","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"                .append(\" Status: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"                .append(getStatus())","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"                .append(\" Remark: \")","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Lanreath"},"content":"                .append(getRemark())","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"                .append(\" Dates: \");","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"        Set\u003cDate\u003e dates \u003d getDates();","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Lanreath"},"content":"        if (!dates.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"            builder.append(\"; Dates: \");","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"            dates.forEach(builder::append);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BagDownB3nny":5,"Lanreath":128}},{"path":"src/main/java/seedu/address/model/opening/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents a Opening\u0027s position in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPosition(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"public class Position {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"            \"Positions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    public final String fullPosition;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Position}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     * @param position A valid position.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    public Position(String position) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(position);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidPosition(position), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"        fullPosition \u003d position;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string is a valid position.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        return fullPosition;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 fullPosition.equals(((Position) other).fullPosition)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        return fullPosition.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Lanreath":59}},{"path":"src/main/java/seedu/address/model/opening/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":" * Represents a Person\u0027s remark in the remark book.","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public class Remark {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"    public final String value;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * Constructs an {@code remark}.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":42}},{"path":"src/main/java/seedu/address/model/opening/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents an Opening\u0027s status in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public class Status {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"            \"Statuses should only match the following: FOUND, APPLIED, INTERVIEWING, OFFERED, REJECTED\";","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"     * The enum of all possible statuses.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    public static enum StatusEnum {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"        FOUND, APPLIED, INTERVIEWING, OFFERED, REJECTED, ACCEPTED","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public final String fullStatus;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     * @param status A valid status.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    public Status(String status) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        fullStatus \u003d status;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        for (StatusEnum status : StatusEnum.values()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"            if (status.name().equals(test)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"                return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        return fullStatus;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 fullStatus.equals(((Status) other).fullStatus)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"        return fullStatus.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Lanreath":62}},{"path":"src/main/java/seedu/address/model/opening/UniqueOpeningList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.exceptions.DuplicateOpeningException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.opening.exceptions.OpeningNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":" * A list of openings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * A opening is considered unique by comparing using {@code Opening#isSameOpening(Opening)}.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" * As such, adding and updating of openings uses Opening#isSameOpening(Opening) for equality","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":" * so as to ensure that the opening being added or updated is","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":" * unique in terms of identity in the UniqueOpeningList. However, the removal of a opening","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":" * uses Opening#equals(Object) so as to ensure that the opening","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":" * @see Opening#isSameOpening(Opening)","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"public class UniqueOpeningList implements Iterable\u003cOpening\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    private final ObservableList\u003cOpening\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    private final ObservableList\u003cOpening\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * Returns true if the list contains an equivalent opening as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    public boolean contains(Opening toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"     * Adds a opening to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"     * The opening must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    public void add(Opening toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"            throw new DuplicateOpeningException();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"     * Replaces the opening {@code target} in the list with {@code editedOpening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"     * The opening identity of {@code editedOpening} must not be the same as another existing opening in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    public void setOpening(Opening target, Opening editedOpening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"            throw new OpeningNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        if (!target.isSameOpening(editedOpening) \u0026\u0026 contains(editedOpening)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"            throw new DuplicateOpeningException();","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"        internalList.set(index, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"     * Removes the equivalent opening from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"     * The opening must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    public void remove(Opening toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"            throw new OpeningNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"    public void setOpenings(UniqueOpeningList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"     * Replaces the contents of this list with {@code openings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"     * {@code openings} must not contain duplicate openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"    public void setOpenings(List\u003cOpening\u003e openings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(openings);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"        if (!openingsAreUnique(openings)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"            throw new DuplicateOpeningException();","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"        internalList.setAll(openings);","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    public ObservableList\u003cOpening\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"    public Iterator\u003cOpening\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof UniqueOpeningList // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"                        \u0026\u0026 internalList.equals(((UniqueOpeningList) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"     * Returns true if {@code openings} contains only unique openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Lanreath"},"content":"    private boolean openingsAreUnique(List\u003cOpening\u003e openings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"        for (int i \u003d 0; i \u003c openings.size() - 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"            for (int j \u003d i + 1; j \u003c openings.size(); j++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Lanreath"},"content":"                if (openings.get(i).isSameOpening(openings.get(j))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Lanreath"},"content":"                    return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Lanreath"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Lanreath"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":139}},{"path":"src/main/java/seedu/address/model/opening/exceptions/DuplicateOpeningException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":" * identity).","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"public class DuplicateOpeningException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"    public DuplicateOpeningException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"        super(\"Operation would result in duplicate openings\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":11}},{"path":"src/main/java/seedu/address/model/opening/exceptions/OpeningNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.opening.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"public class OpeningNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":6}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"     * Returns the remark of the person.","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"        return remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark());","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"        return Objects.hash(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"                .append(\"; Remark: \");","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":119,"Lanreath":15}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":" * Represents a Person\u0027s remark in the remark book.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public class Remark {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"    public final String value;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * Constructs an {@code remark}.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        return value;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Lanreath":42}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Remark(\"Likes to act.\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"Likes to bowl.\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"Likes to cook.\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"Likes to dance.\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"Likes to ice skate.\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"Likes to row.\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":53,"Lanreath":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtilNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.Ultron;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.opening.Company;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.opening.Date;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.opening.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.opening.Position;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.opening.Remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"import seedu.address.model.opening.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":" * Contains utility methods for populating {@code Ultron} with sample data.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"public class SampleDataUtilNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"    public static Opening[] getSampleOpenings() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"        return new Opening[] {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"            new Opening(new Position(\"Software Engineer\"), new Company(\"Google\"), new Email(\"johnDoe@google.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"                    new Status(\"FOUND\"), null, getDateSet(new Date(\"Interview\", \"2023-11-21\"))),","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"            new Opening(new Position(\"Software Developer\"), new Company(\"Shopee\"), new Email(\"alice@shopee.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"                    new Status(\"APPLIED\"), new Remark(\"Dream Company\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"                    getDateSet(new Date(\"Interview\", \"2023-10-15\"))),","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"            new Opening(new Position(\"UX Designer\"), new Company(\"Grab\"), new Email(\"tenz@grab.com\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"                    new Status(\"FOUND\"), null, getDateSet(new Date(\"Interview\", \"2023-04-12\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"                        new Date(\"Practical Assessment\", \"2023-05-11\"))),","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"            new Opening(new Position(\"Software Engineer\"), new Company(\"Gojek\"), new Email(\"sleepy@gojek.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"                    new Status(\"FOUND\"), null, getDateSet())","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"    public static ReadOnlyUltron getSampleUltron() {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"        Ultron sampleUltron \u003d new Ultron();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"        for (Opening sampleOpening : getSampleOpenings()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"            sampleUltron.addOpening(sampleOpening);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"        return sampleUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"    public static Set\u003cDate\u003e getDateSet(Date... dates) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"        return Arrays.stream(dates)","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Varstak":46,"antonlee59":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Date;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":" * Jackson-friendly version of {@link Date}.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"class JsonAdaptedDate {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"    private final String name;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"    private final String date;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"     * Constructs a {@code JsonAdapteddate} with the given {@code dateName}.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonAdaptedDate(String name, String date) {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts a given {@code date} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonAdaptedDate(Date source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"        name \u003d source.fullName;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"        date \u003d source.fullDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    @JsonValue","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"    public String getdateName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"        return date;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts this Jackson-friendly adapted date object into the model\u0027s {@code date} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted date.","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"    public Date toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"        return new Date(name, date);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOpening.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Company;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Date;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Position;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":" * Jackson-friendly version of {@link Opening}.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"class JsonAdaptedOpening {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Opening\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    private final String position;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    private final String company;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    private final String email;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"    private final String status;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    private final String remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    private final List\u003cJsonAdaptedDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"     * Constructs a {@code JsonAdaptedOpening} with the given Opening details.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonAdaptedOpening(@JsonProperty(\"Position\") String position, @JsonProperty(\"Company\") String company,","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"Status\") String status,","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"                              @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"                              @JsonProperty(\"Dateged\") List\u003cJsonAdaptedDate\u003e dates) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        if (dates !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"            this.dates.addAll(dates);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts a given {@code Opening} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonAdaptedOpening(Opening source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"        position \u003d source.getPosition().fullPosition;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"        company \u003d source.getCompany().fullCompany;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"        status \u003d source.getStatus().fullStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"        dates.addAll(source.getDates().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"                .map(JsonAdaptedDate::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts this Jackson-friendly adapted Opening object into the model\u0027s {@code Opening} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Opening.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    public Opening toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        final List\u003cDate\u003e openingDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        for (JsonAdaptedDate date : dates) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"            openingDates.add(date.toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Position.isValidPosition(position)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Company.isValidCompany(company)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"        final Set\u003cDate\u003e modelDates \u003d new HashSet\u003c\u003e(openingDates);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"        return new Opening(modelPosition, modelCompany, modelEmail, modelStatus, modelRemark, modelDates);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":123}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    private final String remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":107,"Lanreath":12}},{"path":"src/main/java/seedu/address/storage/JsonSerializableUltron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.Ultron;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":" * An Immutable Ultron that is serializable to JSON format.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"@JsonRootName(value \u003d \"Ultron\")","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"class JsonSerializableUltron {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_DUPLICATE_OPENING \u003d \"Openings list contains duplicate opening(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"    private final List\u003cJsonAdaptedOpening\u003e openings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"     * Constructs a {@code JsonSerializableUltron} with the given openings.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonSerializableUltron(@JsonProperty(\"openings\") List\u003cJsonAdaptedOpening\u003e openings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"        this.openings.addAll(openings);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts a given {@code ReadOnlyUltron} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableUltron}.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonSerializableUltron(ReadOnlyUltron source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        openings.addAll(source.getOpeningList().stream().map(JsonAdaptedOpening::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts this address book into the model\u0027s {@code Ultron} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"    public Ultron toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        Ultron ultron \u003d new Ultron();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"        for (JsonAdaptedOpening jsonAdaptedopening : openings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"            Opening opening \u003d jsonAdaptedopening.toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"            if (ultron.hasOpening(opening)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"            ultron.addOpening(opening);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"        return ultron;","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":60}},{"path":"src/main/java/seedu/address/storage/JsonUltronStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":" * A class to access Ultron data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"public class JsonUltronStorage implements UltronStorage {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUltronStorage.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonUltronStorage(Path filePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"        return filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"        return readUltron(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"     * Similar to {@link #readUltron()}.","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        Optional\u003cJsonSerializableUltron\u003e jsonUltron \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"                filePath, JsonSerializableUltron.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        if (!jsonUltron.isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"            return Optional.of(jsonUltron.get().toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"        saveUltron(ultron, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"     * Similar to {@link #saveUltron(ReadOnlyUltron)}.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron, Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(ultron);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUltron(ultron), filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":81}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorageNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.UserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"public class JsonUserPrefsStorageNew implements UserPrefsStorageNew {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"    public JsonUserPrefsStorageNew(Path filePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"        return filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"    public Optional\u003cUserPrefsNew\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"    public Optional\u003cUserPrefsNew\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefsNew.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefsNew userPrefs) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":47}},{"path":"src/main/java/seedu/address/storage/StorageManagerNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.UserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":" * Manages storage of Ultron data in local storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"public class StorageManagerNew implements StorageNew {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManagerNew.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    private UltronStorage ultronStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"    private UserPrefsStorageNew userPrefsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code StorageManager} with the given {@code UltronStorage} and {@code UserPrefStorageNew}.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    public StorageManagerNew(UltronStorage ultronStorage, UserPrefsStorageNew userPrefsStorage) {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"        this.ultronStorage \u003d ultronStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"    public Optional\u003cUserPrefsNew\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefsNew userPrefs) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ultron methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"        return ultronStorage.getUltronFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"        return readUltron(ultronStorage.getUltronFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"        return ultronStorage.readUltron(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"        saveUltron(ultron, ultronStorage.getUltronFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron, Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        ultronStorage.saveUltron(ultron, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":71,"antonlee59":7}},{"path":"src/main/java/seedu/address/storage/StorageNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.UserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":" * API of the Storage component","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"public interface StorageNew extends UltronStorage, UserPrefsStorageNew {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"    Optional\u003cUserPrefsNew\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"    void saveUserPrefs(ReadOnlyUserPrefsNew userPrefs) throws IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    void saveUltron(ReadOnlyUltron ultron) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":27,"antonlee59":5}},{"path":"src/main/java/seedu/address/storage/UltronStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":" * Represents a storage for {@link seedu.address.model.Ultron}.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"public interface UltronStorage {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns Ultron data as a {@link ReadOnlyUltron}.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"     * @see #getUltronFilePath()","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    Optional\u003cReadOnlyUltron\u003e readUltron(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"     * Saves the given {@link ReadOnlyUltron} to the storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"     * @param ultron cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    void saveUltron(ReadOnlyUltron ultron) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"     * @see #saveUltron(ReadOnlyUltron)","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    void saveUltron(ReadOnlyUltron ultron, Path filePath) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":45}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorageNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.ReadOnlyUserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.UserPrefsNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefsnew}.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"public interface UserPrefsStorageNew {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"     * Returns UserPrefsNew data from storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"    Optional\u003cUserPrefsNew\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefsNew} to the storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    void saveUserPrefs(ReadOnlyUserPrefsNew userPrefs) throws IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":36}},{"path":"src/main/java/seedu/address/ui/CommandBoxNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.CommandResultNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"public class CommandBoxNew extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"    private TextField commandTextField;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"    public CommandBoxNew(CommandExecutor commandExecutor) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"        super(FXML);","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"antonlee59"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"antonlee59"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"antonlee59"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"antonlee59"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"        /**","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"antonlee59"},"content":"         *","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"antonlee59"},"content":"         */","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"antonlee59"},"content":"        CommandResultNew execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":85}},{"path":"src/main/java/seedu/address/ui/MainWindowNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.LogicNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.CommandResultNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"public class MainWindowNew extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    private static final String FXML \u003d \"MainWindowNew.fxml\";","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"    private LogicNew logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    private OpeningListPanel openingListPanel;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"    private StackPane openingListPanelPlaceholder;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"    public MainWindowNew(Stage primaryStage, LogicNew logic) {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"        // Set dependencies","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"antonlee59"},"content":"        // Configure the UI","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"antonlee59"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"        setAccelerators();","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"antonlee59"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"antonlee59"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"        return primaryStage;","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"antonlee59"},"content":"    private void setAccelerators() {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"antonlee59"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"antonlee59"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"antonlee59"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"antonlee59"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"antonlee59"},"content":"        /*","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"antonlee59"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"antonlee59"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"antonlee59"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"antonlee59"},"content":"         *","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"antonlee59"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"antonlee59"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"antonlee59"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"antonlee59"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"antonlee59"},"content":"         *","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"antonlee59"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"antonlee59"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"antonlee59"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"antonlee59"},"content":"         */","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"antonlee59"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"antonlee59"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"antonlee59"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"antonlee59"},"content":"                event.consume();","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"antonlee59"},"content":"        });","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"antonlee59"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"antonlee59"},"content":"    void fillInnerParts() {","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"antonlee59"},"content":"        openingListPanel \u003d new OpeningListPanel(logic.getFilteredOpeningList());","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"antonlee59"},"content":"        openingListPanelPlaceholder.getChildren().add(openingListPanel.getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"antonlee59"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"antonlee59"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"antonlee59"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getUltronFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"antonlee59"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"antonlee59"},"content":"        CommandBoxNew commandBox \u003d new CommandBoxNew(this::executeCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"antonlee59"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"antonlee59"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"antonlee59"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"antonlee59"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"antonlee59"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"antonlee59"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"antonlee59"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"antonlee59"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"antonlee59"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"antonlee59"},"content":"    public void handleHelp() {","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"antonlee59"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"antonlee59"},"content":"            helpWindow.show();","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"antonlee59"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"antonlee59"},"content":"            helpWindow.focus();","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"antonlee59"},"content":"    void show() {","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"antonlee59"},"content":"        primaryStage.show();","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"antonlee59"},"content":"     * Closes the application.","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"antonlee59"},"content":"    private void handleExit() {","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"antonlee59"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"antonlee59"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"antonlee59"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"antonlee59"},"content":"        helpWindow.hide();","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"antonlee59"},"content":"        primaryStage.hide();","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"antonlee59"},"content":"    public OpeningListPanel getOpeningListPanel() {","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"antonlee59"},"content":"        return openingListPanel;","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"antonlee59"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"antonlee59"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"antonlee59"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"antonlee59"},"content":"    private CommandResultNew executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"antonlee59"},"content":"            CommandResultNew commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"antonlee59"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"antonlee59"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"antonlee59"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"antonlee59"},"content":"                handleHelp();","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"antonlee59"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"antonlee59"},"content":"                handleExit();","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"antonlee59"},"content":"            return commandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"antonlee59"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"antonlee59"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"antonlee59"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"antonlee59"},"content":"            throw e;","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":195}},{"path":"src/main/java/seedu/address/ui/OpeningCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":" * An UI component that displays information of a {@code Opening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"public class OpeningCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    private static final String FXML \u003d \"OpeningListCard.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"    public final Opening opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"    private Label company;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    private Label id;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    private Label position;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"    private Label status;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"    private Label email;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"    private Label remark;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"    private FlowPane dates;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code OpeningCode} with the given {@code Opening} and index to display.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"    public OpeningCard(Opening opening, int displayedIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"        this.opening \u003d opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"        company.setText(opening.getCompany().fullCompany);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"        position.setText(opening.getPosition().fullPosition);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"        status.setText(opening.getStatus().fullStatus);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        email.setText(opening.getEmail().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"        remark.setText(String.format(\"Remark: [%s]\", opening.getRemark().value));","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"        opening.getDates().stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"                .sorted(Comparator.comparing(date -\u003e date.fullDate))","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"                .forEach(date -\u003e dates.getChildren().add(new Label(date.fullDate)));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"antonlee59"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"antonlee59"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"antonlee59"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"antonlee59"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"antonlee59"},"content":"        if (!(other instanceof OpeningCard)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"antonlee59"},"content":"        // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"antonlee59"},"content":"        OpeningCard card \u003d (OpeningCard) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"                \u0026\u0026 opening.equals(card.opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":79,"Lanreath":1}},{"path":"src/main/java/seedu/address/ui/OpeningListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import seedu.address.model.opening.Opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":" * Panel containing the list of openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"public class OpeningListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    private static final String FXML \u003d \"OpeningListPanel.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OpeningListPanel.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"    private ListView\u003cOpening\u003e openingListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code OpeningListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    public OpeningListPanel(ObservableList\u003cOpening\u003e openingList) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"        openingListView.setItems(openingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"        openingListView.setCellFactory(listView -\u003e new OpeningListViewCell());","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Opening} using a {@code OpeningCard}.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"    class OpeningListViewCell extends ListCell\u003cOpening\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"        protected void updateItem(Opening opening, boolean empty) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"            super.updateItem(opening, empty);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"            if (empty || opening \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"                setText(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"            } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"                setGraphic(new OpeningCard(opening, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":49}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    private Label remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":77,"Lanreath":3}},{"path":"src/main/java/seedu/address/ui/UiManagerNew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"import seedu.address.logic.LogicNew;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":" * The manager of the UI component.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"public class UiManagerNew implements Ui {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"    private LogicNew logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    private MainWindowNew mainWindow;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code UiManagerNew} with the given {@code LogicNew}.","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"    public UiManagerNew(LogicNew logic) {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"        //Set the application icon.","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"            mainWindow \u003d new MainWindowNew(primaryStage, logic);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"antonlee59"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"antonlee59"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"                                               String contentText) {","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"antonlee59"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"antonlee59"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"antonlee59"},"content":"        alert.setTitle(title);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"antonlee59"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"        alert.showAndWait();","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"antonlee59"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"antonlee59"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"antonlee59"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"antonlee59"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"antonlee59"},"content":"        Platform.exit();","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"antonlee59"},"content":"        System.exit(1);","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":".root{","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"BagDownB3nny":17,"-":340}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"BagDownB3nny":7,"-":19}},{"path":"src/main/resources/view/MainWindowNew.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"        \u003cVBox fx:id\u003d\"openingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"          \u003cStackPane fx:id\u003d\"openingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":60}},{"path":"src/main/resources/view/OpeningListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"        \u003cLabel fx:id\u003d\"company\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"      \u003cFlowPane fx:id\u003d\"dates\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"      \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$position\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":37}},{"path":"src/main/resources/view/OpeningListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"  \u003cListView fx:id\u003d\"openingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":36,"Lanreath":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BagDownB3nny":2,"-":159,"Lanreath":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Likes to swim.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Likes to code.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":128,"Lanreath":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"BagDownB3nny":2,"-":107}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"BagDownB3nny":2,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_OPENING_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"        String expectedMessage \u003d String.format(MESSAGE_OPENING_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"        String expectedMessage \u003d String.format(MESSAGE_OPENING_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"antonlee59":3,"-":80}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"                + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"                + VALID_ADDRESS_BOB + VALID_REMARK_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"                + VALID_ADDRESS_BOB + VALID_REMARK_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Lanreath"},"content":"                + INVALID_ADDRESS_DESC + REMARK_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"Lanreath"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"Lanreath"},"content":"                + INVALID_ADDRESS_DESC + REMARK_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"Lanreath"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":122,"Lanreath":34}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"                .withAddress(VALID_ADDRESS_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":90,"Lanreath":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"Lanreath":14}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":94,"Lanreath":14}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":62,"Lanreath":2}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"            .withRemark(\"He likes to swim.\")","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"            .withRemark(\"He likes to code.\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"            .withRemark(\"He likes to dance.\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"            .withRemark(\"She likes eating.\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"            .withRemark(\"She likes fashion.\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"            .withRemark(\"He likes gaming.\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"            .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"            .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":68,"Lanreath":18}}]
