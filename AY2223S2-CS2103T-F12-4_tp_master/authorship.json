[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"# Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-F12-4/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/AY2223S2-CS2103T-F12-4/tp)","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"Ultron is a **desktop app for managing internships, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Ultron can streamline your internship management.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"## Quick start","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"**Prerequisites**: Java 11 or above","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"1. Download the latest version of Ultron from our [release page](https://github.com/AY2223S2-CS2103T-F12-2/tp/releases)","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"2. Copy the file to the folder you want to use as the _home folder_ for your Ultron app.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"3. Run the command `java -jar ultron.jar` in the terminal to start the app.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"## Features","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"Listed below are the available commands in Ultron.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"| Command | Format, Examples |","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"|---------|------------------|","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"| To be added soon | To be added soon |","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"## Links","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"* [**User Guide**](https://ay2223s2-cs2103t-f12-4.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"* [**Developer Guide**](https://ay2223s2-cs2103t-f12-4.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"-":3,"Lanreath":27}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"mainClassName \u003d \u0027seedu.ultron.Main\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//checkstyle {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    archiveFileName \u003d \u0027ultron.jar\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"jar {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"    manifest {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"        attributes(","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"                \u0027Main-Class\u0027: \u0027seedu.ultron.ui.MainApp\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"run {","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BagDownB3nny":11,"-":66,"Lanreath":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"You can reach us at the email `darrensim999@gmail.com`","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"### Kevin Eyo Kai Wen","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/kevineyo1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/KevinEyo1)]","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"* Role: Team Lead/Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"### Tan Yu Fei","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/lanreath.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/Lanreath)]","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"* Role: Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Testing and developer guide","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"### Anton Timothy Lee Zi Jie","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/antonlee59.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/antonlee59)]","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Code quality and developer guide","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"### Alexander Lee Shao Bin","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/varstak.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/Varstak)]","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Deliverables and deadlines, user guide","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"### Darren Sim","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/bagdownb3nny.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"[[github](https://github.com/BagDownB3nny)]","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"* Responsibilities: Integration","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"-":36,"Lanreath":24}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"- Table of Contents","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"- [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"- [**Design**](#design)","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"  - [UI component](#ui-component)","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"  - [Logic component](#logic-component)","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"  - [Model component](#model-component)","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"  - [Common classes](#common-classes)","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"- [**Implementation**](#implementation)","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"  - [Add remark feature](#add-remark-feature)","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"  - [Show opening details feature](#show-opening-details-feature)","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"  - [Upcoming keydates feature](#upcoming-keydates-feature)","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"  - [Filter by status feature](#filter-by-status-feature)","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"- [**Appendix: Requirements**](#appendix-requirements)","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"  - [User stories](#user-stories)","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"  - [Use cases](#use-cases)","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"- [**Appendix: Instructions for manual testing**](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"  - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"  - [Deleting an opening](#deleting-a-opening)","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"  - [Saving data](#saving-data)","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-F12-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/ultron/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/ultron/MainApp.java). It is responsible for,","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/ultron/ui/Ui.java)","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `OpeningListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/ultron/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"* depends on some classes in the `Model` component, as it displays `Opening` object residing in the `Model`.","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/ultron/logic/Logic.java)","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"1. When `Logic` is called upon to execute a command, it uses the `UltronParser` class to parse the user command.","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add an opening).","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"* When called upon to parse a user command, the `UltronParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `UltronParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"Lanreath"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/ultron/model/Model.java)","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Lanreath"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Lanreath"},"content":"* stores the address book data i.e., all `Opening` objects (which are contained in a `UniqueOpeningList` object).","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"Lanreath"},"content":"* stores the currently \u0027selected\u0027 `Opening` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cOpening\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"Lanreath"},"content":"\u003c!-- \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Ultron`, which `Opening` references. This allows `Ultron` to only require one `Tag` object per unique tag, instead of each `Opening` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Lanreath"},"content":"\u003c/div\u003e --\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Lanreath"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-F12-4/tp/blob/master/src/main/java/seedu/ultron/storage/Storage.java)","lastModifiedDate":"2023-04-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"Lanreath"},"content":"* inherits from both `UltronStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Lanreath"},"content":"Classes used by multiple components are in the `seedu.ultron.commons` package.","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Lanreath"},"content":"### Add remark feature","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"Lanreath"},"content":"\u003c!-- Darren --\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"Lanreath"},"content":"### Show opening details feature","lastModifiedDate":"2023-04-05"},{"lineNumber":178,"author":{"gitId":"Lanreath"},"content":"\u003c!-- Yu Fei --\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"Lanreath"},"content":"### Upcoming keydates feature","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"Lanreath"},"content":"\u003c!-- Anton, Alex --\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"Lanreath"},"content":"### Filter by status feature","lastModifiedDate":"2023-04-05"},{"lineNumber":182,"author":{"gitId":"Lanreath"},"content":"\u003c!-- Kevin --\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"BagDownB3nny"},"content":"* has a need to manage a significant number of internship applications","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"Lanreath"},"content":"**Value proposition**: manage openings faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-04-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"KevinEyo1"},"content":"| Priority | As a …​                                    | I can …​                                                   | So that I can…​                                     |","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"KevinEyo1"},"content":"| ------ | ------------------------------------------ |------------------------------------------------------------|-----------------------------------------------------|","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"BagDownB3nny"},"content":"| `* * *` | potential user exploring the app           | see the app populated with sample openings                 | easily see how the app will look when it is in use. |","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"BagDownB3nny"},"content":"| `* * *` | user                                       | add an opening regarding the internship I am interested in | keep note of it                                     |","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"BagDownB3nny"},"content":"| `* * *` | user                                       | delete an opening                                          | remove unwanted openings                            |","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"KevinEyo1"},"content":"| `* * *` | user                                       | see all applications                                       | track my progress                                   |","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"KevinEyo1"},"content":"| `* * *` | user                                       | add multiple keydates                                      | store all important dates for each opening          |","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"KevinEyo1"},"content":"| `* * *` | user                                       | link certain key events of an opening to a date            | remember which event happens on what date           |","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"KevinEyo1"},"content":"| `* * *` | user                                       | sort my keydates in order                                  | see which keydate of which opening to focus on      |","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"KevinEyo1"},"content":"| `* * *` | user                                       | see openings of a specific status                          | view specific kinds of openings at once             |","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"KevinEyo1"},"content":"| `* * *` | user                                       | see what keydates are nearing                              | avoid missing any keydates of any openings          |","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"KevinEyo1"},"content":"| `* *`  | user                                       | add remarks to my openings                                 | add any addtional details tied to specific openings |","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"BagDownB3nny"},"content":"| `* *`  | user                                       | see submission deadlines                                   | check them                                          |","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"KevinEyo1"},"content":"| `*`    | user | see the total number of accepted applications              | celebrate my success                                |","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"KevinEyo1"},"content":"| `*` | user | see all the outcomes of my application                     | properly assess my options                          |","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"BagDownB3nny"},"content":"(For all use cases below, the **System** is `Ultron` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 1 - Adding an opening**","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to add an opening","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron adds the opening to its list of openings","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"BagDownB3nny"},"content":"   Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"BagDownB3nny"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"BagDownB3nny"},"content":"1a. Ultron detects an error in the entered data.","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the data is invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 2 - Deleting an opening**","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to delete an opening","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron deletes the opening from its list of openings","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"BagDownB3nny"},"content":"   Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"BagDownB3nny"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"BagDownB3nny"},"content":"1a. Ultron detects an error in the entered data.","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the data is invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 3 - Editing an opening**","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to edit an opening","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron edits the opening based on the user input parameters","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"BagDownB3nny"},"content":"1a. Ultron detects an error in the entered data.","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the data is invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 4 - See all openings**","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to list all openings","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron shows the user a list of all the openings that the user has added","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"BagDownB3nny"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"BagDownB3nny"},"content":"1a. List is empty","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that the list is currently empty","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 5 - See all openings with a specific status**","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to list all openings of a specific status","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron shows the user a list of all the openings that match the status given by the user","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"BagDownB3nny"},"content":"   Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"BagDownB3nny"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"BagDownB3nny"},"content":"1a. No opening contains the status specified by the user","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"BagDownB3nny"},"content":"    1a1. Ultron informs the user that no openings of that status exist","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"BagDownB3nny"},"content":"    Use case ends","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"BagDownB3nny"},"content":"**Use case:  UC 6 - Sort openings by deadline**","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"BagDownB3nny"},"content":"**MSS**","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"BagDownB3nny"},"content":"1. User enters a command to sort all openings by deadline in ascending order","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"BagDownB3nny"},"content":"2. Ultron shows the user a list of openings that contain deadlines, sorted by deadlines in ascending order","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"BagDownB3nny"},"content":"   Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"BagDownB3nny"},"content":"2. The app should be fast and respond within 100ms when users input commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"BagDownB3nny"},"content":"3. The app should start up and load the list from a saved file within 1 second of opening.","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"BagDownB3nny"},"content":"* **Opening**: Item representing an internship opening","lastModifiedDate":"2023-03-03"},{"lineNumber":315,"author":{"gitId":"KevinEyo1"},"content":"* **Keydate**: Item representing a event tied to a particular date or deadline","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"Lanreath"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample openings. The window size may not be optimum.","lastModifiedDate":"2023-04-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"BagDownB3nny"},"content":"2. Saving window preferences","lastModifiedDate":"2023-04-06"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"BagDownB3nny"},"content":"3. Exiting via command line","lastModifiedDate":"2023-04-06"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"BagDownB3nny"},"content":"   1. Test case: `exit`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":346,"author":{"gitId":"BagDownB3nny"},"content":"      Expected: App exits with no issues and window closes","lastModifiedDate":"2023-04-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"BagDownB3nny"},"content":"### Adding an opening","lastModifiedDate":"2023-04-06"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":350,"author":{"gitId":"BagDownB3nny"},"content":"1. Adding an opening that does not already exist in the list","lastModifiedDate":"2023-04-06"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":352,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: Openings that are being added do not already exist in the list. Meaning that the opening does not share both the company name and position name with another opening","lastModifiedDate":"2023-04-06"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":354,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `add p/position c/company e/example@example.com s/applied`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":355,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: An opening is added to the end of the list. Success message shown in the status message. Opening added contains fields that match those given in the command line.","lastModifiedDate":"2023-04-06"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":357,"author":{"gitId":"BagDownB3nny"},"content":"    3. Test case: `add p/position c/company s/applied`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":358,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: No opening is added. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":360,"author":{"gitId":"BagDownB3nny"},"content":"    4. Other incorrect add commands to try: `add`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":361,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2023-04-06"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":363,"author":{"gitId":"BagDownB3nny"},"content":"2. Trying to add an opening that already exists in the list","lastModifiedDate":"2023-04-06"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":365,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: Openings that are trying to be added already exist in the list. Meaning that the opening shares both the company name and position name with another opening","lastModifiedDate":"2023-04-06"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":367,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `add p/position c/company e/example@example.com s/applied`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":368,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: No opening is added. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":369,"author":{"gitId":"BagDownB3nny"},"content":"    ","lastModifiedDate":"2023-04-06"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":371,"author":{"gitId":"BagDownB3nny"},"content":"### Editing an opening","lastModifiedDate":"2023-04-06"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":373,"author":{"gitId":"BagDownB3nny"},"content":"1. Editing an opening to change a field","lastModifiedDate":"2023-04-06"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"Lanreath"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `edit 1 p/new position`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":378,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: First opening gets edited. Success message shown in the status message. First opening now has \"new position\" in its position field.","lastModifiedDate":"2023-04-06"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"BagDownB3nny"},"content":"    3. Test case: `edit 0 p/new position`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":381,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: No opening is edited. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"BagDownB3nny"},"content":"    4. Other incorrect edit commands to try: `edit`, `edit x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":384,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"BagDownB3nny"},"content":"2. Editing an opening to add a deadline","lastModifiedDate":"2023-04-06"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":388,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list.","lastModifiedDate":"2023-04-06"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":390,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `edit 1 d/Online Assessment@2023-04-01`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":391,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: First opening gets edited. Success message shown in the status message. First opening now contains a deadline named \"Online Assessment\" due 2023-04-01.","lastModifiedDate":"2023-04-06"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":393,"author":{"gitId":"BagDownB3nny"},"content":"3. Editing an opening to replace a deadline","lastModifiedDate":"2023-04-06"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":395,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list. First opening contains a deadline","lastModifiedDate":"2023-04-06"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":397,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `edit 1 d/Interview@2023-04-05`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":398,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: First opening gets edited. Success message shown in the status message. First opening now contains a deadline named \"Interview\" due 2023-04-05.","lastModifiedDate":"2023-04-06"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":400,"author":{"gitId":"BagDownB3nny"},"content":"4. Editing an opening to remove a deadline","lastModifiedDate":"2023-04-06"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":402,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list. First opening contains a deadline","lastModifiedDate":"2023-04-06"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":404,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `edit 1 d/`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":405,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: First opening gets edited. Success message shown in the status message. First opening now contains no deadlines","lastModifiedDate":"2023-04-06"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":407,"author":{"gitId":"BagDownB3nny"},"content":"### Showing an opening","lastModifiedDate":"2023-04-06"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":409,"author":{"gitId":"BagDownB3nny"},"content":"1. Viewing the details of an opening while all openings are being shown","lastModifiedDate":"2023-04-06"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":411,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list.","lastModifiedDate":"2023-04-06"},{"lineNumber":412,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":413,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `show 1`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":414,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Details of first opening is shown in the right panel. Details of the shown opening shown in the status message.","lastModifiedDate":"2023-04-06"},{"lineNumber":415,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":416,"author":{"gitId":"BagDownB3nny"},"content":"    3. Test case: click on an opening on the left panel\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":417,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Details of clicked opening is shown in the right panel.","lastModifiedDate":"2023-04-06"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":419,"author":{"gitId":"BagDownB3nny"},"content":"    4. Test case: `show 0`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":420,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: No new opening is shown. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":422,"author":{"gitId":"BagDownB3nny"},"content":"    5. Other incorrect show commands to try: `show`, `show x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":423,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2023-04-06"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":425,"author":{"gitId":"BagDownB3nny"},"content":"### Adding, editing or deleting a remark","lastModifiedDate":"2023-04-06"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":427,"author":{"gitId":"BagDownB3nny"},"content":"1. Adding a remark","lastModifiedDate":"2023-04-06"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":429,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list. ","lastModifiedDate":"2023-04-06"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":431,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `remark x r/3 rounds of interviews` (where x is the index of an opening without an existing remark) \u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":432,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Opening gets edited. Success message shown in the status message. Opening now has \"3 rounds of interviews\" in its remark field, visible after using the show command.","lastModifiedDate":"2023-04-06"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":434,"author":{"gitId":"BagDownB3nny"},"content":"    3. Test case: `remark 0 r/3 rounds of interviews`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":435,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: No opening is edited. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":436,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":437,"author":{"gitId":"BagDownB3nny"},"content":"    4. Other incorrect remark commands to try: `remark`, `remark x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":438,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2023-04-06"},{"lineNumber":439,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":440,"author":{"gitId":"BagDownB3nny"},"content":"2. Deleting a remark","lastModifiedDate":"2023-04-06"},{"lineNumber":441,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":442,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list.","lastModifiedDate":"2023-04-06"},{"lineNumber":443,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":444,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `remark x r/` (where x is the index of an opening with an existing remark)\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":445,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Opening gets edited. Success message shown in the status message. Opening now has no remarks in its remark field.","lastModifiedDate":"2023-04-06"},{"lineNumber":446,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":447,"author":{"gitId":"BagDownB3nny"},"content":"3. Editing a remark","lastModifiedDate":"2023-04-06"},{"lineNumber":448,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":449,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list. First opening contains a deadline","lastModifiedDate":"2023-04-06"},{"lineNumber":450,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":451,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `remark x r/Has difficult online assessment` (where x is the index of an opening with an existing remark) \u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":452,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Opening gets edited. Success message shown in the status message. Opening now has \"Has difficult online assessment\" in its remark field, visible after using the show command.","lastModifiedDate":"2023-04-06"},{"lineNumber":453,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":454,"author":{"gitId":"BagDownB3nny"},"content":"### Deleting an opening","lastModifiedDate":"2023-04-06"},{"lineNumber":455,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":456,"author":{"gitId":"BagDownB3nny"},"content":"1. Deleting an opening while all openings are being shown in list","lastModifiedDate":"2023-04-06"},{"lineNumber":457,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":458,"author":{"gitId":"BagDownB3nny"},"content":"   1. Prerequisites: List all openings using the `list` command. Multiple openings in the list.","lastModifiedDate":"2023-04-06"},{"lineNumber":459,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":460,"author":{"gitId":"BagDownB3nny"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":461,"author":{"gitId":"BagDownB3nny"},"content":"      Expected: First opening is deleted from the list. Details of the deleted opening shown in the status message.","lastModifiedDate":"2023-04-06"},{"lineNumber":462,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":463,"author":{"gitId":"BagDownB3nny"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":464,"author":{"gitId":"BagDownB3nny"},"content":"      Expected: No opening is deleted. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":465,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":466,"author":{"gitId":"BagDownB3nny"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-04-06"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":469,"author":{"gitId":"BagDownB3nny"},"content":"2. Deleting an opening currently being shown in the right panel","lastModifiedDate":"2023-04-06"},{"lineNumber":470,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":471,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: List all openings using the `list` command. Multiple openings in the list. Show the opening to be deleted using `show x` command (where x is index of opening to be deleted)","lastModifiedDate":"2023-04-06"},{"lineNumber":472,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":473,"author":{"gitId":"BagDownB3nny"},"content":"    1. Test case: `delete x`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":474,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: Opening with index x is deleted from the list. Details of the deleted opening shown in the status message. Right panel is now empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":475,"author":{"gitId":"BagDownB3nny"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":476,"author":{"gitId":"BagDownB3nny"},"content":"### Clearing all openings","lastModifiedDate":"2023-04-06"},{"lineNumber":477,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":478,"author":{"gitId":"BagDownB3nny"},"content":"1. Clearing all openings","lastModifiedDate":"2023-04-06"},{"lineNumber":479,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":480,"author":{"gitId":"BagDownB3nny"},"content":"    1. Test case: `clear`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":481,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: All openings are deleted from the list. Success message shown in status message.","lastModifiedDate":"2023-04-06"},{"lineNumber":482,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":483,"author":{"gitId":"BagDownB3nny"},"content":"### Finding an opening by company or position","lastModifiedDate":"2023-04-06"},{"lineNumber":484,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":485,"author":{"gitId":"BagDownB3nny"},"content":"1. Finding an opening by keyword","lastModifiedDate":"2023-04-06"},{"lineNumber":486,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":487,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: At least one opening with the word \"developer\" in its position or company name exists in the list","lastModifiedDate":"2023-04-06"},{"lineNumber":488,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":489,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `find developer`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":490,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: List filters out all openings that do not have the word \"developer\" in its position or company name. Number of found openings is shown in the status message. Command line remains the same","lastModifiedDate":"2023-04-06"},{"lineNumber":491,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":492,"author":{"gitId":"BagDownB3nny"},"content":"   3.Test case: `find`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":493,"author":{"gitId":"BagDownB3nny"},"content":"   Expected: List remains the same. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":494,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":495,"author":{"gitId":"BagDownB3nny"},"content":"### Finding an opening by status","lastModifiedDate":"2023-04-06"},{"lineNumber":496,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":497,"author":{"gitId":"BagDownB3nny"},"content":"1. Finding an opening by status","lastModifiedDate":"2023-04-06"},{"lineNumber":498,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":499,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: At least one opening with \"interviewing\" as its status","lastModifiedDate":"2023-04-06"},{"lineNumber":500,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":501,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `status interviewing`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":502,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: List filters out all openings that do not have \"interviewing\" as its status. Number of found openings is shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":503,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":504,"author":{"gitId":"BagDownB3nny"},"content":"   3.Test case: `status`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":505,"author":{"gitId":"BagDownB3nny"},"content":"   Expected: List remains the same. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":506,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":507,"author":{"gitId":"BagDownB3nny"},"content":"### Getting openings with upcoming deadlines","lastModifiedDate":"2023-04-06"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"BagDownB3nny"},"content":"1. Getting openings with upcoming deadlines","lastModifiedDate":"2023-04-06"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"BagDownB3nny"},"content":"    1. Prerequisites: Multiple openings in the list. Openings contain deadlines not passed due within 5 days of today.","lastModifiedDate":"2023-04-06"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"BagDownB3nny"},"content":"    2. Test case: `upcoming 5`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":514,"author":{"gitId":"BagDownB3nny"},"content":"       Expected: List shows openings that contain deadlines not passed within 5 days of today. Openings are sorted in order, with the openings with the closer deadlines on top. Number of found openings is shown in the status message.","lastModifiedDate":"2023-04-06"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"BagDownB3nny"},"content":"    3. Test case: `upcoming`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":517,"author":{"gitId":"BagDownB3nny"},"content":"   Expected: List remains the same. Error details shown in the status message. Command line remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":519,"author":{"gitId":"Lanreath"},"content":"## **Appendix: Effort**","lastModifiedDate":"2023-04-05"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":521,"author":{"gitId":"Lanreath"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"BagDownB3nny":190,"KevinEyo1":12,"-":260,"Lanreath":59}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"   1. Run the `seedu.ultron.Main` and try a few commands.","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Ultron’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":51,"Lanreath":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"Ultron is a **desktop app for compiling job and internship openings, optimized for use via typing**. The application interface provides you both a summary list and a detailed display, with a text input box for commands. If you are familiar with the Ultron interface and type fast, it can help you organise your openings in a quick and structured manner.","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"---","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"## Table of Contents","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"- [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"- [Features](#features)","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"  - [Adding an opening : `add`](#adding-an-opening--add)","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"  - [Listing all openings : `list`](#listing-all-openings--list)","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"  - [Editing an opening : `edit`](#editing-an-opening--edit)","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"  - [Editing an opening\u0027s remarks : `remark`](#editing-an-openings-remarks--remark)","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"  - [Showing full details of opening: `show`](#showing-full-details-of-opening-show)","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"  - [Listing upcoming dates : `upcoming`](#listing-upcoming-dates--upcoming)","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"  - [Filtering openings by company or position: `find`](#filtering-openings-by-company-or-position-find)","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"  - [Filtering openings by status: `status`](#filtering-openings-by-status-status)","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"  - [Deleting an opening : `delete`](#deleting-an-opening--delete)","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"  - [Deleting all openings : `clear`](#deleting-all-openings--clear)","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"  - [Accessing help window : `help`](#accessing-help-window--help)","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"  - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"---","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"1. Download the latest `ultron.jar` from [here](https://github.com/AY2223S2-CS2103T-F12-4/tp/releases/download/v1.3/ultron.jar).","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Ultron.","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar Ultron.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"   You should see something similar to the image below. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"   - `list` : Lists all openings.","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"   - `delete 3` : Deletes the 3rd opening shown in the current list.","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"---","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"  e.g. in `add p/POSITION`, `POSITION` is a parameter which can be used as `add p/Software Engineer`.","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Varstak"},"content":"  e.g. `c/COMPANY [d/KEYDATE]` can be used as `c/Google d/Interview@2023-04-01` or as `c/Google`.","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"antonlee59"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"antonlee59"},"content":"  e.g. `[d/KEYDATE]…​` can be used as ` ` (i.e. 0 times), `d/Interview@2023-04-01`, `d/Interview@2023-04-01 d/OA@2023-05-02` etc.","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"  e.g. if the command specifies `p/POSITION c/COMPANY`, `c/COMPANY p/POSITION` is also acceptable.","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken, excluding `status` command.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"  e.g. if you specify `c/Google c/Shopee`, only `c/Shopee` will be taken.","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Varstak"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Varstak"},"content":"### Adding an opening : `add`","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Varstak"},"content":"Having too many internships offers and being unable to keep track of all of them?","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"Varstak"},"content":"Ultron provides you with a platform to remember all your openings so you don\u0027t have to!","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"Varstak"},"content":"Just type \u0027add\u0027 followed by details of your opening in the format below and you can see","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"Varstak"},"content":"it being added to Ultron.","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"Format: `add p/POSITION c/COMPANY e/EMAIL s/STATUS [r/REMARK] [d/KEYDATE]…​`","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"- `KEYDATE` must be in the form `KEY@DATE`, where `KEY` is a key event in the application process and `DATE` is the date of the event in `YYYY-MM-DD` format.","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"- `KEY` must only contain alphabetic characters, cannot be blank and cannot only contain whitespaces.","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"- `STATUS` must be of either **found, applied, interviewing, offered, accepted or rejected** and is case-insensitive.","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"Varstak"},"content":"- If both `COMPANY` and `POSITION` of a new opening matches a current opening, the new opening will not be added.","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"- The openings in the list only display `POSITION`, `COMPANY`, `STATUS` and `KEYDATES`.","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"Varstak"},"content":"- To view the full details of the opening, use `show` command.","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"antonlee59"},"content":"- `add p/Software Engineer c/Google e/chinese@google.com s/interviewing d/Interview@2023-03-14`","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Varstak"},"content":"![Add](images/Add.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"Varstak"},"content":"### Listing all openings : `list`","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Varstak"},"content":"Ultron gives you the option to view all your recorded openings in one window. Just type \u0027list\u0027","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"Varstak"},"content":"and the full list of openings will be displayed starting with the earliest added opening.","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Varstak"},"content":"- The most recently added opening will be displayed last.","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"Varstak"},"content":"![List](images/List.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"Varstak"},"content":"### Editing an opening : `edit`","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Varstak"},"content":"Accidentally typed the wrong company name? Don\u0027t worry, Ultron allows you to edit a previously","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"Varstak"},"content":"added opening without having to delete and start over. Just type in \u0027edit\u0027 followed by the index","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"Varstak"},"content":"number of the desired opening with the field you want to change. Ultron will update the opening with just a single command line.","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"KevinEyo1"},"content":"Format: `edit INDEX [p/POSITION] [c/COMPANY] [e/EMAIL] [s/STATUS] [d/KEYDATE]…​`","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"antonlee59"},"content":"- Edits the opening at the specified `INDEX`. The index refers to the index number shown in the displayed opening list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"antonlee59"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"antonlee59"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"antonlee59"},"content":"- When editing `KEYDATE`, the existing `KEYDATE` of the opening will be removed i.e adding of `KEYDATE` is not cumulative.","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"antonlee59"},"content":"- You can remove all the `KEYDATE` of the opening by typing `d/` without","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"KevinEyo1"},"content":"  specifying any `KEYDATE` after it.","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"antonlee59"},"content":"- `edit 1 c/Goggle e/johndoe@example.com` Edits the company and email address of the 1st opening to be `Goggle` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"antonlee59"},"content":"- `edit 2 c/Shopee d/` Edits the company of the 2nd opening to be `Shopee` and clears all existing `KEYDATE`.","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"Varstak"},"content":"![Edit](images/Edit.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"Varstak"},"content":"### Editing an opening\u0027s remarks : `remark`","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"Varstak"},"content":"Edits the remark field of the opening at the specified INDEX to REMARK.","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"KevinEyo1"},"content":"Format: `remark INDEX r/REMARK`","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"Varstak"},"content":"- Edits the remark of the opening at the specified `INDEX`. The index refers to the index number shown in the displayed opening list.","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"Varstak"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"Varstak"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"Varstak"},"content":"- When editing `REMARK`, the existing `REMARK` of the opening will be removed i.e editing of `REMARK` is not cumulative.","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"Varstak"},"content":"- You can remove all the `REMARK` of the opening by typing `d/` without","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"Varstak"},"content":"  specifying any `REMARK` after it.","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"Varstak"},"content":"![Remark](images/Remark.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"Lanreath"},"content":"### Showing full details of opening: `show`","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"Varstak"},"content":"Displays the full details of the opening at the specified INDEX.","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"Varstak"},"content":"Format: `show INDEX`","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"Varstak"},"content":"- Show details of the opening at the specified `INDEX`.","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"Varstak"},"content":"- The index refers to the index number shown in the displayed opening list.","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"Varstak"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"Lanreath"},"content":"### Listing upcoming dates : `upcoming`","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"KevinEyo1"},"content":"Lists openings which has events today or within the next `DAYS` days, sorting in order of the first keydate of each relevant opening in ascending order.","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"KevinEyo1"},"content":"Format: `upcoming DAYS`","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Lanreath"},"content":"- Lists all openings which has events today or within the next `DAYS` days.","lastModifiedDate":"2023-04-04"},{"lineNumber":170,"author":{"gitId":"Lanreath"},"content":"- `DAYS` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"Lanreath"},"content":"- `upcoming 1` lists all openings with events happening in the next 1 day, ie. today or tomorrow.","lastModifiedDate":"2023-04-04"},{"lineNumber":175,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"Varstak"},"content":"![Upcoming](images/Upcoming.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"KevinEyo1"},"content":"### Filtering openings by company or position: `find`","lastModifiedDate":"2023-03-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"KevinEyo1"},"content":"Finds openings whose COMPANY or POSITION contain any of the given keywords.","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"Varstak"},"content":"- The search is case-insensitive. e.g. `google` will match `Google`","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"antonlee59"},"content":"- The order of the keywords does not matter. e.g. `Goldman Sachs` will match `Sachs Goldman`","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"antonlee59"},"content":"- Only the company and position field is searched.","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"antonlee59"},"content":"- Only full words will be matched e.g. `Amaz` will not match `Amazon`","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"antonlee59"},"content":"- Openings with COMPANY or POSITION matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"KevinEyo1"},"content":"  e.g. `find google amazon software` will return openings of `Google`, `Software Engineer`, `Amazon Web Services`","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"antonlee59"},"content":"Examples:","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"antonlee59"},"content":"- `find Google` returns `google` and `Google Cloud`","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"antonlee59"},"content":"- `find bank america` returns `Bank of America`, `Bank of Singapore`, `Bank Manager`\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"Varstak"},"content":"![Find](images/Find.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"KevinEyo1"},"content":"### Filtering openings by status: `status`","lastModifiedDate":"2023-03-21"},{"lineNumber":199,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":200,"author":{"gitId":"Varstak"},"content":"Finds openings whose STATUS is the given KEYWORD.","lastModifiedDate":"2023-03-31"},{"lineNumber":201,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"KevinEyo1"},"content":"Format: `status KEYWORD`","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":204,"author":{"gitId":"antonlee59"},"content":"- `KEYWORD` **must be of either found, applied, interviewing, offered, accepted or rejected**.","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"Varstak"},"content":"- The search is case-insensitive. e.g. `Applied` will match `applied`","lastModifiedDate":"2023-03-31"},{"lineNumber":206,"author":{"gitId":"antonlee59"},"content":"- Only the status field is searched.","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"Varstak"},"content":"- Partially spelled words will not be matched e.g. `off` will not match `offered`","lastModifiedDate":"2023-03-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"antonlee59"},"content":"- `status Interviewing` returns openings with status Interviewing","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":213,"author":{"gitId":"Varstak"},"content":"![Status](images/Status.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":214,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":215,"author":{"gitId":"Varstak"},"content":"### Deleting an opening : `delete`","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"Varstak"},"content":"Deletes an opening from the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"antonlee59"},"content":"- Deletes the opening at the specified `INDEX`.","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"antonlee59"},"content":"- The index refers to the index number shown in the displayed opening list.","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"antonlee59"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"antonlee59"},"content":"- `list` followed by `delete 2` deletes the 2nd opening in the opening list.","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"Varstak"},"content":"![Delete](images/Delete.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":231,"author":{"gitId":"BagDownB3nny"},"content":"### Deleting all openings : `clear`","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"BagDownB3nny"},"content":"Deletes all openings from the list.","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"Lanreath"},"content":"- This command allows you to delete all openings from the list in a single command","lastModifiedDate":"2023-04-04"},{"lineNumber":238,"author":{"gitId":"Lanreath"},"content":"- Useful when you want to start a fresh new list!","lastModifiedDate":"2023-04-04"},{"lineNumber":239,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"KevinEyo1"},"content":"### Accessing help window : `help`","lastModifiedDate":"2023-03-31"},{"lineNumber":241,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":242,"author":{"gitId":"KevinEyo1"},"content":"Displays the help window.","lastModifiedDate":"2023-03-31"},{"lineNumber":243,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":244,"author":{"gitId":"KevinEyo1"},"content":"Format: `help`","lastModifiedDate":"2023-03-31"},{"lineNumber":245,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"Varstak"},"content":"Ultron data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"Varstak"},"content":"**Q**: Why does the remarks not show up after editing?","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"Varstak"},"content":"**A**: Remarks will only be displayed when `show` command is used.","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"Lanreath"},"content":"**Q**: How do I transfer my data to another Computer?","lastModifiedDate":"2023-03-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"Lanreath"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the JSON file \u0027data/ultron.json\u0027.","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"antonlee59"},"content":"---","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"antonlee59"},"content":"| Action       | Format, Examples                                                                                                                                                              |","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"KevinEyo1"},"content":"|--------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"KevinEyo1"},"content":"| **Add**      | `add p/POSITION c/COMPANY e/EMAIL s/STATUS [r/REMARK] [d/KEYDATE]…​` \u003cbr\u003e e.g., `add p/Software Engineer c/Google e/chinese@google.com s/interviewing d/Interview@2023-03-14` |","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"antonlee59"},"content":"| **Edit**     | `edit INDEX [p/POSITION] [c/COMPANY] [e/EMAIL] [s/STATUS] [d/KEYDATE]…​` \u003cbr\u003e e.g., `edit 1 c/Goggle e/johndoe@example.com`                                                   |","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"antonlee59"},"content":"| **Delete**   | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                           |","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"KevinEyo1"},"content":"| **Status**   | `status STATUS`\u003cbr\u003e e.g., `status interviewing`                                                                                                                               |","lastModifiedDate":"2023-03-31"},{"lineNumber":276,"author":{"gitId":"antonlee59"},"content":"| **List**     | `list`                                                                                                                                                                        |","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"Varstak"},"content":"| **Clear**    | `clear`                                                                                                                                                                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"Varstak"},"content":"| **Upcoming** | `upcoming DAYS`\u003cbr/\u003e e.g., `upcoming 1`                                                                                                                                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"Varstak"},"content":"| **Show**     | `show INDEX`\u003cbr/\u003e e.g., `show 1`                                                                                                                                              |","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"KevinEyo1"},"content":"| **Remark**   | `remark INDEX r/REMARK`\u003cbr/\u003e e.g., `remark 1 r/1 round of interview`                                                                                                          |","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"KevinEyo1"},"content":"| **Find**     | `find KEYWORD [MORE_KEYWORDS]...`\u003cbr/\u003e e.g., `find Engineer data Software`                                                                                                    |","lastModifiedDate":"2023-03-31"},{"lineNumber":282,"author":{"gitId":"KevinEyo1"},"content":"| **Help**     | `help`                                                                                                                                                                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":283,"author":{"gitId":"KevinEyo1"},"content":"| **Exit**     | `exit`                                                                                                                                                                        |","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Varstak":71,"BagDownB3nny":5,"antonlee59":39,"KevinEyo1":35,"-":97,"Lanreath":36}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"KevinEyo1"},"content":"    content: \"Ultron\";","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"KevinEyo1":1,"-":294}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"Ultron *-right-\u003e \"1\" UniqueOpeningList","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"Ultron *-right-\u003e \"1\" UniqueDateList","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"UniqueDateList -[hidden]down- UniqueOpeningList","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"UniqueDateList -[hidden]down- UniqueOpeningList","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"UniqueDateList -right-\u003e \"*\" Date","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"UniqueOpeningList -right-\u003e Opening","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"Opening -up-\u003e \"*\" Date","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Position","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Company","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Email","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Status","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e \"0..1\"Remark","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":10,"Lanreath":12}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"if () then ([command commits Ultron])","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    :Save Ultron to","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    ultronStateList;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"Lanreath":3}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"Class UltronParser","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"LogicManager -right-\u003e\"1\" UltronParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"UltronParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"Lanreath":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUltron\" as ReadOnlyUltron","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"Class Ultron","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"Class UniqueOpeningList","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"Class Opening","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"Class Position","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"Class Company","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"Class Status","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"Class Remark","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"Class Date","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"Ultron .up.|\u003e ReadOnlyUltron","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"Model .left.\u003e ReadOnlyUltron","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"ModelManager -left-\u003e \"1\" Ultron","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"Ultron *--\u003e \"1\" UniqueOpeningList","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"UniqueOpeningList --\u003e \"~* all\" Opening","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Position","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Company","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Email","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e Status","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e \"0..1\"Remark","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"Opening *--\u003e \"*\" Date","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"ModelManager --\u003e\"~* filtered\" Opening","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":27,"Lanreath":21}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"Class UltronParser","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"HiddenOutside ..\u003e UltronParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"UltronParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"UltronParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"Lanreath":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"package \"Ultron Storage\" #F4F6F6{","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUltronStorage\" as UltronStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"Class JsonUltronStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"Class JsonSerializableUltron","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"Class JsonAdaptedUltron","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"Class JsonAdaptedDate","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"StorageManager -up-\u003e \"1\" UltronStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"Storage -right-|\u003e UltronStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"JsonUltronStorage .up.|\u003e UltronStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"JsonUltronStorage ..\u003e JsonSerializableUltron","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"JsonSerializableUltron --\u003e \"*\" JsonAdaptedOpening","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"JsonAdaptedOpening --\u003e \"*\" JsonAdaptedDate","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"BagDownB3nny":1,"-":31,"Lanreath":11}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"Class OpeningListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"Class OpeningCard","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"MainWindow *-down-\u003e \"1\" OpeningListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"OpeningListPanel -down-\u003e \"*\" OpeningCard","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"OpeningListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"OpeningCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"OpeningCard ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"OpeningListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"Lanreath":8}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    class State1 as \"__ab0:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    class State2 as \"__ab1:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    class State3 as \"__ab2:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"Lanreath":4}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    class State1 as \"__ab0:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    class State2 as \"__ab1:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    class State3 as \"__ab2:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"Lanreath":4}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    class State1 as \"__ab0:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    class State2 as \"__ab1:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    class State3 as \"__ab2:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"Lanreath":4}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    class State1 as \"__ab0:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    class State2 as \"__ab1:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    class State3 as \"__ab2:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"Lanreath":4}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    class State1 as \"__ab0:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    class State2 as \"__ab1:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    class State3 as \"__ab2:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"Lanreath":4}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    class State1 as \"__ab0:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    class State2 as \"__ab1:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    class State3 as \"__ab3:Ultron__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"Lanreath":4}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"participant \":UltronParser\" as UltronParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"participant \":VersionedUltron\" as VersionedUltron MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"LogicManager -\u003e UltronParser : parseCommand(undo)","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"activate UltronParser","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"UltronParser -\u003e UndoCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"UndoCommand --\u003e UltronParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"UltronParser --\u003e LogicManager : u","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"deactivate UltronParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"UndoCommand -\u003e Model : undoUltron()","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"Model -\u003e VersionedUltron : undo()","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"activate VersionedUltron","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"VersionedUltron -\u003e VersionedUltron :resetData(ReadOnlyUltron)","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"VersionedUltron --\u003e Model :","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"deactivate VersionedUltron","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"Lanreath":14}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"**AddressBook is a desktop application for managing your email details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BagDownB3nny":1,"-":17}},{"path":"docs/team/antonlee59.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"title: antonlee59\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"Ultron is a system which helps students keep track of their internship applications by helping them","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"sort their internships and check the status of each application.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"antonlee59":31}},{"path":"docs/team/bagdownb3nny.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"---","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"layout: page","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"title: BagDownB3nny\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"---","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"Ultron is an application to help students track their internship applications as openings.","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"* **User Guide Contributions**:","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"* **Developer Guide Contributions**:","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"* **Maintaining issue tracker**:","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"* **Review Contributions**:","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"* **Tools**:","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    * To be added soon","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"BagDownB3nny":29}},{"path":"docs/team/kevineyo1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"title: KevinEyo1\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"Ultron is an application to help students track their internship applications as openings.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"* **User Guide Contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"* **Developer Guide Contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"* **Maintaining issue tracker**:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"* **Review Contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"KevinEyo1":29}},{"path":"docs/team/lanreath.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"title: Lanreath\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"* **Testing**:","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"  * To be added soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Lanreath":22}},{"path":"docs/team/varstak.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"title: Varstak\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"### Project: Ultron","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"Ultron is a system which helps students keep track of their internship applications by helping them","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"sort their internships and check the status of each application.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Varstak":32}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"This command allows users of the Ultron application to add optional remarks to people in their application and edit it if required. The command should have the following format:","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/ultron/logic/command` directory.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":" * Changes the remark of an existing opening in the application.","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `UltronParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"            + \": Edits the remark of the opening identified \"","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"            + \"by the index number used in the last opening listing. \"","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"     * @param index of the opening in the filtered opening list to edit the remark","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"     * @param remark of the opening to be updated to","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"Lanreath"},"content":"Create a `RemarkCommandParser` class in the `seedu.ultron.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"Lanreath"},"content":":information_source: Don’t forget to update `UltronParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"Lanreath"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of opening data. We achieve that by working with the `Opening` model. Each field in a Opening is implemented as a separate class (e.g. a `Name` object represents the opening’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a opening.","lastModifiedDate":"2023-04-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"Lanreath"},"content":"Create a new `Remark` in `seedu.ultron.model.opening`. Since a `Remark` is a field that is similar to `Company`, we can reuse a significant bit of code.","lastModifiedDate":"2023-04-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"Lanreath"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/ultronbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2023-04-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"Lanreath"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each opening.","lastModifiedDate":"2023-04-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"Lanreath"},"content":"Simply add the following to [`seedu.ultron.ui.OpeningCard`](https://github.com/se-edu/ultronbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-04-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"Lanreath"},"content":"**`OpeningCard.java`:**","lastModifiedDate":"2023-04-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"Lanreath"},"content":"Then insert the following into [`main/resources/view/OpeningListCard.fxml`](https://github.com/se-edu/ultronbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-04-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"Lanreath"},"content":"**`OpeningListCard.fxml`:**","lastModifiedDate":"2023-04-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"Lanreath"},"content":"## Modify `Opening` to support a `Remark` field","lastModifiedDate":"2023-04-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"Lanreath"},"content":"Since `OpeningCard` displays data from a `Opening`, we need to update `Opening` to get our `Remark` displayed!","lastModifiedDate":"2023-04-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"Lanreath"},"content":"### Modify `Opening`","lastModifiedDate":"2023-04-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"Lanreath"},"content":"We change the constructor of `Opening` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-04-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"Lanreath"},"content":"### Update other usages of `Opening`","lastModifiedDate":"2023-04-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"Lanreath"},"content":"Unfortunately, a change to `Opening` will cause other commands to break, you will have to modify these commands to use the updated `Opening`!","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"Lanreath"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Opening` class to find these commands.","lastModifiedDate":"2023-04-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"Lanreath"},"content":"Refer to [this commit](https://github.com/se-edu/ultronbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2023-04-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"Lanreath"},"content":"Ultron stores data by serializing `JsonAdaptedOpening` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedOpening` to work with our new `Opening`!","lastModifiedDate":"2023-04-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"Lanreath"},"content":":exclamation: You must delete Ultron’s storage file located at `/data/ultronbook.json` before running it! Not doing so will cause Ultron to default to an empty ultron book!","lastModifiedDate":"2023-04-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"Lanreath"},"content":"Check out [this commit](https://github.com/se-edu/ultronbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2023-04-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"Lanreath"},"content":"Now that we have finalized the `Opening` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-04-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"Lanreath"},"content":"Just add [this one line of code!](https://github.com/se-edu/ultronbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2023-04-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"Lanreath"},"content":"**`OpeningCard.java`:**","lastModifiedDate":"2023-04-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"Lanreath"},"content":"public OpeningCard(Opening opening, int displayedIndex) {","lastModifiedDate":"2023-04-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"Lanreath"},"content":"    remark.setText(opening.getRemark().value);","lastModifiedDate":"2023-04-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"Lanreath"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Opening`. Since all fields in a `Opening` are immutable, we create a new instance of a `Opening` with the values that we want and","lastModifiedDate":"2023-04-05"},{"lineNumber":319,"author":{"gitId":"Lanreath"},"content":"save it with `Model#setOpening()`.","lastModifiedDate":"2023-04-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Opening: %1$s\";","lastModifiedDate":"2023-04-05"},{"lineNumber":326,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Opening: %1$s\";","lastModifiedDate":"2023-04-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"Lanreath"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-04-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"Lanreath"},"content":"        Opening openingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-04-05"},{"lineNumber":337,"author":{"gitId":"Lanreath"},"content":"        Opening editedOpening \u003d new Opening(","lastModifiedDate":"2023-04-05"},{"lineNumber":338,"author":{"gitId":"Lanreath"},"content":"                openingToEdit.getName(), openingToEdit.getPhone(), openingToEdit.getEmail(),","lastModifiedDate":"2023-04-05"},{"lineNumber":339,"author":{"gitId":"Lanreath"},"content":"                openingToEdit.getAddress(), remark, openingToEdit.getTags());","lastModifiedDate":"2023-04-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"Lanreath"},"content":"        model.setOpening(openingToEdit, editedOpening);","lastModifiedDate":"2023-04-05"},{"lineNumber":342,"author":{"gitId":"Lanreath"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-04-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(generateSuccessMessage(editedOpening));","lastModifiedDate":"2023-04-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"Lanreath"},"content":"     * {@code openingToEdit}.","lastModifiedDate":"2023-04-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"Lanreath"},"content":"    private String generateSuccessMessage(Opening openingToEdit) {","lastModifiedDate":"2023-04-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"Lanreath"},"content":"        return String.format(message, openingToEdit);","lastModifiedDate":"2023-04-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"Lanreath"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/ultronbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2023-04-05"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":368,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"Lanreath"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/ultronbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2023-04-05"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"Lanreath"},"content":"This concludes the tutorial for adding a new `Command` to Ultron.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"-":336,"Lanreath":55}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Opening` class.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"The `address` field in `Opening` is actually an instance of the `seedu.address.model.opening.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditOpeningDescriptor` may require more careful inspection.","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"Let’s try removing references to `Address` in `EditOpeningDescriptor`.","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"1. Safe delete the field `address` in `EditOpeningDescriptor`.","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Opening` class will require you to modify its constructor.","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `OpeningCard` that has not been removed nor identified.","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"A quick look at the `OpeningCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"**`OpeningCard.java`**","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"**`OpeningCard.fxml`**","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"**`invalidOpeningAddressBook.json`:**","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"  \"openings\": [ {","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    \"name\": \"Opening with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":99,"Lanreath":14}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"        Command command \u003d ultronParser.parseCommand(commandText);","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"            storage.saveUltron(model.getUltron());","lastModifiedDate":"2023-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Lanreath"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `UltronParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"Lanreath"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditOpeningDescriptor`. Recall that we can verify the contents of `editOpeningDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Lanreath"},"content":"       Opening openingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-04-05"},{"lineNumber":195,"author":{"gitId":"Lanreath"},"content":"       Opening editedOpening \u003d createEditedOpening(openingToEdit, editOpeningDescriptor);","lastModifiedDate":"2023-04-05"},{"lineNumber":196,"author":{"gitId":"Lanreath"},"content":"       if (!openingToEdit.isSameOpening(editedOpening) \u0026\u0026 model.hasOpening(editedOpening)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Lanreath"},"content":"       model.setOpening(openingToEdit, editedOpening);","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"Lanreath"},"content":"       model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"Lanreath"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedOpening));","lastModifiedDate":"2023-04-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"Lanreath"},"content":"   * it uses the `setOpening()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the opening data.","lastModifiedDate":"2023-04-05"},{"lineNumber":207,"author":{"gitId":"Lanreath"},"content":"   * it uses the `updateFilteredOpeningList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ openings.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"Lanreath"},"content":"     FYI, The \u0027filtered list\u0027 is the list of openings resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the openings so that the user can see the edited opening along with all other openings. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":209,"author":{"gitId":"Lanreath"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of openings is being tracked.","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"Lanreath"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveUltron(model.getUltron())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-04-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"Lanreath"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonUltron#saveUltron()` method which calls the `JsonSerializableUltron` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2023-04-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"Lanreath"},"content":"    **`JsonSerializableUltron` constructor:**","lastModifiedDate":"2023-04-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"Lanreath"},"content":"     * Converts a given {@code ReadOnlyUltron} into this class for Jackson use.","lastModifiedDate":"2023-04-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"Lanreath"},"content":"     * {@code JsonSerializableUltron}.","lastModifiedDate":"2023-04-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"Lanreath"},"content":"    public JsonSerializableUltron(ReadOnlyUltron source) {","lastModifiedDate":"2023-04-05"},{"lineNumber":236,"author":{"gitId":"Lanreath"},"content":"        openings.addAll(","lastModifiedDate":"2023-04-05"},{"lineNumber":237,"author":{"gitId":"Lanreath"},"content":"            source.getOpeningList()","lastModifiedDate":"2023-04-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"Lanreath"},"content":"                  .map(JsonAdaptedOpening::new)","lastModifiedDate":"2023-04-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"Lanreath"},"content":"1. It appears that a `JsonAdaptedOpening` is created for each `Opening` and then added to the `JsonSerializableUltron`.","lastModifiedDate":"2023-04-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"Lanreath"},"content":"    5.  Add a new field to `Opening`","lastModifiedDate":"2023-04-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":276,"Lanreath":27}},{"path":"src/main/java/seedu/ultron/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.FileUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Config;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Version;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.Logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.LogicManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.storage.JsonUltronStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.storage.Storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.storage.StorageManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.storage.UltronStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.ui.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.ui.UiManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Ultron ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"        UltronStorage ultronStorage \u003d new JsonUltronStorage(userPrefs.getUltronFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"        storage \u003d new StorageManager(ultronStorage, userPrefsStorage);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"antonlee59"},"content":"     * Returns a {@code ModelManagerNew} with the data from {@code storage}\u0027s  ultron and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"     * The data from the sample ultron will be used instead if {@code storage}\u0027s ultron is not found,","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"antonlee59"},"content":"     * or an empty ultron will be used instead if errors occur when reading {@code storage}\u0027s ultron.","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"antonlee59"},"content":"        Optional\u003cReadOnlyUltron\u003e ultronOptional;","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"        ReadOnlyUltron initialData;","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"            ultronOptional \u003d storage.readUltron();","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"antonlee59"},"content":"            if (!ultronOptional.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"antonlee59"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"            initialData \u003d ultronOptional.orElseGet(SampleDataUtil::getSampleUltron);","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"            //initialData \u003d SampleDataUtilNew.getSampleUltron();","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d new Ultron();","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"            initialData \u003d new Ultron();","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"antonlee59"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Ultron\");","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"Starting Ultron \" + MainApp.VERSION);","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"antonlee59"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Ultron ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BagDownB3nny":2,"antonlee59":17,"-":139,"Lanreath":26}},{"path":"src/main/java/seedu/ultron/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.core;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.core;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.core;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.core;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_INVALID_OPENING_DISPLAYED_INDEX \u003d \"The opening index provided is invalid\";","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_OPENING_LISTED_OVERVIEW \u003d \"%1$d openings with given keywords found!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BagDownB3nny":2,"-":10,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.core;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.core.index;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.MainApp;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Config;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"    public static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    public static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BagDownB3nny":2,"-":138,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.commons.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":" * API of the Logic component","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"public interface Logic {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"     * Returns Ultron.","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"     * @see seedu.ultron.model.Model#getUltron()","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"    ReadOnlyUltron getUltron();","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    /** Returns an unmodifiable view of the filtered list of openings */","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"    ObservableList\u003cOpening\u003e getFilteredOpeningList();","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    /** Returns the currently selected Opening */","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    Opening getSelectedOpening();","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    /** Sets the currently selected Opening */","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    void setSelectedOpening(Index index);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"     * Returns the user prefs\u0027 ultron file path.","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"antonlee59"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":40,"Lanreath":17}},{"path":"src/main/java/seedu/ultron/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.Command;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.UltronParser;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.storage.Storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    private final UltronParser ultronParser;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"        ultronParser \u003d new UltronParser();","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        Command command \u003d ultronParser.parseCommand(commandText);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"            storage.saveUltron(model.getUltron());","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"    public ReadOnlyUltron getUltron() {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"        return model.getUltron();","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"antonlee59"},"content":"    public ObservableList\u003cOpening\u003e getFilteredOpeningList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"antonlee59"},"content":"        return model.getFilteredOpeningList();","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    public Opening getSelectedOpening() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"        return model.getSelectedOpening();","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"    public void setSelectedOpening(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"        model.setSelectedIndex(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"antonlee59"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"antonlee59"},"content":"        return model.getUltronFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"antonlee59":10,"-":59,"Lanreath":23}},{"path":"src/main/java/seedu/ultron/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * Adds a opening to the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a opening to Ultron. \"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            + \"[\" + PREFIX_KEYDATE + \"KEYDATE]...\\n\"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_POSITION + \"Backend Developer \"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_COMPANY + \"Shopee \"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"            + PREFIX_EMAIL + \"hr@shopee.com \"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"            + PREFIX_STATUS + \"applied \"","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"            + PREFIX_REMARK + \"3 rounds of interviews \"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"            + PREFIX_KEYDATE + \"Online Assessment@2023-10-10\";","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New opening added: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_DUPLICATE_OPENING \u003d \"This opening already exists in Ultron\";","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    private final Opening toAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     * Creates an AddCommand to add the specified {@code Opening}","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    public AddCommand(Opening opening) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        toAdd \u003d opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"        if (model.hasOpening(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        model.addOpening(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":2,"KevinEyo1":2,"Lanreath":65}},{"path":"src/main/java/seedu/ultron/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.model.Model.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":" * Clears the openings list.","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Openings list has been cleared!\";","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"        model.setUltron(new Ultron());","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"        model.setSelectedIndex(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BagDownB3nny":18,"Lanreath":8}},{"path":"src/main/java/seedu/ultron/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":70,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.model.Model.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"            + \": Deletes the opening identified by the index number used in the displayed opening list.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_DELETE_OPENING_SUCCESS \u003d \"Deleted Opening: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"        Opening openingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        model.deleteOpening(openingToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"        if (model.hasSelectedIndex() \u0026\u0026 model.getSelectedIndex().equals(targetIndex)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"            model.setSelectedIndex(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_OPENING_SUCCESS, openingToDelete));","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BagDownB3nny":5,"KevinEyo1":1,"-":40,"Lanreath":12}},{"path":"src/main/java/seedu/ultron/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.model.Model.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":" * Edits the details of an existing opening in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the opening identified \"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"            + \"by the index number used in the displayed opening list. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"            + \"[\" + PREFIX_KEYDATE + \"KEYDATE]...\\n\"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"            + PREFIX_COMPANY + \"Microsoft \"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_EDIT_OPENING_SUCCESS \u003d \"Edited Opening: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_DUPLICATE_OPENING \u003d \"This opening already exists in the address book.\";","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"    private final Index index;","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"    private final EditOpeningDescriptor editOpeningDescriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"     * @param index of the opening in the filtered opening list to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"     * @param editOpeningDescriptor details to edit the opening with","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    public EditCommand(Index index, EditOpeningDescriptor editOpeningDescriptor) {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"        this.editOpeningDescriptor \u003d new EditOpeningDescriptor(editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"        Opening openingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"        Opening editedOpening \u003d createEditedOpening(openingToEdit, editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"        if (!openingToEdit.isSameOpening(editedOpening) \u0026\u0026 model.hasOpening(editedOpening)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"        model.setOpening(openingToEdit, editedOpening);","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_OPENING_SUCCESS, editedOpening));","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"     * Creates and returns a {@code Opening} with the details of {@code openingToEdit}","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"     * edited with {@code editOpeningDescriptor}.","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"    private static Opening createEditedOpening(Opening openingToEdit, EditOpeningDescriptor editOpeningDescriptor) {","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"        assert openingToEdit !\u003d null;","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"        Position updatedPosition \u003d editOpeningDescriptor.getPosition().orElse(openingToEdit.getPosition());","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"        Company updatedCompany \u003d editOpeningDescriptor.getCompany().orElse(openingToEdit.getCompany());","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"        Email updatedEmail \u003d editOpeningDescriptor.getEmail().orElse(openingToEdit.getEmail());","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"        Status updatedStatus \u003d editOpeningDescriptor.getStatus().orElse(openingToEdit.getStatus());","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"        Remark updatedRemark \u003d editOpeningDescriptor.getRemark().orElse(openingToEdit.getRemark());","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cKeydate\u003e updatedKeydates \u003d editOpeningDescriptor.getKeydates().orElse(openingToEdit.getKeydates());","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"        return new Opening(updatedPosition, updatedCompany, updatedEmail,","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"                updatedStatus, updatedRemark, updatedKeydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"KevinEyo1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"KevinEyo1"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"KevinEyo1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"KevinEyo1"},"content":"            return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"KevinEyo1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"KevinEyo1"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"KevinEyo1"},"content":"            return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"KevinEyo1"},"content":"        // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"KevinEyo1"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 editOpeningDescriptor.equals(e.editOpeningDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"KevinEyo1"},"content":"     * Stores the details to edit the opening with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"KevinEyo1"},"content":"     * corresponding field value of the opening.","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"KevinEyo1"},"content":"    public static class EditOpeningDescriptor {","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"KevinEyo1"},"content":"        private Position position;","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"KevinEyo1"},"content":"        private Company company;","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"KevinEyo1"},"content":"        private Email email;","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"KevinEyo1"},"content":"        private Status status;","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"KevinEyo1"},"content":"        private Remark remark;","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"KevinEyo1"},"content":"        private List\u003cKeydate\u003e keydates;","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"KevinEyo1"},"content":"        public EditOpeningDescriptor() {}","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"KevinEyo1"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"KevinEyo1"},"content":"         * A defensive copy of {@code keydates} is used internally.","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"KevinEyo1"},"content":"        public EditOpeningDescriptor(EditOpeningDescriptor toCopy) {","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"KevinEyo1"},"content":"            setPosition(toCopy.position);","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"KevinEyo1"},"content":"            setCompany(toCopy.company);","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"KevinEyo1"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"KevinEyo1"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"KevinEyo1"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"KevinEyo1"},"content":"            setKeydates(toCopy.keydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"KevinEyo1"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"KevinEyo1"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"KevinEyo1"},"content":"            return CollectionUtil.isAnyNonNull(position, company, email, status, keydates);","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"KevinEyo1"},"content":"        public void setPosition(Position position) {","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"KevinEyo1"},"content":"            this.position \u003d position;","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(position);","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"KevinEyo1"},"content":"        public void setCompany(Company company) {","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"KevinEyo1"},"content":"            this.company \u003d company;","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"KevinEyo1"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"KevinEyo1"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"KevinEyo1"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"KevinEyo1"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"KevinEyo1"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"KevinEyo1"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-03-10"},{"lineNumber":199,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":200,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":201,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":202,"author":{"gitId":"KevinEyo1"},"content":"         * Sets {@code keydates} to this object\u0027s {@code keydates}.","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"KevinEyo1"},"content":"         * A defensive copy of {@code keydates} is used internally.","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":205,"author":{"gitId":"KevinEyo1"},"content":"        public void setKeydates(List\u003cKeydate\u003e keydates) {","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"Lanreath"},"content":"            this.keydates \u003d (keydates !\u003d null) ? new ArrayList\u003c\u003e(keydates) : null;","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":208,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"KevinEyo1"},"content":"        /**","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"KevinEyo1"},"content":"         * Returns an unmodifiable date set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"KevinEyo1"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"KevinEyo1"},"content":"         * Returns {@code Optional#empty()} if {@code keydates} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"KevinEyo1"},"content":"         */","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"KevinEyo1"},"content":"        public Optional\u003cList\u003cKeydate\u003e\u003e getKeydates() {","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"Lanreath"},"content":"            return (keydates !\u003d null) ? Optional.of(Collections.unmodifiableList(keydates)) : Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"KevinEyo1"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"KevinEyo1"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"KevinEyo1"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"KevinEyo1"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"KevinEyo1"},"content":"                return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"KevinEyo1"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"KevinEyo1"},"content":"            if (!(other instanceof EditOpeningDescriptor)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":227,"author":{"gitId":"KevinEyo1"},"content":"                return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":230,"author":{"gitId":"KevinEyo1"},"content":"            // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":231,"author":{"gitId":"KevinEyo1"},"content":"            EditOpeningDescriptor e \u003d (EditOpeningDescriptor) other;","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"KevinEyo1"},"content":"            return getPosition().equals(e.getPosition())","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getCompany().equals(e.getCompany())","lastModifiedDate":"2023-03-10"},{"lineNumber":235,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2023-03-10"},{"lineNumber":237,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"KevinEyo1"},"content":"                    \u0026\u0026 getKeydates().equals(e.getKeydates());","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":240,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":241,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"KevinEyo1":214,"Lanreath":27}},{"path":"src/main/java/seedu/ultron/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Ultron as requested ...\";","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":16,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Finds and lists all openings in Ultron whose company or position contains any of the argument keywords.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all openings whose company or position contain \"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"            + \"any of the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"            + \"Example: \" + COMMAND_WORD + \" engineer analyst google\";","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"%1$d openings with given keywords found!\";","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"    private final CompanyOrPositionContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    public FindCommand(CompanyOrPositionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"        model.updateFilteredOpeningList(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"                String.format(MESSAGE_SUCCESS, model.getFilteredOpeningList().size()));","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"antonlee59":26,"KevinEyo1":8,"Lanreath":10}},{"path":"src/main/java/seedu/ultron/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.model.Model.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":" * Lists all openings Ultron to the user.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all openings.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Varstak":17,"KevinEyo1":1,"Lanreath":6}},{"path":"src/main/java/seedu/ultron/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.model.Model.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * Changes the remark of an existing opening in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            + \": Edits the remark of the opening identified \"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            + \"by the index number used in the last opening listing. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"            + \"r/REMARK\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            + \"r/Likes to swim.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Opening: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Opening: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    private final Index index;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"     * @param index of the opening in the filtered opening list to edit the remark","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"     * @param remark of the opening to be updated to","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        Opening openingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        Opening editedOpening \u003d new Opening(","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"                openingToEdit.getPosition(), openingToEdit.getCompany(), openingToEdit.getEmail(),","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"                openingToEdit.getStatus(), remark, openingToEdit.getKeydates());","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        model.setOpening(openingToEdit, editedOpening);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        model.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(generateSuccessMessage(editedOpening));","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     * {@code openingToEdit}.   ","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"    private String generateSuccessMessage(Opening openingToEdit) {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"        return String.format(message, openingToEdit);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"        // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"KevinEyo1":2,"Lanreath":94}},{"path":"src/main/java/seedu/ultron/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" * Shows a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"            + \": Shows details of the opening identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_SHOW_OPENING_SUCCESS \u003d \"Showing Opening on right panel: %1$s\";","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    public ShowCommand(Index targetIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        List\u003cOpening\u003e lastShownList \u003d model.getFilteredOpeningList();","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        Opening openingToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"        model.setSelectedIndex(targetIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        return new CommandResult(String.format(MESSAGE_SHOW_OPENING_SUCCESS, openingToShow));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof ShowCommand // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 targetIndex.equals(((ShowCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"KevinEyo1":1,"Lanreath":52}},{"path":"src/main/java/seedu/ultron/logic/commands/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.ContainsStatusPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Finds and lists all openings in Ultron whose status is the keyword.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all openings whose status is \"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"            + \"the specified keyword (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"            + \"Example: \" + COMMAND_WORD + \" applied\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"%1$d openings found based on provided status!\";","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    private final ContainsStatusPredicate predicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    public StatusCommand(ContainsStatusPredicate predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        model.updateFilteredOpeningList(predicate);","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"                String.format(MESSAGE_SUCCESS, model.getFilteredOpeningList().size()));","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"                || (other instanceof StatusCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 predicate.equals(((StatusCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"KevinEyo1":44}},{"path":"src/main/java/seedu/ultron/logic/commands/UpcomingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package seedu.ultron.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.KeydateSort;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.model.opening.OpeningsBeforeDaysPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"public class UpcomingCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"    public static final String COMMAND_WORD \u003d \"upcoming\";","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"            + \": Opens a window which displays upcoming events for the next DAYS days\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"            + \"Parameters: DAYS (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"%1$d openings are upcoming!\";","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    private final OpeningsBeforeDaysPredicate predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    public UpcomingCommand(OpeningsBeforeDaysPredicate predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"        model.updateFilteredOpeningList(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"        model.sortFilteredOpeningList(new KeydateSort(\"asc\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"                String.format(MESSAGE_SUCCESS, model.getFilteredOpeningList().size()));","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"                || (other instanceof UpcomingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"                \u0026\u0026 predicate.equals(((UpcomingCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Varstak":37,"KevinEyo1":3,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.commands.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POSITION, PREFIX_COMPANY, PREFIX_EMAIL,","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"                        PREFIX_STATUS, PREFIX_REMARK, PREFIX_KEYDATE);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"        if (arePrefixesAbsent(argMultimap, PREFIX_POSITION, PREFIX_COMPANY, PREFIX_EMAIL, PREFIX_STATUS)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"        if (!isCompanyPresent(argMultimap, PREFIX_COMPANY)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Company is missing\\nExample: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"                    + PREFIX_COMPANY + \"Shopee \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"        if (!isPositionPresent(argMultimap, PREFIX_POSITION)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Position is missing\\nExample: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"                    + PREFIX_POSITION + \"Backend Developer \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"        if (!isStatusPresent(argMultimap, PREFIX_STATUS)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Status is missing\\nExample: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"                    + PREFIX_STATUS + \"APPLIED \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"        if (!isEmailPresent(argMultimap, PREFIX_EMAIL)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Email is missing\\nExample: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"                    + PREFIX_EMAIL + \"hr@shopee.com \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"        Optional\u003cRemark\u003e remark \u003d argMultimap.getValue(PREFIX_REMARK).map(ParserUtil::parseRemark);","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cKeydate\u003e keydateList \u003d ParserUtil.parseKeydates(argMultimap.getAllValues(PREFIX_KEYDATE));","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"        Opening opening \u003d new Opening(position, company, email, status, remark.orElse(null), keydateList);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"        return new AddCommand(opening);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"antonlee59"},"content":"    private static boolean arePrefixesAbsent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"antonlee59"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e !argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"antonlee59"},"content":"    private static boolean isPositionPresent(ArgumentMultimap argumentMultimap, Prefix prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"antonlee59"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"    private static boolean isCompanyPresent(ArgumentMultimap argumentMultimap, Prefix prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"antonlee59"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"antonlee59"},"content":"    private static boolean isEmailPresent(ArgumentMultimap argumentMultimap, Prefix prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"antonlee59"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"antonlee59"},"content":"    private static boolean isStatusPresent(ArgumentMultimap argumentMultimap, Prefix prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"antonlee59"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"antonlee59":28,"KevinEyo1":11,"Lanreath":62}},{"path":"src/main/java/seedu/ultron/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"public class CliSyntax {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"    /* Prefix definitions */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    public static final Prefix PREFIX_KEYDATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"KevinEyo1":2,"Lanreath":13}},{"path":"src/main/java/seedu/ultron/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":24,"Lanreath":5}},{"path":"src/main/java/seedu/ultron/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.EditCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.EditCommand.EditOpeningDescriptor;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POSITION, PREFIX_COMPANY,","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"                        PREFIX_EMAIL, PREFIX_STATUS, PREFIX_KEYDATE);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        EditOpeningDescriptor editOpeningDescriptor \u003d new EditOpeningDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"            editOpeningDescriptor.setPosition(ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get()));","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"            editOpeningDescriptor.setCompany(ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"            editOpeningDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"            editOpeningDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"        parseKeydatesForEdit(argMultimap.getAllValues(PREFIX_KEYDATE)).ifPresent(editOpeningDescriptor::setKeydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"        if (!editOpeningDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        return new EditCommand(index, editOpeningDescriptor);","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"    private Optional\u003cList\u003cKeydate\u003e\u003e parseKeydatesForEdit(Collection\u003cString\u003e keydates) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"        assert keydates !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"        if (keydates.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"        Collection\u003cString\u003e keydateList \u003d keydates.size() \u003d\u003d 1","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 keydates.contains(\"\") ? Collections.emptyList() : keydates;","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"        return Optional.of(ParserUtil.parseKeydates(keydateList));","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"KevinEyo1":63,"Lanreath":22}},{"path":"src/main/java/seedu/ultron/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.FindCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        return new FindCommand(new CompanyOrPositionContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":27,"Lanreath":6}},{"path":"src/main/java/seedu/ultron/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.Command;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"public class ParserUtil {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"     * trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String position} into a {@code Position}.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(position);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        if (!Position.isValidPosition(trimmedPosition)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String company} into a {@code Company}.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"     * Parses a {@code String keydate} into an {@code Keydate}.","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"KevinEyo1"},"content":"    public static Keydate parseKeydate(String keydate) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(keydate);","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"KevinEyo1"},"content":"        String trimmedKeydate \u003d keydate.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"KevinEyo1"},"content":"        String[] keydateArray \u003d trimmedKeydate.split(\"@\");","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"        if (!Keydate.isValidKeydate(keydateArray)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(Keydate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"KevinEyo1"},"content":"        return new Keydate(keydateArray[0], keydateArray[1]);","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"KevinEyo1"},"content":"     * Parses {@code Collection\u003cString\u003e keydates} into a {@code Set\u003cKeydate\u003e}.","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"KevinEyo1"},"content":"    public static List\u003cKeydate\u003e parseKeydates(Collection\u003cString\u003e keydates) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"KevinEyo1"},"content":"        requireNonNull(keydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"KevinEyo1"},"content":"        final List\u003cKeydate\u003e keydateSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"KevinEyo1"},"content":"        for (String keydate : keydates) {","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"KevinEyo1"},"content":"            keydateSet.add(parseKeydate(keydate));","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"KevinEyo1"},"content":"        return keydateSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"Varstak"},"content":"    public static int parseDays(String days) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"Varstak"},"content":"        requireNonNull(days);","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"Varstak"},"content":"        String trimmedDays \u003d days.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"Varstak"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedDays)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"Varstak"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"Varstak"},"content":"        return Integer.parseInt(days);","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"Varstak"},"content":"    public static LocalDate getTime(String str) {","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"Varstak"},"content":"        LocalDate date \u003d LocalDate.parse(str, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"Varstak"},"content":"        return date;","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Varstak":17,"KevinEyo1":17,"Lanreath":120}},{"path":"src/main/java/seedu/ultron/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     * and returns an RemarkCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"            PREFIX_REMARK);","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        Index index;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"                RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        Remark remark \u003d new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Lanreath":39}},{"path":"src/main/java/seedu/ultron/logic/parser/ShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":" * Parses input arguments and creates a new ShowCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public ShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"            return new ShowCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Lanreath":29}},{"path":"src/main/java/seedu/ultron/logic/parser/StatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.logic.commands.StatusCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.ContainsStatusPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" * Parses input arguments and creates a new StatusCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     * Parses the given {@code String} argument in the context of the StatusCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * and returns a StatusCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    public StatusCommand parse(String arg) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        String trimmedArg \u003d arg.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        if (trimmedArg.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        Status status \u003d ParserUtil.parseStatus(trimmedArg);","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        return new StatusCommand(new ContainsStatusPredicate(status));","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"KevinEyo1":29}},{"path":"src/main/java/seedu/ultron/logic/parser/UltronParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.EditCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.FindCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.ListCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.UpcomingCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.ShowCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.logic.commands.StatusCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"public class UltronParser {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"        ","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"            return new ShowCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"        case StatusCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"            return new StatusCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        case UpcomingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"                return new UpcomingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"        // case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"        //     return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Varstak":12,"antonlee59":1,"KevinEyo1":4,"-":63,"Lanreath":17}},{"path":"src/main/java/seedu/ultron/logic/parser/UpcomingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package seedu.ultron.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.commands.UpcomingCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import seedu.ultron.model.opening.OpeningsBeforeDaysPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"public class UpcomingCommandParser implements Parser\u003cUpcomingCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    public UpcomingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"            int days \u003d ParserUtil.parseDays(trimmedArgs);","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"            return new UpcomingCommand(new OpeningsBeforeDaysPredicate(days));","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpcomingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Varstak":20}},{"path":"src/main/java/seedu/ultron/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.logic.parser.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import seedu.ultron.model.opening.KeydateSort;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" * The API of the Model component.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"public interface Model {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    Predicate\u003cOpening\u003e PREDICATE_SHOW_ALL_OPENINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    void setUltronFilePath(Path addressBookFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    void setUltron(ReadOnlyUltron addressBook);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    /** Returns the Ultron */","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    ReadOnlyUltron getUltron();","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a opening with the same identity as {@code opening} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    boolean hasOpening(Opening opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"     * Deletes the given opening.","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"     * The opening must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"    void deleteOpening(Opening target);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"     * Adds the given opening.","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     * {@code opening} must not already exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"    void addOpening(Opening opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"     * Replaces the given opening {@code target} with {@code editedOpening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"     * The opening identity of {@code editedOpening} must not be the same","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"     * as another existing opening in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"    void setOpening(Opening target, Opening editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"    /** Returns an unmodifiable view of the filtered opening list */","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    ObservableList\u003cOpening\u003e getFilteredOpeningList();","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"     * Updates the filter of the filtered opening list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"    void updateFilteredOpeningList(Predicate\u003cOpening\u003e predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"antonlee59"},"content":"     * Sorts the filter of the filtered opening list in the given {@code direction}","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"antonlee59"},"content":"     * @param direction","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"antonlee59"},"content":"    public void sortFilteredOpeningList(KeydateSort direction);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"     * Returns the currently selected opening in the filtered opening list.","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"    Opening getSelectedOpening();","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"     * Returns the index of currently selected opening in the filtered opening list.","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    Index getSelectedIndex();","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"     * Sets the index of currently selected opening in the filtered opening list.","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"    void setSelectedIndex(Index index);","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"    boolean hasSelectedIndex();","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"BagDownB3nny":1,"antonlee59":7,"KevinEyo1":1,"Lanreath":104}},{"path":"src/main/java/seedu/ultron/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.OpeningByDateComparator;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"import seedu.ultron.model.opening.KeydateSort;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    private final Ultron ultron;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    private ObservableList\u003cOpening\u003e filteredOpenings;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    private Index selectedIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"     * Initializes a ModelManager with the given ultron and userPrefs.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    public ModelManager(ReadOnlyUltron ultron, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(ultron, userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        logger.fine(\"Initializing with ultron: \" + ultron + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"        this.ultron \u003d new Ultron(ultron);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"        filteredOpenings \u003d FXCollections.observableArrayList(this.ultron.getOpeningList());","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    public ModelManager() {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"        this(new Ultron(), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"        return userPrefs.getUltronFilePath();","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"    public void setUltronFilePath(Path ultronFilePath) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"        userPrefs.setUltronFilePath(ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ultron \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"    public void setUltron(ReadOnlyUltron ultron) {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"        this.ultron.resetData(ultron);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"    public ReadOnlyUltron getUltron() {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"        return ultron;","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"    public boolean hasOpening(Opening person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"        return ultron.hasOpening(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    public void deleteOpening(Opening target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"        ultron.removeOpening(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"    public void addOpening(Opening person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"        ultron.addOpening(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"        updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"    public void setOpening(Opening target, Opening editedOpening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"        ultron.setOpening(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Opening List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"     * Returns an unmodifiable view of the list of {@code Opening} backed by the internal list of","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"     * {@code versionedUltron}","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Lanreath"},"content":"    public ObservableList\u003cOpening\u003e getFilteredOpeningList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"        return filteredOpenings;","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"    public void updateFilteredOpeningList(Predicate\u003cOpening\u003e predicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"antonlee59"},"content":"        filteredOpenings.clear();","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"antonlee59"},"content":"        filteredOpenings.addAll(this.ultron.getOpeningList());","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"antonlee59"},"content":"        for (Iterator\u003cOpening\u003e iterator \u003d filteredOpenings.iterator(); iterator.hasNext();) {","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"antonlee59"},"content":"            Opening opening \u003d iterator.next();","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"antonlee59"},"content":"            if (!predicate.test(opening)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"antonlee59"},"content":"                iterator.remove();","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"antonlee59"},"content":"    public void sortFilteredOpeningList(KeydateSort direction) {","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"antonlee59"},"content":"        if (direction.getDirection().equals(\"ASC\")) {","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"Lanreath"},"content":"            FXCollections.sort(filteredOpenings, new OpeningByDateComparator());","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"antonlee59"},"content":"        } else if (direction.getDirection().equals(\"DESC\")) {","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"Lanreath"},"content":"            FXCollections.sort(filteredOpenings, new OpeningByDateComparator().reversed());","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Lanreath"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Selected Opening Accessors\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"Lanreath"},"content":"    public Opening getSelectedOpening() {","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"Lanreath"},"content":"        if (selectedIndex \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"Lanreath"},"content":"            return null;","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"Lanreath"},"content":"        return filteredOpenings.get(selectedIndex.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"    public boolean hasSelectedIndex() {","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"BagDownB3nny"},"content":"        return selectedIndex !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"Lanreath"},"content":"    public Index getSelectedIndex() {","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Lanreath"},"content":"        return selectedIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"Lanreath"},"content":"    public void setSelectedIndex(Index index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"Lanreath"},"content":"        selectedIndex \u003d index;","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"Lanreath"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"Lanreath"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"Lanreath"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"Lanreath"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"Lanreath"},"content":"        // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"Lanreath"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"Lanreath"},"content":"        return ultron.equals(other.ultron)","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 filteredOpenings.equals(other.filteredOpenings);","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"BagDownB3nny":4,"antonlee59":20,"KevinEyo1":1,"Lanreath":170}},{"path":"src/main/java/seedu/ultron/model/ReadOnlyUltron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public interface ReadOnlyUltron {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"     * This list will not contain any duplicate openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    ObservableList\u003cOpening\u003e getOpeningList();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":17}},{"path":"src/main/java/seedu/ultron/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":13,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/model/Ultron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.UniqueOpeningList;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" * Duplicates are not allowed (by .isSameOpening comparison)","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"public class Ultron implements ReadOnlyUltron {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    private final UniqueOpeningList openings;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        openings \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    public Ultron() {","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * Creates an Ultron using the Openings in the {@code toBeCopied}","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    public Ultron(ReadOnlyUltron toBeCopied) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        this();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     * Replaces the contents of the opening list with {@code openings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"     * {@code openings} must not contain duplicate openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    public void setOpenings(List\u003cOpening\u003e openings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        this.openings.setOpenings(openings);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"     * Resets the existing data of this {@code Ultron} with {@code newData}.","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    public void resetData(ReadOnlyUltron newData) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        setOpenings(newData.getOpeningList());","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    //// opening-level operations","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a opening with the same identity as {@code opening} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    public boolean hasOpening(Opening opening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        return openings.contains(opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     * Adds a opening to the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     * The opening must not already exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    public void addOpening(Opening p) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"        openings.add(p);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"     * Replaces the given opening {@code target} in the list with {@code editedOpening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"     * The opening identity of {@code editedOpening} must not be the same as another","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"     * existing opening in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    public void setOpening(Opening target, Opening editedOpening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        openings.setOpening(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"     * Removes {@code key} from this {@code Ultron}.","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"    public void removeOpening(Opening key) {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"        openings.remove(key);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"    //// util methods","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"        return openings.asUnmodifiableObservableList().size() + \" openings\";","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"    public ObservableList\u003cOpening\u003e getOpeningList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"        return openings.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Ultron // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 openings.equals(((Ultron) other).openings));","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"        return openings.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"BagDownB3nny":2,"Lanreath":118}},{"path":"src/main/java/seedu/ultron/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    private Path ultronFilePath \u003d Paths.get(\"data\" , \"ultron.json\");","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"     * Creates a {@code UserPrefsNew} with default values.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     * Creates a {@code UserPrefsNew} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"     * Resets the existing data of this {@code UserPrefsNew} with {@code newUserPrefs}.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        setUltronFilePath(newUserPrefs.getUltronFilePath());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        return ultronFilePath;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    public void setUltronFilePath(Path ultronFilePath) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        this.ultronFilePath \u003d ultronFilePath;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 ultronFilePath.equals(o.ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"        return Objects.hash(guiSettings, ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"        sb.append(\"\\nLocal data file location : \" + ultronFilePath);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"-":72,"Lanreath":15}},{"path":"src/main/java/seedu/ultron/model/opening/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents a Opening\u0027s company in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"public class Company {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"            \"Companies should not be blank or only contain non-alphanumeric characters.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    public final String fullCompany;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Company}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     * @param company A valid company.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    public Company(String company) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"        fullCompany \u003d company;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        return fullCompany;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Company // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"                \u0026\u0026 fullCompany.replaceAll(\" \", \"\").equalsIgnoreCase(","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"                ((Company) other).fullCompany.replaceAll(\" \", \"\"))); // state check","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"        return fullCompany.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BagDownB3nny":2,"KevinEyo1":1,"Lanreath":57}},{"path":"src/main/java/seedu/ultron/model/opening/CompanyOrPositionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":" * Tests that a {@code Opening}\u0027s {@code Company} or {@code Position} matches any of the keywords given.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"public class CompanyOrPositionContainsKeywordsPredicate implements Predicate\u003cOpening\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"    public CompanyOrPositionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"    public boolean test(Opening opening) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(opening.getPosition().fullPosition, keyword)","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"                        || StringUtil.containsWordIgnoreCase(opening.getCompany().fullCompany, keyword));","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"                || (other instanceof CompanyOrPositionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"                \u0026\u0026 keywords.equals(((CompanyOrPositionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"antonlee59":30,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/model/opening/ContainsKeydatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":" * Tests that a {@code Opening}\u0027s {@code Company} or {@code Position} matches any of the keywords given.","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"public class ContainsKeydatePredicate implements Predicate\u003cOpening\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"    public boolean test(Opening opening) {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        if (opening.getKeydates() \u003d\u003d null || opening.getKeydates().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"        for (Keydate date : opening.getKeydates()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"            if (date.isPastKeydate()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"        return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"        return other \u003d\u003d this; // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"antonlee59":26,"KevinEyo1":1,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/model/opening/ContainsStatusPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":" * Tests that a {@code Opening}\u0027s {@code Status} matches the keyword given.","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"public class ContainsStatusPredicate implements Predicate\u003cOpening\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    private final Status status;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    public ContainsStatusPredicate(Status status) {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    public boolean test(Opening opening) {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        return StringUtil.containsWordIgnoreCase(opening.getStatus().fullStatus, status.fullStatus);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"                || (other instanceof ContainsStatusPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 status.equals(((ContainsStatusPredicate) other).status)); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"KevinEyo1":29}},{"path":"src/main/java/seedu/ultron/model/opening/DateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"public class DateComparator implements Comparator\u003cOpening\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"    public int compare(Opening o1, Opening o2) {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        if (o1.getKeydates().isEmpty() \u0026\u0026 o2.getKeydates().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"            return 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        } else if (o1.getKeydates().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"            return 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        } else if (o2.getKeydates().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"            return -1;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"        LocalDate o1Smallest \u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"        LocalDate o2Smallest \u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"        // find smallest date \u003e\u003d today for o1","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        for (Keydate date : o1.getKeydates()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"            LocalDate curr \u003d LocalDate.parse(date.fullDate);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"            if (curr.compareTo(today) \u003e\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"                if (o1Smallest \u003d\u003d null || curr.compareTo(o1Smallest) \u003c 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"                    o1Smallest \u003d curr;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"        if (o1Smallest \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"            o1Smallest \u003d LocalDate.MAX;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"        // find smallest date \u003e\u003d today for o2","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        for (Keydate date : o2.getKeydates()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"            LocalDate curr \u003d LocalDate.parse(date.fullDate);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"            if (curr.compareTo(today) \u003e\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"                if (o2Smallest \u003d\u003d null || curr.compareTo(o2Smallest) \u003c 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"                    o2Smallest \u003d curr;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"        if (o2Smallest \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"            o2Smallest \u003d LocalDate.MAX;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"        return o1Smallest.compareTo(o2Smallest);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"antonlee59":46,"KevinEyo1":5}},{"path":"src/main/java/seedu/ultron/model/opening/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":" * Represents a Company\u0027s email in the openings list.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    public static final String VALIDATION_REGEX_EMAIL \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        return test.matches(VALIDATION_REGEX_EMAIL);","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BagDownB3nny":2,"-":66,"Lanreath":3}},{"path":"src/main/java/seedu/ultron/model/opening/Keydate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Represents an Opening\u0027s date in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"public class Keydate implements Comparable\u003cKeydate\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Keydates should be of the format key@date \"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"            + \"1. The key should only contain alphabetic characters and must not be blank or made of only whitespace.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a date. The date should only be in the format yyyy-MM-dd.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"            + \"eg. CodingAssignment@2023-01-01\\n\";","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    private static final String DATE_ERROR \u003d \"Date should be valid.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    private static final DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    public final String fullDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public final String fullKey;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    public Keydate(String name, String date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidKeydate(new String[]{name, date}), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        fullDate \u003d date;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        fullKey \u003d name;","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string array is a valid keydate.","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidKeydate(String[] test) {","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        if (test.length !\u003d 2 || test[0] \u003d\u003d null || test[1] \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"            LocalDate.parse(test[1], dateFormat);","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"     * Returns true if the date is in the past.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"    public boolean isPastKeydate() {","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"            LocalDate date \u003d LocalDate.parse(fullDate, dateFormat);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"            if (date.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"                return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"            // Should not happen","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"            throw new AssertionError(DATE_ERROR);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     * Returns true if the date is within the given number of days, inclusive of today.","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"    public boolean isWithinDays(int days) {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"            LocalDate date \u003d LocalDate.parse(fullDate, dateFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"            return !date.isBefore(LocalDate.now()) \u0026\u0026 !date.isAfter(LocalDate.now().plusDays(days));","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"            // Should not happen","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"            throw new AssertionError(DATE_ERROR);","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"        return fullKey + \": \" + fullDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"                || (other instanceof Keydate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 fullKey.equals(((Keydate) other).fullKey)","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 fullDate.equals(((Keydate) other).fullDate)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"        return Objects.hash(fullKey, fullDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"    public int compareTo(Keydate other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"            return 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"            LocalDate thisDate \u003d LocalDate.parse(fullDate, dateFormat);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"            LocalDate otherDate \u003d LocalDate.parse(other.fullDate, dateFormat);","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"            return thisDate.compareTo(otherDate);","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"KevinEyo1":17,"Lanreath":96}},{"path":"src/main/java/seedu/ultron/model/opening/KeydateSort.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antonlee59"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"import static seedu.ultron.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"antonlee59"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":" * Tests that a {@code Opening}\u0027s {@code Company} or {@code Position} matches any of the keywords given.","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"public class KeydateSort implements Predicate\u003cOpening\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"antonlee59"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"            \"ORDER should only either be asc or desc\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"    private final String direction;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"    public KeydateSort(String direction) {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"        requireNonNull(direction);","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":"        checkArgument(isValidOrder(direction), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":"        this.direction \u003d direction.toUpperCase();","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    public static boolean isValidOrder(String direction) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"        if (direction.toUpperCase().equals(\"ASC\") || direction.toUpperCase().equals(\"DESC\")) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"        return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    public boolean test(Opening opening) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"antonlee59"},"content":"        return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"antonlee59"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"antonlee59"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"        return other \u003d\u003d this; // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"    public String getDirection() {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"        return direction;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"antonlee59":47}},{"path":"src/main/java/seedu/ultron/model/opening/Opening.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":" * Represents an Opening in the Openings list.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"public class Opening {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    // Identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    private final Position position;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    private final Company company;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"    private final Email email;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    // Data fields","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    private final Status status;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    private final ArrayList\u003cKeydate\u003e keydates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    public Opening(Position position, Company company, Email email,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"                   Status status, Remark remark, List\u003cKeydate\u003e keydates) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        requireAllNonNull(position, company, email, status, keydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        this.keydates.addAll(keydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        this.keydates.sort(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    public Position getPosition() {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        return position;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    public Company getCompany() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        return company;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"        return email;","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"        return status;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        return remark;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"     * Returns an immutable keydate set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"    public List\u003cKeydate\u003e getKeydates() {","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        return Collections.unmodifiableList(keydates);","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"     * Returns true if both openings have the same position and company.","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"     * This defines a weaker notion of equality between two openings.","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    public boolean isSameOpening(Opening otherOpening) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"        if (otherOpening \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"        return otherOpening !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getPosition().equals(getPosition())","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getCompany().equals(getCompany());","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"     * Returns true if both openings have the same identity and data fields.","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"     * This defines a stronger notion of equality between two openings.","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"        if (!(other instanceof Opening)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"        Opening otherOpening \u003d (Opening) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"        return otherOpening.getPosition().equals(getPosition())","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getCompany().equals(getCompany())","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 otherOpening.getRemark().equals(getRemark())","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"                \u0026\u0026 otherOpening.getKeydates().equals(getKeydates());","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"        return Objects.hash(position, company, email, status, remark, keydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"        builder.append(\"Position: \")","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"                .append(getPosition())","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"                .append(\" | Company: \")","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"                .append(getCompany())","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"                .append(\" | Email: \")","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"                .append(\" | Status: \")","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"                .append(getStatus());","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"        if (getRemark() !\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"BagDownB3nny"},"content":"            builder.append(\" | Remark: \")","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"Lanreath"},"content":"                    .append(getRemark());","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cKeydate\u003e keydates \u003d getKeydates();","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"KevinEyo1"},"content":"        if (!keydates.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"            builder.append(\" | Keydates: \");","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"KevinEyo1"},"content":"            keydates.forEach(builder::append);","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Lanreath"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BagDownB3nny":11,"KevinEyo1":14,"Lanreath":112}},{"path":"src/main/java/seedu/ultron/model/opening/OpeningByDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"public class OpeningByDateComparator implements Comparator\u003cOpening\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"    public int compare(Opening o1, Opening o2) {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"        if (o1.getKeydates().isEmpty() \u0026\u0026 o2.getKeydates().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"            return 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        } else if (o1.getKeydates().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"            return 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        } else if (o2.getKeydates().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"            return -1;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"        Keydate o1Smallest \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        Keydate o2Smallest \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"        // find smallest date \u003e\u003d today for o1","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        for (Keydate date : o1.getKeydates()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"            // if date is not past date","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"            if (!date.isPastKeydate()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"                // date is the smallest date","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"                o1Smallest \u003d date;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        // find smallest date \u003e\u003d today for o2","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        for (Keydate date : o2.getKeydates()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"            // if date is not past date","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"            if (!date.isPastKeydate()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"                // date is the smallest date","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"                o2Smallest \u003d date;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        // if both openings have no dates \u003e\u003d today","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"        if (o1Smallest \u003d\u003d null \u0026\u0026 o2Smallest \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"            return o1.getKeydates().get(o1.getKeydates().size() - 1).compareTo(o2.getKeydates()","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"                    .get(o2.getKeydates().size() - 1));","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        } else if (o1Smallest \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"            return 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"        } else if (o2Smallest \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"            return -1;","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"        return o1Smallest.compareTo(o2Smallest);","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"KevinEyo1":11,"Lanreath":43}},{"path":"src/main/java/seedu/ultron/model/opening/OpeningsBeforeDaysPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"public class OpeningsBeforeDaysPredicate implements Predicate\u003cOpening\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    private int days;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    public OpeningsBeforeDaysPredicate(int days) {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    public boolean test(Opening opening) {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"        List\u003cKeydate\u003e allDates \u003d opening.getKeydates();","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"        for (Keydate d : allDates) {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"            if (d.isWithinDays(days)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"        return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Varstak":19,"KevinEyo1":2,"Lanreath":5}},{"path":"src/main/java/seedu/ultron/model/opening/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents a Opening\u0027s position in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPosition(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"public class Position {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"            \"Positions should not be blank or only contain non-alphanumeric characters\"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"                  + \"or only numbers.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public final String fullPosition;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Position}.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     * @param position A valid position.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    public Position(String position) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(position);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidPosition(position), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        fullPosition \u003d position;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string is a valid position.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"        return fullPosition;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"                \u0026\u0026 fullPosition.replaceAll(\" \", \"\").equalsIgnoreCase(","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"                        ((Position) other).fullPosition.replaceAll(\" \", \"\"))); // state check","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"        return fullPosition.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BagDownB3nny":2,"KevinEyo1":2,"Lanreath":57}},{"path":"src/main/java/seedu/ultron/model/opening/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":" * Represents a Person\u0027s remark in the remark book.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"public class Remark {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, but it should not be blank\";","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"    public final String value;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"     * Constructs an {@code remark}.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        return !test.strip().isEmpty();","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"        return value;","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"KevinEyo1":8,"Lanreath":40}},{"path":"src/main/java/seedu/ultron/model/opening/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":" * Represents an Opening\u0027s status in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"public class Status {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Statuses are case-insensitive and must match\"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"            + \"only one of the predefined values.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"            + \"Predefined values: FOUND, APPLIED, INTERVIEWING, OFFERED, REJECTED, ACCEPTED\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * The enum of all possible statuses.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    public static enum StatusEnum {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"        FOUND, APPLIED, INTERVIEWING, OFFERED, REJECTED, ACCEPTED","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public final String fullStatus;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"     * @param status A valid status.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    public Status(String status) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"antonlee59"},"content":"        status \u003d status.toUpperCase();","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        fullStatus \u003d status.toUpperCase();","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        for (StatusEnum status : StatusEnum.values()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"            if (status.name().equals(test.toUpperCase())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"                return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"        return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"        return fullStatus;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"                \u0026\u0026 fullStatus.equals(((Status) other).fullStatus)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"        return fullStatus.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"antonlee59":1,"KevinEyo1":6,"Lanreath":58}},{"path":"src/main/java/seedu/ultron/model/opening/UniqueOpeningList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import static seedu.ultron.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.exceptions.DuplicateOpeningException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.exceptions.OpeningNotFoundException;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":" * A list of openings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * A opening is considered unique by comparing using {@code Opening#isSameOpening(Opening)}.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" * As such, adding and updating of openings uses Opening#isSameOpening(Opening) for equality","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":" * so as to ensure that the opening being added or updated is","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":" * unique in terms of identity in the UniqueOpeningList. However, the removal of a opening","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":" * uses Opening#equals(Object) so as to ensure that the opening","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":" * @see Opening#isSameOpening(Opening)","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"public class UniqueOpeningList implements Iterable\u003cOpening\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    private final ObservableList\u003cOpening\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    private final ObservableList\u003cOpening\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"     * Returns true if the list contains an equivalent opening as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"    public boolean contains(Opening toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"     * Adds a opening to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"     * The opening must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"    public void add(Opening toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"            throw new DuplicateOpeningException();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"     * Replaces the opening {@code target} in the list with {@code editedOpening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"     * The opening identity of {@code editedOpening} must not be the same as another existing opening in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    public void setOpening(Opening target, Opening editedOpening) {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(target, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Lanreath"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Lanreath"},"content":"            throw new OpeningNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Lanreath"},"content":"        if (!target.isSameOpening(editedOpening) \u0026\u0026 contains(editedOpening)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Lanreath"},"content":"            throw new DuplicateOpeningException();","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Lanreath"},"content":"        internalList.set(index, editedOpening);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Lanreath"},"content":"     * Removes the equivalent opening from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Lanreath"},"content":"     * The opening must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Lanreath"},"content":"    public void remove(Opening toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Lanreath"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"            throw new OpeningNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"    public void setOpenings(UniqueOpeningList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Lanreath"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Lanreath"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Lanreath"},"content":"     * Replaces the contents of this list with {@code openings}.","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Lanreath"},"content":"     * {@code openings} must not contain duplicate openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Lanreath"},"content":"    public void setOpenings(List\u003cOpening\u003e openings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Lanreath"},"content":"        requireAllNonNull(openings);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"        if (!openingsAreUnique(openings)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"            throw new DuplicateOpeningException();","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Lanreath"},"content":"        internalList.setAll(openings);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Lanreath"},"content":"    public ObservableList\u003cOpening\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Lanreath"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Lanreath"},"content":"    public Iterator\u003cOpening\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Lanreath"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Lanreath"},"content":"                || (other instanceof UniqueOpeningList // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"                        \u0026\u0026 internalList.equals(((UniqueOpeningList) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Lanreath"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Lanreath"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"Lanreath"},"content":"     * Returns true if {@code openings} contains only unique openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"Lanreath"},"content":"    private boolean openingsAreUnique(List\u003cOpening\u003e openings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"Lanreath"},"content":"        for (int i \u003d 0; i \u003c openings.size() - 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"Lanreath"},"content":"            for (int j \u003d i + 1; j \u003c openings.size(); j++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"                if (openings.get(i).isSameOpening(openings.get(j))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Lanreath"},"content":"                    return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"Lanreath"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"Lanreath"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":138}},{"path":"src/main/java/seedu/ultron/model/opening/exceptions/DuplicateOpeningException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":" * identity).","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"public class DuplicateOpeningException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"    public DuplicateOpeningException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"        super(\"Operation would result in duplicate openings\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":11}},{"path":"src/main/java/seedu/ultron/model/opening/exceptions/OpeningNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.opening.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"public class OpeningNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Lanreath":6}},{"path":"src/main/java/seedu/ultron/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.model.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":" * Contains utility methods for populating {@code Ultron} with sample data.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"    public static Opening[] getSampleOpenings() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"        return new Opening[] {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"            new Opening(new Position(\"Software Engineer\"), new Company(\"Google\"), new Email(\"johnDoe@google.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"                    new Status(\"FOUND\"), null, getKeydateList(new Keydate(\"Interview\", \"2023-11-21\"))),","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"            new Opening(new Position(\"Software Developer\"), new Company(\"Shopee\"), new Email(\"alice@shopee.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"                    new Status(\"APPLIED\"), new Remark(\"Dream Company\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"                    getKeydateList(new Keydate(\"Interview\", \"2023-10-15\"))),","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"            new Opening(new Position(\"UX Designer\"), new Company(\"Grab\"), new Email(\"tenz@grab.com\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"                    new Status(\"FOUND\"), null, getKeydateList(new Keydate(\"Interview\", \"2023-04-12\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"                        new Keydate(\"Practical Assessment\", \"2023-05-11\"))),","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"            new Opening(new Position(\"Software Engineer\"), new Company(\"Gojek\"), new Email(\"sleepy@gojek.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"                    new Status(\"FOUND\"), null, getKeydateList())","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"    public static ReadOnlyUltron getSampleUltron() {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"        Ultron sampleUltron \u003d new Ultron();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"        for (Opening sampleOpening : getSampleOpenings()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"            sampleUltron.addOpening(sampleOpening);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"        return sampleUltron;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"     * Returns a keydate set containing the list of arraylist of string given.","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"    public static List\u003cKeydate\u003e getKeydateList(Keydate... keydates) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        return Arrays.stream(keydates)","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Lanreath"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Varstak":30,"antonlee59":2,"KevinEyo1":9,"Lanreath":12}},{"path":"src/main/java/seedu/ultron/storage/JsonAdaptedKeydate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Jackson-friendly version of {@link Keydate}.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"class JsonAdaptedKeydate {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    private final String name;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    private final String date;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * Constructs a {@code JsonAdaptedKeydate} with the given {@code keydate}.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"    public JsonAdaptedKeydate(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"     * Converts a given {@code keydate} into this class for Jackson use.","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    public JsonAdaptedKeydate(Keydate source) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        name \u003d source.fullKey;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        date \u003d source.fullDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"     * Converts this Jackson-friendly adapted date object into the model\u0027s {@code keydate} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted date.","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"    public Keydate toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"        if (!Keydate.isValidKeydate(new String[]{name, date})) {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"            throw new IllegalValueException(Keydate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        return new Keydate(name, date);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":45,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/storage/JsonAdaptedOpening.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":" * Jackson-friendly version of {@link Opening}.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"class JsonAdaptedOpening {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Opening\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    private final String position;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"    private final String company;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    private final String email;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    private final String status;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    private final String remark;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    private final List\u003cJsonAdaptedKeydate\u003e keydates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"     * Constructs a {@code JsonAdaptedOpening} with the given Opening details.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonAdaptedOpening(@JsonProperty(\"position\") String position, @JsonProperty(\"company\") String company,","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"status\") String status,","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"                              @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"                              @JsonProperty(\"dates\") List\u003cJsonAdaptedKeydate\u003e keydates) {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"        this.remark \u003d remark \u003d\u003d null ? \"\" : remark;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        if (keydates !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"            this.keydates.addAll(keydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts a given {@code Opening} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonAdaptedOpening(Opening source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"        position \u003d source.getPosition().fullPosition;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"        company \u003d source.getCompany().fullCompany;","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"        status \u003d source.getStatus().fullStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"        remark \u003d source.getRemark() \u003d\u003d null ? null : source.getRemark().value;","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"        keydates.addAll(source.getKeydates().stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"                .map(JsonAdaptedKeydate::new)","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts this Jackson-friendly adapted Opening object into the model\u0027s {@code Opening} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Opening.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"    public Opening toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"        final List\u003cKeydate\u003e openingKeydates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"        for (JsonAdaptedKeydate keydate : keydates) {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"            openingKeydates.add(keydate.toModelType());","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Position.isValidPosition(position)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Company.isValidCompany(company)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"KevinEyo1"},"content":"        final List\u003cKeydate\u003e modelKeydates \u003d new ArrayList\u003c\u003e(openingKeydates);","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"KevinEyo1"},"content":"        return new Opening(modelPosition, modelCompany, modelEmail, modelStatus, modelRemark, modelKeydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":100,"KevinEyo1":12,"Lanreath":8}},{"path":"src/main/java/seedu/ultron/storage/JsonSerializableUltron.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":" * An Immutable Ultron that is serializable to JSON format.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"@JsonRootName(value \u003d \"Ultron\")","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"class JsonSerializableUltron {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String MESSAGE_DUPLICATE_OPENING \u003d \"Openings list contains duplicate opening(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"    private final List\u003cJsonAdaptedOpening\u003e openings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"     * Constructs a {@code JsonSerializableUltron} with the given openings.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonSerializableUltron(@JsonProperty(\"openings\") List\u003cJsonAdaptedOpening\u003e openings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"        this.openings.addAll(openings);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts a given {@code ReadOnlyUltron} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableUltron}.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonSerializableUltron(ReadOnlyUltron source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        openings.addAll(source.getOpeningList().stream().map(JsonAdaptedOpening::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"     * Converts this address book into the model\u0027s {@code Ultron} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"    public Ultron toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        Ultron ultron \u003d new Ultron();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"        for (JsonAdaptedOpening jsonAdaptedopening : openings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"            Opening opening \u003d jsonAdaptedopening.toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"            if (ultron.hasOpening(opening)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"            ultron.addOpening(opening);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"        return ultron;","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":55,"Lanreath":5}},{"path":"src/main/java/seedu/ultron/storage/JsonUltronStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.FileUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.JsonUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":" * A class to access Ultron data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"public class JsonUltronStorage implements UltronStorage {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUltronStorage.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    public JsonUltronStorage(Path filePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"        return filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"        return readUltron(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"     * Similar to {@link #readUltron()}.","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        Optional\u003cJsonSerializableUltron\u003e jsonUltron \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"                filePath, JsonSerializableUltron.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        if (!jsonUltron.isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"            return Optional.of(jsonUltron.get().toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"        saveUltron(ultron, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"     * Similar to {@link #saveUltron(ReadOnlyUltron)}.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron, Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(ultron);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUltron(ultron), filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":74,"Lanreath":7}},{"path":"src/main/java/seedu/ultron/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.JsonUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"Lanreath":5}},{"path":"src/main/java/seedu/ultron/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":" * API of the Storage component","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"public interface Storage extends UltronStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    void saveUltron(ReadOnlyUltron ultron) throws IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Lanreath":32}},{"path":"src/main/java/seedu/ultron/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":" * Manages storage of Ultron data in local storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    private UltronStorage ultronStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code StorageManager} with the given {@code UltronStorage} and {@code UserPrefStorageNew}.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    public StorageManager(UltronStorage ultronStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"        this.ultronStorage \u003d ultronStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ultron methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"    public Path getUltronFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"        return ultronStorage.getUltronFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"        return readUltron(ultronStorage.getUltronFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"    public Optional\u003cReadOnlyUltron\u003e readUltron(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"        return ultronStorage.readUltron(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"        saveUltron(ultron, ultronStorage.getUltronFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    public void saveUltron(ReadOnlyUltron ultron, Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        ultronStorage.saveUltron(ultron, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":65,"antonlee59":1,"Lanreath":12}},{"path":"src/main/java/seedu/ultron/storage/UltronStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":" * Represents a storage for {@link seedu.ultron.model.Ultron}.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"public interface UltronStorage {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"    Path getUltronFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns Ultron data as a {@link ReadOnlyUltron}.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    Optional\u003cReadOnlyUltron\u003e readUltron() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"     * @see #getUltronFilePath()","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    Optional\u003cReadOnlyUltron\u003e readUltron(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"     * Saves the given {@link ReadOnlyUltron} to the storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"     * @param ultron cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    void saveUltron(ReadOnlyUltron ultron) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"     * @see #saveUltron(ReadOnlyUltron)","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    void saveUltron(ReadOnlyUltron ultron, Path filePath) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"BagDownB3nny":41,"Lanreath":4}},{"path":"src/main/java/seedu/ultron/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefsnew}.","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"     * Returns UserPrefsNew data from storage.","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"     * Saves the given {@link seedu.ultron.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":29,"Lanreath":7}},{"path":"src/main/java/seedu/ultron/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"Lanreath"},"content":"         * @see seedu.ultron.logic.Logic#execute(String)","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":80,"Lanreath":5}},{"path":"src/main/java/seedu/ultron/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-f12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BagDownB3nny":1,"-":99,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/ui/KeydateCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":" * An UI component that displays information of a {@code KeydateCard}.","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"public class KeydateCard extends Label {","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public final Keydate keydate;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * Creates a {@code DateCardCode} with the given {@code KeydateCard} and index to display.","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    public KeydateCard(Keydate keydate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        super(keydate.fullKey + \": \" + keydate.fullDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        this.keydate \u003d keydate;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"        this.getStyleClass().add(\"keydate\");","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        if (keydate.isPastKeydate()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"            this.getStyleClass().add(\"past\");","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"KevinEyo1":9,"Lanreath":23}},{"path":"src/main/java/seedu/ultron/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.Logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    private OpeningListPanel openingListPanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    private OpeningDetailsPanel openingDetailsPanel;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"    private StackPane openingListPanelPlaceholder;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Lanreath"},"content":"    private StackPane openingDetailsPanelPlaceholder;","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"Lanreath"},"content":"        openingListPanel \u003d new OpeningListPanel(logic.getFilteredOpeningList(), logic, this);","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":"        openingListPanelPlaceholder.getChildren().add(openingListPanel.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Lanreath"},"content":"        handleShow();","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"Lanreath"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getUltronFilePath());","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"Lanreath"},"content":"    public OpeningListPanel getOpeningListPanel() {","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"Lanreath"},"content":"        return openingListPanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"Lanreath"},"content":"     * Updates the opening details panel with the selected opening.","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"Lanreath"},"content":"    public void handleShow() {","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"Lanreath"},"content":"        openingDetailsPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"Lanreath"},"content":"        if (logic.getSelectedOpening() \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"Lanreath"},"content":"            openingDetailsPanel \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"Lanreath"},"content":"            return;","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"Lanreath"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Lanreath"},"content":"        openingDetailsPanel \u003d new OpeningDetailsPanel(logic.getSelectedOpening());","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"Lanreath"},"content":"        openingDetailsPanelPlaceholder.getChildren().add(openingDetailsPanel.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"Lanreath"},"content":"    };","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"Lanreath"},"content":"     * @see seedu.ultron.logic.Logic#execute(String)","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"Lanreath"},"content":"            handleShow();","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":182,"Lanreath":34}},{"path":"src/main/java/seedu/ultron/ui/OpeningCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":" * An UI component that displays information of a {@code Opening}.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"antonlee59"},"content":"public class OpeningCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"antonlee59"},"content":"    private static final String FXML \u003d \"OpeningListCard.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"    public final Opening opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"    private Label company;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"    private Label position;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"antonlee59"},"content":"    private Label status;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"antonlee59"},"content":"    private Label remark;","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    private FlowPane keydates;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code OpeningCode} with the given {@code Opening} and index to display.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"    public OpeningCard(Opening opening, int displayedIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"        this.opening \u003d opening;","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"        company.setText(opening.getCompany().fullCompany);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"        position.setText(opening.getPosition().fullPosition);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"        status.setText(opening.getStatus().fullStatus);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        opening.getKeydates().stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"                .forEach(keydate -\u003e keydates.getChildren().add(new KeydateCard(keydate)));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"antonlee59"},"content":"        if (!(other instanceof OpeningCard)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"antonlee59"},"content":"        OpeningCard card \u003d (OpeningCard) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"antonlee59"},"content":"                \u0026\u0026 opening.equals(card.opening);","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":18,"KevinEyo1":3,"-":52,"Lanreath":2}},{"path":"src/main/java/seedu/ultron/ui/OpeningDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":" * Panel containing the list of openings.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"public class OpeningDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    private static final String FXML \u003d \"OpeningDetailsPanel.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OpeningDetailsPanel.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Lanreath"},"content":"    public Opening opening;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    Label company;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Lanreath"},"content":"    Label position;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"    Label status;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    Label email;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"    Label remark;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Lanreath"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"    FlowPane dates;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"     * Creates a {@code OpeningDetailsPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"    public OpeningDetailsPanel(Opening opening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"        super(FXML);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        this.opening \u003d opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Lanreath"},"content":"        position.setText(opening.getPosition().fullPosition);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"        company.setText(\"Company: \" + opening.getCompany().fullCompany);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Lanreath"},"content":"        status.setText(\"Status: \" + opening.getStatus().fullStatus);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Lanreath"},"content":"        email.setText(\"Email: \" + opening.getEmail().value);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Lanreath"},"content":"        remark.setText(String.format(\"Remark: %s\", opening.getRemark().value));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"        dates.setHgap(20);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"        opening.getKeydates().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"                .forEach(date -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"                    KeydateCard keydateCard \u003d new KeydateCard(date);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"                    keydateCard.setWrapText(true);","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"                    dates.getChildren().add(keydateCard);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"                });","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"        position.setWrapText(true);","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"        company.setWrapText(true);","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"        status.setWrapText(true);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"        email.setWrapText(true);","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"        remark.setWrapText(true);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":13,"KevinEyo1":1,"Lanreath":47}},{"path":"src/main/java/seedu/ultron/ui/OpeningListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"antonlee59"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"antonlee59"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"antonlee59"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.Logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"antonlee59"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"antonlee59"},"content":" * Panel containing the list of openings.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"antonlee59"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"antonlee59"},"content":"public class OpeningListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"antonlee59"},"content":"    private static final String FXML \u003d \"OpeningListPanel.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"antonlee59"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OpeningListPanel.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"antonlee59"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"antonlee59"},"content":"    private ListView\u003cOpening\u003e openingListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"antonlee59"},"content":"     * Creates a {@code OpeningListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    public OpeningListPanel(ObservableList\u003cOpening\u003e openingList, Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"antonlee59"},"content":"        openingListView.setItems(openingList);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"antonlee59"},"content":"        openingListView.setCellFactory(listView -\u003e new OpeningListViewCell());","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Lanreath"},"content":"        openingListView.setOnMouseClicked(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Lanreath"},"content":"            @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Lanreath"},"content":"                Index selected \u003d Index.fromZeroBased(openingListView.getSelectionModel().getSelectedIndex());","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"Lanreath"},"content":"                logic.setSelectedOpening(selected);","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"Lanreath"},"content":"                mainWindow.handleShow();","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"Lanreath"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Lanreath"},"content":"        });","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"antonlee59"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"antonlee59"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Opening} using a {@code OpeningCard}.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"antonlee59"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"antonlee59"},"content":"    class OpeningListViewCell extends ListCell\u003cOpening\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"antonlee59"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"antonlee59"},"content":"        protected void updateItem(Opening opening, boolean empty) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"antonlee59"},"content":"            super.updateItem(opening, empty);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"antonlee59"},"content":"            if (empty || opening \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"                StackPane sp \u003d new StackPane();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"                sp.setPrefHeight(105);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Lanreath"},"content":"                setGraphic(sp);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"antonlee59"},"content":"            } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"antonlee59"},"content":"                setGraphic(new OpeningCard(opening, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"antonlee59"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"antonlee59"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"antonlee59"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"antonlee59"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"antonlee59"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":43,"Lanreath":20}},{"path":"src/main/java/seedu/ultron/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BagDownB3nny":1,"-":27,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"Lanreath":1}},{"path":"src/main/java/seedu/ultron/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.MainApp;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.logic.Logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ultron.png\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"     * Creates a {@code UiManagerNew} with the given {@code LogicNew}.","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"Lanreath"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/UIUpgrade.css\");","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":80,"Lanreath":8}},{"path":"src/main/java/seedu/ultron/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"package seedu.ultron.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"import seedu.ultron.MainApp;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"Lanreath":2}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"#helpMessage {","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #0077B5;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #004471;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"BagDownB3nny":7,"-":13,"Lanreath":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"         title\u003d\"Ultron\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    \u003cImage url\u003d\"@/images/ultron.png\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"        \u003cURL value\u003d\"@UIUpgrade.css\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"Lanreath"},"content":"        \u003cSplitPane fx:id\u003d \"openingContainer\" dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"Lanreath"},"content":"          \u003cVBox fx:id\u003d\"openingList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"170\" prefWidth\u003d\"170\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Lanreath"},"content":"            \u003cStackPane fx:id\u003d\"openingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"Lanreath"},"content":"          \u003cVBox fx:id\u003d\"openingDetails\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"170\" prefWidth\u003d\"170\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"            \u003cStackPane fx:id\u003d\"openingDetailsPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":55,"Lanreath":11}},{"path":"src/main/resources/view/OpeningDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"\u003cScrollPane fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"    \u003ccontent\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"        \u003cVBox fx:id\u003d\"openingDetailsPanel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Lanreath"},"content":"            \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"details-header\" text\u003d\"\\$position\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Lanreath"},"content":"            \u003cLabel fx:id\u003d\"company\" text\u003d\"\\$company\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"            \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Lanreath"},"content":"            \u003cFlowPane fx:id\u003d\"dates\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Lanreath"},"content":"            \u003cLabel fx:id\u003d\"email\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Lanreath"},"content":"            \u003cLabel fx:id\u003d\"remark\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    \u003c/content\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Lanreath"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Lanreath":20}},{"path":"src/main/resources/view/OpeningListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Lanreath"},"content":"        \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"      \u003cLabel fx:id\u003d\"company\" text\u003d\"\\$company\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"antonlee59"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Lanreath"},"content":"      \u003cFlowPane fx:id\u003d\"keydates\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":1,"-":31,"Lanreath":4}},{"path":"src/main/resources/view/OpeningListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"antonlee59"},"content":"  \u003cListView fx:id\u003d\"openingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"antonlee59":1,"-":7}},{"path":"src/main/resources/view/UIUpgrade.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lanreath"},"content":"@font-face {","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Lanreath"},"content":"    font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"    src: url(\"../fonts/SourceSansPro-Regular.ttf\");","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Lanreath"},"content":"@font-face {","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Lanreath"},"content":"    font-family: \"Source Sans Pro Semibold\";","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Lanreath"},"content":"    src: url(\"../fonts/SourceSansPro-Semibold.ttf\");","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":".root{","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Lanreath"},"content":"    background-color: #ffffff; /* Used in the default.html file */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Lanreath"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"Lanreath"},"content":"    -fx-base: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Lanreath"},"content":"    -fx-control-inner-background: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Lanreath"},"content":"    -fx-border-color: transparent transparent transparent black;","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"Lanreath"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Lanreath"},"content":"    -fx-border-color: #CACCCE;","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"Lanreath"},"content":".list-cell:filled {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #cfedfb","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"Lanreath"},"content":"     -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"Lanreath"},"content":"     -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"Lanreath"},"content":"     -fx-border-color: derive(#ffffff, 10%);","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"BagDownB3nny"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"Lanreath"},"content":"    -fx-border-color: derive(#ffffff, 25%);","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"Lanreath"},"content":"    -fx-border-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":188,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 50%);","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\", Arial, \"Source Sans Pro\", sans-serif;","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"Lanreath"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 25%);","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"Lanreath"},"content":".scroll-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":289,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"Lanreath"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2023-03-30"},{"lineNumber":293,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: derive(#CACCCE, 80%);","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #CACCCE;","lastModifiedDate":"2023-03-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"Lanreath"},"content":".scroll-bar .thumb:hover {","lastModifiedDate":"2023-03-29"},{"lineNumber":307,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #86888A;","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":309,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: #E68523;","lastModifiedDate":"2023-03-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #e6e9ec;","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"Lanreath"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-28"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro\";","lastModifiedDate":"2023-03-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"Lanreath"},"content":"#filterField, #openingListPanel, #openingWebpage {","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"Lanreath"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #e6e9ec;","lastModifiedDate":"2023-03-29"},{"lineNumber":353,"author":{"gitId":"Lanreath"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-29"},{"lineNumber":354,"author":{"gitId":"Lanreath"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-28"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"Lanreath"},"content":"#openingContainer {","lastModifiedDate":"2023-03-29"},{"lineNumber":358,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-29"},{"lineNumber":359,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":360,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":361,"author":{"gitId":"Lanreath"},"content":"#openingDetailsPanel {","lastModifiedDate":"2023-03-29"},{"lineNumber":362,"author":{"gitId":"Lanreath"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-29"},{"lineNumber":363,"author":{"gitId":"Lanreath"},"content":"    -fx-padding: 8 8 8 8;","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"Lanreath"},"content":"    -fx-spacing: 4;","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"Lanreath"},"content":"#keydates {","lastModifiedDate":"2023-03-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"Lanreath"},"content":"#position {","lastModifiedDate":"2023-03-29"},{"lineNumber":373,"author":{"gitId":"Lanreath"},"content":"    -fx-text-fill: #0077B5;","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"Lanreath"},"content":"    -fx-font-family: \"Source Sans Pro Semibold\";","lastModifiedDate":"2023-03-29"},{"lineNumber":375,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":376,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":377,"author":{"gitId":"Lanreath"},"content":".details-header {","lastModifiedDate":"2023-03-29"},{"lineNumber":378,"author":{"gitId":"Lanreath"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2023-03-29"},{"lineNumber":379,"author":{"gitId":"Lanreath"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":380,"author":{"gitId":"Lanreath"},"content":"    -fx-border-color: #CACCCE;","lastModifiedDate":"2023-03-29"},{"lineNumber":381,"author":{"gitId":"Lanreath"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":383,"author":{"gitId":"Lanreath"},"content":".keydate {","lastModifiedDate":"2023-03-30"},{"lineNumber":384,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #cfedfb;","lastModifiedDate":"2023-03-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"Lanreath"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"Lanreath"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-03-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"Lanreath"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":391,"author":{"gitId":"Lanreath"},"content":".keydate.past {","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"Lanreath"},"content":"    -fx-background-color: #FFE7BB;","lastModifiedDate":"2023-03-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":5,"-":274,"Lanreath":114}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import javafx.application.Application;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.AppParameters;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//public class AppParametersTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_validConfigPath_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_nullConfigPath_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        expected.setConfigPath(null);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":59}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.Config;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":2,"-":27}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.Version;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":2,"-":135}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.commons.core.index;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//public class IndexTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//    public void createOneBasedIndex() {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid index","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//        // check equality using the same base","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//        // convert from one-based index to zero-based index","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    public void createZeroBasedIndex() {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid index","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        // check equality using the same base","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        // convert from zero-based index to one-based index","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":62}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.util.AppUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":2,"-":36}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":3,"-":107}},{"path":"src/test/java/seedu/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.Config;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":3,"-":114}},{"path":"src/test/java/seedu/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.util.FileUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":2,"-":23}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.util.FileUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.util.JsonUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":2,"-":45}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":2,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.LogicManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.ListCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.storage.StorageManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//public class LogicManagerTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//    @TempDir","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    public Path temporaryFolder;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//    private Logic logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandException(deleteCommand, MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        // Execute add command","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//                + ADDRESS_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"//     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"BagDownB3nny"},"content":"//    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"BagDownB3nny"},"content":"//     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"BagDownB3nny"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"BagDownB3nny"},"content":"//            String expectedMessage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"BagDownB3nny"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"BagDownB3nny"},"content":"//     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"BagDownB3nny"},"content":"//     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"BagDownB3nny"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"BagDownB3nny"},"content":"//     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"BagDownB3nny"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"BagDownB3nny"},"content":"//            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"BagDownB3nny"},"content":"//     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"BagDownB3nny"},"content":"//    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"BagDownB3nny"},"content":"//        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"BagDownB3nny"},"content":"//            super(filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"BagDownB3nny"},"content":"//        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"BagDownB3nny"},"content":"//        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"//            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":165}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.getTypicalUltron;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.OpeningBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"        model \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_newOpening_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"        Opening validOpening \u003d new OpeningBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"        Model expectedModel \u003d new ModelManager(model.getUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"        expectedModel.addOpening(validOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandSuccess(new AddCommand(validOpening), model,","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validOpening), expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_duplicateOpening_throwsCommandException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"        Opening openingInList \u003d model.getUltron().getOpeningList().get(0);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(new AddCommand(openingInList), model, AddCommand.MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":17,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.OpeningBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ReadOnlyUltron;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.KeydateSort;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    public void constructor_nullOpening_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_openingAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"        ModelStubAcceptingOpeningAdded modelStub \u003d new ModelStubAcceptingOpeningAdded();","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        Opening validOpening \u003d new OpeningBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"        CommandResult commandResult \u003d new AddCommand(validOpening).execute(modelStub);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validOpening), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(Arrays.asList(validOpening), modelStub.openingsAdded);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_duplicateOpening_throwsCommandException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"        Opening validOpening \u003d new OpeningBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        AddCommand addCommand \u003d new AddCommand(validOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"        ModelStub modelStub \u003d new ModelStubWithOpening(validOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_OPENING, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"        Opening frontendEngineer \u003d new OpeningBuilder().withPosition(\"Frontend Engineer\").build();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"        Opening backendEngineer \u003d new OpeningBuilder().withPosition(\"Backend Engineer\").build();","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"        AddCommand addFrontendEngineerCommand \u003d new AddCommand(frontendEngineer);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"        AddCommand addBackendEngineerCommand \u003d new AddCommand(backendEngineer);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(addFrontendEngineerCommand.equals(addFrontendEngineerCommand));","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"        AddCommand addFrontendEngineerCommandCopy \u003d new AddCommand(frontendEngineer);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(addFrontendEngineerCommand.equals(addFrontendEngineerCommandCopy));","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(addFrontendEngineerCommand.equals(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(addFrontendEngineerCommand.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"        // different opening -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(addFrontendEngineerCommand.equals(addBackendEngineerCommand));","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"        public Path getUltronFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"        public void setUltronFilePath(Path ultronFilePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"        public void addOpening(Opening opening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"        public void setUltron(ReadOnlyUltron newData) {","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"        public ReadOnlyUltron getUltron() {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"        public boolean hasOpening(Opening opening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"BagDownB3nny"},"content":"        public void deleteOpening(Opening target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"BagDownB3nny"},"content":"        public void setOpening(Opening target, Opening editedOpening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"BagDownB3nny"},"content":"        public ObservableList\u003cOpening\u003e getFilteredOpeningList() {","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"BagDownB3nny"},"content":"        public void updateFilteredOpeningList(Predicate\u003cOpening\u003e predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"BagDownB3nny"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"BagDownB3nny"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"BagDownB3nny"},"content":"        public void sortFilteredOpeningList(KeydateSort direction) {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"BagDownB3nny"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"BagDownB3nny"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"BagDownB3nny"},"content":"        public Opening getSelectedOpening() {","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"BagDownB3nny"},"content":"        public Index getSelectedIndex() {","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"BagDownB3nny"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"BagDownB3nny"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"BagDownB3nny"},"content":"        public void setSelectedIndex(Index index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"BagDownB3nny"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":175,"author":{"gitId":"BagDownB3nny"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"BagDownB3nny"},"content":"        public boolean hasSelectedIndex()  {","lastModifiedDate":"2023-04-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"BagDownB3nny"},"content":"     * A Model stub that contains a single opening.","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"BagDownB3nny"},"content":"    private class ModelStubWithOpening extends ModelStub {","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"BagDownB3nny"},"content":"        private final Opening opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"BagDownB3nny"},"content":"        ModelStubWithOpening(Opening opening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"BagDownB3nny"},"content":"            requireNonNull(opening);","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"BagDownB3nny"},"content":"            this.opening \u003d opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"BagDownB3nny"},"content":"        public boolean hasOpening(Opening opening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"BagDownB3nny"},"content":"            requireNonNull(opening);","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"BagDownB3nny"},"content":"            return this.opening.isSameOpening(opening);","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"BagDownB3nny"},"content":"     * A Model stub that always accept the opening being added.","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"BagDownB3nny"},"content":"    private class ModelStubAcceptingOpeningAdded extends ModelStub {","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"BagDownB3nny"},"content":"        final ArrayList\u003cOpening\u003e openingsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"BagDownB3nny"},"content":"        public boolean hasOpening(Opening opening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"BagDownB3nny"},"content":"            requireNonNull(opening);","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"BagDownB3nny"},"content":"            return openingsAdded.stream().anyMatch(opening::isSameOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"BagDownB3nny"},"content":"        public void addOpening(Opening opening) {","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"BagDownB3nny"},"content":"            requireNonNull(opening);","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"BagDownB3nny"},"content":"            openingsAdded.add(opening);","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"BagDownB3nny"},"content":"        public ReadOnlyUltron getUltron() {","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"BagDownB3nny"},"content":"            return new Ultron();","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":91,"-":132}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.getTypicalUltron;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.model.Model.PREDICATE_SHOW_ALL_OPENINGS;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_emptyUltron_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_nonEmptyUltron_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"        Model model \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"        Ultron emptyUltron \u003d new Ultron();","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"        expectedModel.setUltron(emptyUltron);","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"        expectedModel.updateFilteredOpeningList(PREDICATE_SHOW_ALL_OPENINGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":15,"-":20}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":2,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.EditOpeningDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_POSITION_GOOGLE \u003d \"Software Engineer\";","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_POSITION_SHOPEE \u003d \"Backend developer\";","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_COMPANY_GOOGLE \u003d \"Google\";","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_COMPANY_SHOPEE \u003d \"Shopee\";","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_EMAIL_GOOGLE \u003d \"google@gmail.com\";","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_EMAIL_SHOPEE \u003d \"shopee@shopee.com\";","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_STATUS_GOOGLE \u003d \"APPLIED\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_STATUS_SHOPEE \u003d \"INTERVIEWING\";","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_REMARK_GOOGLE \u003d \"Reply expected in early January\";","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_REMARK_SHOPEE \u003d \"Interview is going to include design pattern questions\";","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_DATENAME_INTERVIEW \u003d \"Interview\";","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_DATENAME_OA \u003d \"OA\";","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_DATE_EARLYMAR \u003d \"2023-03-01\";","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String VALID_DATE_LATEFEB \u003d \"2023-02-28\";","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"    public static final ArrayList\u003cString\u003e VALID_KEYDATE_MARCH_INTERVIEW \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"            Arrays.asList(VALID_DATENAME_INTERVIEW, VALID_DATE_EARLYMAR));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"    public static final ArrayList\u003cString\u003e VALID_KEYDATE_FEB_OA \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"            Arrays.asList(VALID_DATENAME_OA, VALID_DATE_LATEFEB));","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String POSITION_DESC_GOOGLE \u003d \" \" + PREFIX_POSITION + VALID_POSITION_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String POSITION_DESC_SHOPEE \u003d \" \" + PREFIX_POSITION + VALID_POSITION_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String COMPANY_DESC_GOOGLE \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String COMPANY_DESC_SHOPEE \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String EMAIL_DESC_GOOGLE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String EMAIL_DESC_SHOPEE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String STATUS_DESC_GOOGLE \u003d \" \" + PREFIX_STATUS + VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String STATUS_DESC_SHOPEE \u003d \" \" + PREFIX_STATUS + VALID_STATUS_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String REMARK_DESC_GOOGLE \u003d \" \" + PREFIX_REMARK + VALID_REMARK_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String REMARK_DESC_SHOPEE \u003d \" \" + PREFIX_REMARK + VALID_REMARK_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String KEYDATE_DESC_OA \u003d \" \" + PREFIX_KEYDATE + VALID_DATENAME_OA + \"@\" + VALID_DATE_LATEFEB;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String KEYDATE_DESC_INTERVIEW \u003d \" \" + PREFIX_KEYDATE + VALID_DATENAME_INTERVIEW + \"@\" + VALID_DATE_EARLYMAR;","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_POSITION_DESC \u003d \" \" + PREFIX_POSITION + \"Software Engineer\u0026\"; // \u0027\u0026\u0027 not allowed in positions","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_COMPANY_DESC_1 \u003d \" \" + PREFIX_COMPANY + \" \"; // whitespaces only not allowed in company","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_COMPANY_DESC_2 \u003d \" \" + PREFIX_COMPANY + \"\"; // blanks not allowed in company","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"shopee!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS; // empty string not allowed for statuses","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_DATE_DESC_1 \u003d \" \" + PREFIX_KEYDATE + \"OA 2023-03-03\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_DATE_DESC_2 \u003d \" \" + PREFIX_KEYDATE + \"OA@2023/03/03\"; // dates must use \u0027-\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_DATE_DESC_3 \u003d \" \" + PREFIX_KEYDATE + \"@2023/03/03\"; // keydate must have non-blank name","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_DATE_DESC_4 \u003d \" \" + PREFIX_KEYDATE + \"OA@2023/99/03\"; // month must be valid","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String INVALID_DATE_DESC_5 \u003d \" \" + PREFIX_KEYDATE + \"OA@2023/03/99\"; // day must be valid","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"    public static final EditCommand.EditOpeningDescriptor DESC_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"    public static final EditCommand.EditOpeningDescriptor DESC_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"        DESC_GOOGLE \u003d new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_GOOGLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"                .withCompany(VALID_COMPANY_GOOGLE).withEmail(VALID_EMAIL_GOOGLE).withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"                .withDates(VALID_KEYDATE_MARCH_INTERVIEW).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"        DESC_SHOPEE \u003d new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_SHOPEE)","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"                .withCompany(VALID_COMPANY_SHOPEE).withEmail(VALID_EMAIL_SHOPEE).withStatus(VALID_STATUS_SHOPEE)","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"                .withDates(VALID_KEYDATE_MARCH_INTERVIEW, VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"            System.out.println(\"Expected result: \" + expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"            System.out.println(\"Ultron result: \" + result.getFeedbackToUser());","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"            System.out.println(\"Expected list: \" + expectedModel.getFilteredOpeningList().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"            System.out.println(\"Ultron list: \" + actualModel.getFilteredOpeningList().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"     * - the status book, filtered opening list and selected opening in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"        Ultron expectedUltron \u003d new Ultron(actualModel.getUltron());","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"        List\u003cOpening\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredOpeningList());","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(expectedUltron, actualModel.getUltron());","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredOpeningList());","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"BagDownB3nny"},"content":"     * Updates {@code model}\u0027s filtered list to show only the opening at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"BagDownB3nny"},"content":"     * {@code model}\u0027s status book.","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"BagDownB3nny"},"content":"    public static void showOpeningAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOpeningList().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"        Opening opening \u003d model.getFilteredOpeningList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"BagDownB3nny"},"content":"        final String[] splitPosition \u003d opening.getPosition().fullPosition.split(\"\\\\s+\");","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"BagDownB3nny"},"content":"        model.updateFilteredOpeningList(new CompanyOrPositionContainsKeywordsPredicate(Arrays.asList(splitPosition[0])));","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(1, model.getFilteredOpeningList().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":84,"-":68}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showOpeningAtIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalIndexesNew.INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalIndexesNew.INDEX_SECOND_OPENING;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.getTypicalUltron;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"    private Model model \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening openingToDelete \u003d model.getFilteredOpeningList().get(INDEX_FIRST_OPENING.getZeroBased());","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_OPENING);","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_OPENING_SUCCESS, openingToDelete);","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        ModelManager expectedModel \u003d new ModelManager(model.getUltron(), new UserPrefs());","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedModel.deleteOpening(openingToDelete);","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOpeningList().size() + 1);","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//    Fails to delete an opening","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        showOpeningAtIndex(model, INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening openingToDelete \u003d model.getFilteredOpeningList().get(INDEX_FIRST_OPENING.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_OPENING_SUCCESS, openingToDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        Model expectedModel \u003d new ModelManager(model.getUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedModel.deleteOpening(openingToDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        showNoOpening(expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"        showOpeningAtIndex(model, INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OPENING;","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUltron().getOpeningList().size());","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"        // different opening -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"    private void showNoOpening(Model model) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"        model.updateFilteredOpeningList(p -\u003e false);","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(model.getFilteredOpeningList().isEmpty());","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":62,"-":50}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalIndexesNew.INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalIndexesNew.INDEX_SECOND_OPENING;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.getTypicalUltron;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.EditOpeningDescriptorBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.OpeningBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand.EditOpeningDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    private Model model \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening editedOpening \u003d new OpeningBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder(editedOpening).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_OPENING, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_OPENING_SUCCESS, editedOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//        Model expectedModel \u003d new ModelManager(new Ultron(model.getUltron()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedModel.setOpening(model.getFilteredOpeningList().get(0), editedOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        Index indexLastOpening \u003d Index.fromOneBased(model.getFilteredOpeningList().size());","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening lastOpening \u003d model.getFilteredOpeningList().get(indexLastOpening.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        OpeningBuilder openingInList \u003d new OpeningBuilder(lastOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening editedOpening \u003d openingInList.withPosition(VALID_POSITION_SHOPEE).withCompany(VALID_COMPANY_SHOPEE)","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//                .withDates(VALID_KEYDATE_MARCH_INTERVIEW).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_SHOPEE)","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//                .withCompany(VALID_COMPANY_SHOPEE).withDates(VALID_KEYDATE_MARCH_INTERVIEW).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastOpening, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_OPENING_SUCCESS, editedOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        Model expectedModel \u003d new ModelManager(new Ultron(model.getUltron()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedModel.setOpening(lastOpening, editedOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_OPENING, new EditOpeningDescriptor());","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"        Opening editedOpening \u003d model.getFilteredOpeningList().get(INDEX_FIRST_OPENING.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_OPENING_SUCCESS, editedOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        Model expectedModel \u003d new ModelManager(new Ultron(model.getUltron()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        showOpeningAtIndex(model, INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening openingInFilteredList \u003d model.getFilteredOpeningList().get(INDEX_FIRST_OPENING.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening editedOpening \u003d new OpeningBuilder(openingInFilteredList).withPosition(VALID_POSITION_SHOPEE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_OPENING,","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//                new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_SHOPEE).build());","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_OPENING_SUCCESS, editedOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        Model expectedModel \u003d new ModelManager(new Ultron(model.getUltron()), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedModel.setOpening(model.getFilteredOpeningList().get(0), editedOpening);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_duplicateOpeningUnfilteredList_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"        Opening firstOpening \u003d model.getFilteredOpeningList().get(INDEX_FIRST_OPENING.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder(firstOpening).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_OPENING, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_duplicateOpeningFilteredList_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"        showOpeningAtIndex(model, INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"        // edit opening in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"        Opening openingInList \u003d model.getUltron().getOpeningList().get(INDEX_SECOND_OPENING.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_OPENING,","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"                new EditOpeningDescriptorBuilder(openingInList).build());","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_invalidOpeningIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOpeningList().size() + 1);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_SHOPEE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_invalidOpeningIndexFilteredList_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"        showOpeningAtIndex(model, INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"BagDownB3nny"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OPENING;","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUltron().getOpeningList().size());","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"BagDownB3nny"},"content":"                new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_SHOPEE).build());","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"BagDownB3nny"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_OPENING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_OPENING, DESC_GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"BagDownB3nny"},"content":"        EditOpeningDescriptor copyDescriptor \u003d new EditOpeningDescriptor(DESC_GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"BagDownB3nny"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_OPENING, copyDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_OPENING, DESC_GOOGLE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_OPENING, DESC_SHOPEE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":99,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/EditOpeningDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_SHOPEE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_SHOPEE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_SHOPEE;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_SHOPEE;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_MARCH_INTERVIEW;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SHOPEE;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.EditOpeningDescriptorBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand.EditOpeningDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"public class EditOpeningDescriptorTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"        EditOpeningDescriptor descriptorWithSameValues \u003d new EditOpeningDescriptor(DESC_GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(DESC_GOOGLE.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(DESC_GOOGLE.equals(DESC_GOOGLE));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(DESC_GOOGLE.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(DESC_GOOGLE.equals(5));","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(DESC_GOOGLE.equals(DESC_SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"        EditOpeningDescriptor editedGoogle \u003d new EditOpeningDescriptorBuilder(DESC_GOOGLE).withPosition(VALID_POSITION_SHOPEE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(DESC_GOOGLE.equals(editedGoogle));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"        editedGoogle \u003d new EditOpeningDescriptorBuilder(DESC_GOOGLE).withCompany(VALID_COMPANY_SHOPEE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(DESC_GOOGLE.equals(editedGoogle));","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        editedGoogle \u003d new EditOpeningDescriptorBuilder(DESC_GOOGLE).withEmail(VALID_EMAIL_SHOPEE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(DESC_GOOGLE.equals(editedGoogle));","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        editedGoogle \u003d new EditOpeningDescriptorBuilder(DESC_GOOGLE).withStatus(VALID_STATUS_SHOPEE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"        assertFalse(DESC_GOOGLE.equals(editedGoogle));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        editedGoogle \u003d new EditOpeningDescriptorBuilder(DESC_GOOGLE).withDates(VALID_KEYDATE_MARCH_INTERVIEW).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(DESC_GOOGLE.equals(editedGoogle));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":5,"-":17}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.GRAB;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.META;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.AMAZON;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.getTypicalUltron;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_OPENING_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.FindCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    private Model model \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"        CompanyOrPositionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"                new CompanyOrPositionContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"        CompanyOrPositionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"                new CompanyOrPositionContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"        // different opening -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_zeroKeywords_noOpeningFound() {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"        String expectedMessage \u003d String.format(MESSAGE_OPENING_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"        CompanyOrPositionContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"        expectedModel.updateFilteredOpeningList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredOpeningList());","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"    public void execute_multipleKeywords_multipleOpeningsFound() {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"        String expectedMessage \u003d String.format(MESSAGE_OPENING_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"        CompanyOrPositionContainsKeywordsPredicate predicate \u003d preparePredicate(\"gRaB amAzOn meta\");","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        expectedModel.updateFilteredOpeningList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(new HashSet(Arrays.asList(GRAB, META, AMAZON)), new HashSet(model.getFilteredOpeningList()));","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"     * Parses {@code userInput} into a {@code CompanyOrPositionContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"    private CompanyOrPositionContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"        return new CompanyOrPositionContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":31,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":5,"-":17}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showOpeningAtIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalIndexesNew.INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalOpenings.getTypicalUltron;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.ListCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"        model \u003d new ModelManager(getTypicalUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"        expectedModel \u003d new ModelManager(model.getUltron(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"        showOpeningAtIndex(model, INDEX_FIRST_OPENING);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":10,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_GOOGLE;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_GOOGLE;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC_1;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC_2;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_1;","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_2;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_3;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_4;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_5;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_GOOGLE;","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_GOOGLE;","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_GOOGLE;","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.KEYDATE_DESC_OA;","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.KEYDATE_DESC_INTERVIEW;","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_MARCH_INTERVIEW;","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_FEB_OA;","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalOpenings.GOOGLE;","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalOpenings.SHOPEE;","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.OpeningBuilder;","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.parser.AddCommandParser;","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Date;","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening expectedOpening \u003d new OpeningBuilder(SHOPEE).withDates(VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        // whitespace only preamble","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE + KEYDATE_DESC_OA, new AddCommand(expectedOpening));","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//        // multiple positions - last position accepted","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, POSITION_DESC_GOOGLE + POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE + KEYDATE_DESC_OA, new AddCommand(expectedOpening));","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        // multiple companys - last company accepted","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_GOOGLE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE + KEYDATE_DESC_OA, new AddCommand(expectedOpening));","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        // multiple emails - last email accepted","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_GOOGLE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE + KEYDATE_DESC_OA, new AddCommand(expectedOpening));","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//        // multiple statuses - last status accepted","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-04-02"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE + KEYDATE_DESC_OA, new AddCommand(expectedOpening));","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        // multiple dates - all accepted","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening expectedOpeningMultipleDates \u003d new OpeningBuilder(SHOPEE).withDates(VALID_KEYDATE_FEB_OA, VALID_KEYDATE_MARCH_INTERVIEW)","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//                .build();","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE + STATUS_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//                + REMARK_DESC_SHOPEE + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA, new AddCommand(expectedOpeningMultipleDates));","lastModifiedDate":"2023-04-02"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-04-02"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        // zero dates","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//        Opening expectedOpening \u003d new OpeningBuilder(GOOGLE).withDates().build();","lastModifiedDate":"2023-04-02"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, POSITION_DESC_GOOGLE + COMPANY_DESC_GOOGLE + EMAIL_DESC_GOOGLE","lastModifiedDate":"2023-04-02"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_GOOGLE + REMARK_DESC_GOOGLE,","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//                new AddCommand(expectedOpening));","lastModifiedDate":"2023-04-02"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-04-02"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-04-02"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//        // missing position prefix","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//        String positionMissingExpectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-02"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//                \"Position is missing\\nExample: \" + PREFIX_POSITION + \"Backend Developer \");","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, VALID_POSITION_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE,","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//                positionMissingExpectedMessage);","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//        // missing company prefix","lastModifiedDate":"2023-04-02"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//        String companyMissingExpectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-02"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//                \"Company is missing\\nExample: \" + PREFIX_COMPANY + \"Shopee \");","lastModifiedDate":"2023-04-02"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, POSITION_DESC_SHOPEE + VALID_COMPANY_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE,","lastModifiedDate":"2023-04-02"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//                companyMissingExpectedMessage);","lastModifiedDate":"2023-04-02"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//        // missing email prefix","lastModifiedDate":"2023-04-02"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//        String emailMissingExpectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-02"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//                \"Email is missing\\nExample: \" + PREFIX_EMAIL + \"hr@shopee.com \");","lastModifiedDate":"2023-04-02"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + VALID_EMAIL_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE,","lastModifiedDate":"2023-04-02"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//                emailMissingExpectedMessage);","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"//        // missing status prefix","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"//        String statusMissingExpectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-02"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"//                \"Status is missing\\nExample: \" + PREFIX_STATUS + \"APPLIED \");","lastModifiedDate":"2023-04-02"},{"lineNumber":124,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"BagDownB3nny"},"content":"//                + VALID_STATUS_SHOPEE + VALID_REMARK_SHOPEE,","lastModifiedDate":"2023-04-02"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"//                statusMissingExpectedMessage);","lastModifiedDate":"2023-04-02"},{"lineNumber":127,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":128,"author":{"gitId":"BagDownB3nny"},"content":"//        // all prefixes missing","lastModifiedDate":"2023-04-02"},{"lineNumber":129,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-02"},{"lineNumber":130,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, VALID_POSITION_SHOPEE + VALID_COMPANY_SHOPEE + VALID_EMAIL_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"//                + VALID_STATUS_SHOPEE + VALID_REMARK_SHOPEE,","lastModifiedDate":"2023-04-02"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"//                expectedMessage);","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-04-02"},{"lineNumber":134,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-04-02"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"////    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":136,"author":{"gitId":"BagDownB3nny"},"content":"////    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-04-02"},{"lineNumber":137,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid position","lastModifiedDate":"2023-04-02"},{"lineNumber":138,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, INVALID_POSITION_DESC + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":139,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":140,"author":{"gitId":"BagDownB3nny"},"content":"////                + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA, Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":141,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":142,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid company 1","lastModifiedDate":"2023-04-02"},{"lineNumber":143,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + INVALID_COMPANY_DESC_1 + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":144,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"////                + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA, Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":146,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":147,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid company 2","lastModifiedDate":"2023-04-02"},{"lineNumber":148,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + INVALID_COMPANY_DESC_2 + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":149,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":150,"author":{"gitId":"BagDownB3nny"},"content":"////                + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA, Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":151,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":152,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid email","lastModifiedDate":"2023-04-02"},{"lineNumber":153,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + INVALID_EMAIL_DESC","lastModifiedDate":"2023-04-02"},{"lineNumber":154,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":155,"author":{"gitId":"BagDownB3nny"},"content":"////                + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":156,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":157,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid status","lastModifiedDate":"2023-04-02"},{"lineNumber":158,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":159,"author":{"gitId":"BagDownB3nny"},"content":"////                + INVALID_STATUS_DESC + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":160,"author":{"gitId":"BagDownB3nny"},"content":"////                + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":161,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid date 1","lastModifiedDate":"2023-04-02"},{"lineNumber":163,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":164,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"////                + INVALID_DATE_DESC_1, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":167,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid date 2","lastModifiedDate":"2023-04-02"},{"lineNumber":168,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":169,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":170,"author":{"gitId":"BagDownB3nny"},"content":"////                + INVALID_DATE_DESC_2, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid date 3","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":174,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":175,"author":{"gitId":"BagDownB3nny"},"content":"////                + INVALID_DATE_DESC_3, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":177,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid date 4","lastModifiedDate":"2023-04-02"},{"lineNumber":178,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":179,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":180,"author":{"gitId":"BagDownB3nny"},"content":"////                + INVALID_DATE_DESC_4, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":181,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":182,"author":{"gitId":"BagDownB3nny"},"content":"////        // invalid date 5","lastModifiedDate":"2023-04-02"},{"lineNumber":183,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":184,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":185,"author":{"gitId":"BagDownB3nny"},"content":"////                + INVALID_DATE_DESC_5, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":186,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":187,"author":{"gitId":"BagDownB3nny"},"content":"////        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-04-02"},{"lineNumber":188,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, INVALID_POSITION_DESC + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":189,"author":{"gitId":"BagDownB3nny"},"content":"////                + INVALID_STATUS_DESC + REMARK_DESC_SHOPEE,","lastModifiedDate":"2023-04-02"},{"lineNumber":190,"author":{"gitId":"BagDownB3nny"},"content":"////                Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":191,"author":{"gitId":"BagDownB3nny"},"content":"////","lastModifiedDate":"2023-04-02"},{"lineNumber":192,"author":{"gitId":"BagDownB3nny"},"content":"////        // non-empty preamble","lastModifiedDate":"2023-04-02"},{"lineNumber":193,"author":{"gitId":"BagDownB3nny"},"content":"////        assertParseFailure(parser, PREAMBLE_NON_EMPTY + POSITION_DESC_SHOPEE + COMPANY_DESC_SHOPEE + EMAIL_DESC_SHOPEE","lastModifiedDate":"2023-04-02"},{"lineNumber":194,"author":{"gitId":"BagDownB3nny"},"content":"////                + STATUS_DESC_SHOPEE + REMARK_DESC_SHOPEE + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA,","lastModifiedDate":"2023-04-02"},{"lineNumber":195,"author":{"gitId":"BagDownB3nny"},"content":"////                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-02"},{"lineNumber":196,"author":{"gitId":"BagDownB3nny"},"content":"////    }","lastModifiedDate":"2023-04-02"},{"lineNumber":197,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"BagDownB3nny":197}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.EditCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.FindCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.ListCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//public class AddressBookParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"//        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"//        HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":100,"KevinEyo1":2}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.Prefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"BagDownB3nny":4,"-":150}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":4,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalIndexesNew.INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.DeleteCommandParser;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_OPENING));","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"BagDownB3nny":5,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC_1;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC_2;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_1;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_2;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_3;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_4;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC_5;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_FEB_OA;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_MARCH_INTERVIEW;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.KEYDATE_DESC_INTERVIEW;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.KEYDATE_DESC_OA;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalIndexesNew.INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalIndexesNew.INDEX_SECOND_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalIndexesNew.INDEX_THIRD_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.EditOpeningDescriptorBuilder;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.EditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.EditCommand.EditOpeningDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.parser.EditCommandParser;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.opening.Date;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//public class EditCommandParserTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String DATE_EMPTY \u003d \" \" + PREFIX_KEYDATE;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        // no index specified","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, VALID_POSITION_GOOGLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//        // no field specified","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        // no index and no field specified","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//        // negative index","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"-5\" + POSITION_DESC_GOOGLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        // zero index","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"0\" + POSITION_DESC_GOOGLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_POSITION_DESC, Position.MESSAGE_CONSTRAINTS); // invalid position","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_COMPANY_DESC_1, Company.MESSAGE_CONSTRAINTS); // invalid company","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_COMPANY_DESC_2, Company.MESSAGE_CONSTRAINTS); // invalid company","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS); // invalid status","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC_1, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC_2, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC_3, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC_4, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC_5, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid company followed by valid email","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_COMPANY_DESC_1 + EMAIL_DESC_GOOGLE, Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//        // valid company followed by invalid company. The test case for invalid company followed by valid company","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + COMPANY_DESC_SHOPEE + INVALID_COMPANY_DESC_2, Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//        // while parsing {@code PREFIX_DATE} alone will reset the dates of the {@code Opening} being edited,","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//        // parsing it together with a valid date results in error","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA + DATE_EMPTY, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + KEYDATE_DESC_INTERVIEW + DATE_EMPTY + KEYDATE_DESC_OA, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + DATE_EMPTY + KEYDATE_DESC_INTERVIEW + KEYDATE_DESC_OA, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_POSITION_DESC + INVALID_EMAIL_DESC + VALID_STATUS_GOOGLE + VALID_COMPANY_GOOGLE,","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//                Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"//        Index targetIndex \u003d INDEX_SECOND_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"//        String userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_SHOPEE + KEYDATE_DESC_INTERVIEW","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"//                + EMAIL_DESC_GOOGLE + STATUS_DESC_GOOGLE + POSITION_DESC_GOOGLE + KEYDATE_DESC_OA;","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_GOOGLE)","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"BagDownB3nny"},"content":"//                .withCompany(VALID_COMPANY_SHOPEE).withEmail(VALID_EMAIL_GOOGLE).withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"//                .withDates(VALID_KEYDATE_MARCH_INTERVIEW, VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"BagDownB3nny"},"content":"//        Index targetIndex \u003d INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"//        String userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_SHOPEE + EMAIL_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withCompany(VALID_COMPANY_SHOPEE)","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"BagDownB3nny"},"content":"//                .withEmail(VALID_EMAIL_GOOGLE).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"BagDownB3nny"},"content":"//        // position","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"BagDownB3nny"},"content":"//        Index targetIndex \u003d INDEX_THIRD_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"BagDownB3nny"},"content":"//        String userInput \u003d targetIndex.getOneBased() + POSITION_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withPosition(VALID_POSITION_GOOGLE).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"BagDownB3nny"},"content":"//        // company","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"BagDownB3nny"},"content":"//        userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor \u003d new EditOpeningDescriptorBuilder().withCompany(VALID_COMPANY_GOOGLE).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"BagDownB3nny"},"content":"//        // email","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"BagDownB3nny"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor \u003d new EditOpeningDescriptorBuilder().withEmail(VALID_EMAIL_GOOGLE).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"//        // status","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"BagDownB3nny"},"content":"//        userInput \u003d targetIndex.getOneBased() + STATUS_DESC_GOOGLE;","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor \u003d new EditOpeningDescriptorBuilder().withStatus(VALID_STATUS_GOOGLE).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"BagDownB3nny"},"content":"//        // dates","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"BagDownB3nny"},"content":"//        userInput \u003d targetIndex.getOneBased() + KEYDATE_DESC_OA;","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor \u003d new EditOpeningDescriptorBuilder().withDates(VALID_KEYDATE_MARCH_INTERVIEW).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"BagDownB3nny"},"content":"//        Index targetIndex \u003d INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"BagDownB3nny"},"content":"//        String userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_GOOGLE + STATUS_DESC_GOOGLE + EMAIL_DESC_GOOGLE","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"BagDownB3nny"},"content":"//                + KEYDATE_DESC_INTERVIEW + COMPANY_DESC_GOOGLE + STATUS_DESC_GOOGLE + EMAIL_DESC_GOOGLE + KEYDATE_DESC_OA","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"BagDownB3nny"},"content":"//                + COMPANY_DESC_SHOPEE + STATUS_DESC_SHOPEE + EMAIL_DESC_SHOPEE + KEYDATE_DESC_INTERVIEW;","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withCompany(VALID_COMPANY_SHOPEE)","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"BagDownB3nny"},"content":"//                .withEmail(VALID_EMAIL_SHOPEE).withStatus(VALID_STATUS_SHOPEE).withDates(VALID_KEYDATE_FEB_OA, VALID_KEYDATE_MARCH_INTERVIEW)","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"BagDownB3nny"},"content":"//                .build();","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"BagDownB3nny"},"content":"//        // no other valid values specified","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"BagDownB3nny"},"content":"//        Index targetIndex \u003d INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"BagDownB3nny"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_COMPANY_DESC_1 + COMPANY_DESC_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withCompany(VALID_COMPANY_SHOPEE).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"BagDownB3nny"},"content":"//        // other valid values specified","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"BagDownB3nny"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_SHOPEE + INVALID_COMPANY_DESC_2 + STATUS_DESC_SHOPEE","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"BagDownB3nny"},"content":"//                + COMPANY_DESC_SHOPEE;","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor \u003d new EditOpeningDescriptorBuilder().withCompany(VALID_COMPANY_SHOPEE).withEmail(VALID_EMAIL_SHOPEE)","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"BagDownB3nny"},"content":"//                .withStatus(VALID_STATUS_SHOPEE).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parse_resetDates_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"BagDownB3nny"},"content":"//        Index targetIndex \u003d INDEX_THIRD_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"BagDownB3nny"},"content":"//        String userInput \u003d targetIndex.getOneBased() + DATE_EMPTY;","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"BagDownB3nny"},"content":"//        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder().withDates().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"BagDownB3nny"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"BagDownB3nny"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"BagDownB3nny":221}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.FindCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.FindCommandParser;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"                new FindCommand(new CompanyOrPositionContainsKeywordsPredicate(Arrays.asList(\"Google\", \"Shopee\")));","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"        assertParseSuccess(parser, \"Google Shopee\", expectedFindCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"        assertParseSuccess(parser, \" \\n Google \\n \\t Shopee  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"BagDownB3nny":7,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//public class ParserUtilTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        // No whitespaces","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        // Leading and trailing whitespaces","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"BagDownB3nny"},"content":"//        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"BagDownB3nny"},"content":"//        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"BagDownB3nny"},"content":"//        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"BagDownB3nny"},"content":"//        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"BagDownB3nny"},"content":"//        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"BagDownB3nny"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"BagDownB3nny"},"content":"//        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"BagDownB3nny"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"BagDownB3nny"},"content":"//    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"BagDownB3nny"},"content":"//        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"BagDownB3nny"},"content":"//        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":197}},{"path":"src/test/java/seedu/address/logic/parser/UltronParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.testutil.TypicalIndexesNew.INDEX_FIRST_OPENING;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.EditOpeningDescriptorBuilder;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.OpeningBuilder;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.address.testutil.OpeningUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.FindCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.ListCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand.EditOpeningDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.UltronParser;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.CompanyOrPositionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"public class UltronParserTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"    private final UltronParser parser \u003d new UltronParser();","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"        Opening opening \u003d new OpeningBuilder().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(OpeningUtil.getAddCommand(opening));","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(new AddCommand(opening), command);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_OPENING.getOneBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_OPENING), command);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"        Opening opening \u003d new OpeningBuilder().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"        EditOpeningDescriptor descriptor \u003d new EditOpeningDescriptorBuilder(opening).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"                + INDEX_FIRST_OPENING.getOneBased() + \" \" + OpeningUtil.getEditOpeningDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_OPENING, descriptor), command);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"        assertEquals(new FindCommand(new CompanyOrPositionContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"BagDownB3nny":102}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//public class AddressBookTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        // Two persons with the same identity fields","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//                .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//                .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//            this.persons.setAll(persons);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//            return persons;","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//public class ModelManagerTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//        // different addressBook -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"//        // different filteredList -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"//        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"//        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"//        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"BagDownB3nny"},"content":"//        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"BagDownB3nny"},"content":"//        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"//        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":134}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//public class UserPrefsTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":23}},{"path":"src/test/java/seedu/address/model/opening/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class CompanyTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        String invalidCompany \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public void isValidCompany() {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        // null company","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        // invalid company","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Company.isValidCompany(\" \")); // spaces only","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Company.isValidCompany(\"\u0026\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        // valid company","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Company.isValidCompany(\"shopee\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Company.isValidCompany(\"123\")); // numbers only","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Company.isValidCompany(\"21st century fox\")); // alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Company.isValidCompany(\"Google\")); // with capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"//      assertTrue(Company.isValidCompany(\"a\u0026w\")); // with non-alphanumeric characters","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"//      assertTrue(Company.isValidCompany(\"7-eleven\")); // with non-alphanumeric characters","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Company.isValidCompany(\"international consolidated airlines group sa\")); // long companies","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":43}},{"path":"src/test/java/seedu/address/model/opening/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class EmailTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public void isValidEmail() {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        // null email","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        // blank email","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        // missing parts","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        // invalid parts","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"        // valid email","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":71}},{"path":"src/test/java/seedu/address/model/opening/KeydateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class KeydateTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Keydate(null, \"2023-01-01\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Keydate(\"OA\", null));","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        String invalidKey \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Keydate(\"OA\", invalidDate));","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Keydate(invalidKey, \"2023-01-01\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        // null keydate","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Keydate.isValidKeydate(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"//        // invalid keydate","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"\")); // empty string","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\" \")); // spaces only","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"@2023-01-01\")); // missing key","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\" @2023-01-01\")); // missing key","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"//","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"OA@\")); // missing date","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"OA@ \")); // missing date","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"OA2023-01-01\")); // missing @","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"OA 2023-01-01\")); // @ replaced by whitespace","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"//","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"//        // invalid key","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"\")); //","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\" \")); //","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\" \")); //","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\" \")); //","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\" \")); //","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"//","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"//        // invalid date","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"//","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"\u0026\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"123\")); // numbers only","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"Engineer 10\")); // with numbers","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Keydate.isValidKeydate(\"Data-analyst 10\")); // with non-alphanumeric characters and numbers","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"//","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"//        // valid keydate","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Keydate.isValidKeydate(\"analyst\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Keydate.isValidKeydate(\"Intern\")); // with capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Keydate.isValidKeydate(\"data-analyst\")); // with non-alphanumeric characters, but no numbers","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Keydate.isValidKeydate(\"analyst \u0026 engineer\")); // non-alphanumeric characters, no numbers","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Keydate.isValidKeydate(\"software engineer for integrated processing\")); // long keydates","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":64}},{"path":"src/test/java/seedu/address/model/opening/OpeningTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_FEB_OA;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.TypicalOpenings.GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.TypicalOpenings.SHOPEE;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.testutil.OpeningBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"public class OpeningTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        Opening opening \u003d new OpeningBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e opening.getKeydates().remove(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    public void isSameOpening() {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(SHOPEE.isSameOpening(SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.isSameOpening(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        // same company and position, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        Opening editedShopee \u003d new OpeningBuilder(SHOPEE).withEmail(VALID_EMAIL_GOOGLE).withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"                .withRemark(VALID_REMARK_GOOGLE).withKeydates(VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(SHOPEE.isSameOpening(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        // same company and different position, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withPosition(VALID_POSITION_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.isSameOpening(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"        // same position and different company, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withCompany(VALID_COMPANY_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.isSameOpening(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"        // different company and position, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withCompany(VALID_COMPANY_GOOGLE)","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"                .withPosition(VALID_POSITION_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.isSameOpening(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"        // company differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        Opening editedGoogle \u003d new OpeningBuilder(GOOGLE).withCompany(VALID_COMPANY_GOOGLE.toLowerCase()).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(GOOGLE.isSameOpening(editedGoogle));","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"        // company differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        editedGoogle \u003d new OpeningBuilder(GOOGLE).withPosition(VALID_POSITION_GOOGLE.toLowerCase()).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(GOOGLE.isSameOpening(editedGoogle));","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"        // company has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"        String companyWithTrailingSpaces \u003d VALID_COMPANY_GOOGLE + \" \";","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"        editedGoogle \u003d new OpeningBuilder(GOOGLE).withCompany(companyWithTrailingSpaces).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(GOOGLE.isSameOpening(editedGoogle));","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"        // position has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"        String positionWithTrailingSpaces \u003d VALID_POSITION_GOOGLE + \" \";","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"        editedGoogle \u003d new OpeningBuilder(GOOGLE).withPosition(positionWithTrailingSpaces).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"        assertTrue(GOOGLE.isSameOpening(editedGoogle));","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"        Opening shopeeCopy \u003d new OpeningBuilder(SHOPEE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(SHOPEE.equals(shopeeCopy));","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(SHOPEE.equals(SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(5));","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"        // different opening -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(GOOGLE));","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"        Opening editedShopee \u003d new OpeningBuilder(SHOPEE).withCompany(VALID_COMPANY_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withPosition(VALID_POSITION_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withEmail(VALID_EMAIL_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withStatus(VALID_STATUS_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"KevinEyo1"},"content":"        // different keydates -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withKeydates(VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"KevinEyo1"},"content":"        // different remarks -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"KevinEyo1"},"content":"        editedShopee \u003d new OpeningBuilder(SHOPEE).withRemark(VALID_REMARK_GOOGLE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(SHOPEE.equals(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"BagDownB3nny":8,"KevinEyo1":107}},{"path":"src/test/java/seedu/address/model/opening/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class PositionTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Position(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_invalidPosition_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        String invalidPosition \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Position(invalidPosition));","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public void isValidPosition() {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        // null position","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Position.isValidPosition(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        // invalid position","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Position.isValidPosition(\"\")); // empty string","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Position.isValidPosition(\" \")); // spaces only","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Position.isValidPosition(\"\u0026\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"//        assertFalse(Position.isValidPosition(\"123\")); // numbers only","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        // valid position","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Position.isValidPosition(\"Engineer 10\")); // with numbers","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Position.isValidPosition(\"Data-analyst 10\")); // with non-alphanumeric characters and numbers","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Position.isValidPosition(\"analyst\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Position.isValidPosition(\"Intern\")); // with capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Position.isValidPosition(\"data-analyst\")); // with non-alphanumeric characters, but no numbers","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Position.isValidPosition(\"analyst \u0026 engineer\")); // non-alphanumeric characters, no numbers","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"//        assertTrue(Position.isValidPosition(\"software engineer for integrated processing\")); // long positions","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":45}},{"path":"src/test/java/seedu/address/model/opening/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class RemarkTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_invalidRemarkName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        String invalidRemarkName \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemarkName));","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public void isValidRemark() {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        // null tag name","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        // invalid remark","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Remark.isValidRemark(\"\")); // empty string","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Remark.isValidRemark(\" \")); // spaces only","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        // valid remark","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Remark.isValidRemark(\"favourite\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Remark.isValidRemark(\"Best\")); // with capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Remark.isValidRemark(\"data-analyst ideal\")); // with non-alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Remark.isValidRemark(\"software engineer for integrated processing\")); // long remarks","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":40}},{"path":"src/test/java/seedu/address/model/opening/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class StatusTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public void isValidStatus() {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        // null status","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        // invalid status","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\"\u0026\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\"123\")); // numbers only","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\"Did 10\")); // with numbers","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\"finish\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\"Finished\")); // with capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(Status.isValidStatus(\"Applied Interviewing\")); // multiple valid","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        // valid status","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Status.isValidStatus(\"applied\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Status.isValidStatus(\"Interviewing\")); // with capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(Status.isValidStatus(\"ACCEPTED\")); // all capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":44}},{"path":"src/test/java/seedu/address/model/opening/UniqueOpeningListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package seedu.address.model.opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_FEB_OA;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.TypicalOpenings.GOOGLE;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.address.testutil.TypicalOpenings.SHOPEE;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"import seedu.address.testutil.OpeningBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.UniqueOpeningList;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.exceptions.DuplicateOpeningException;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.exceptions.OpeningNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"public class UniqueOpeningListTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    private final UniqueOpeningList uniqueOpeningList \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    public void contains_nullOpening_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOpeningList.contains(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    public void contains_openingNotInList_returnsFalse() {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        assertFalse(uniqueOpeningList.contains(SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"    public void contains_openingInList_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(uniqueOpeningList.contains(SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"    public void contains_openingWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        Opening editedShopee \u003d new OpeningBuilder(SHOPEE).withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"                .withKeydates(VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"        assertTrue(uniqueOpeningList.contains(editedShopee));","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"    public void add_nullOpening_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOpeningList.add(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"    public void add_duplicateOpening_throwsDuplicateOpeningException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(DuplicateOpeningException.class, () -\u003e uniqueOpeningList.add(SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpening_nullTargetOpening_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOpeningList.setOpening(null, SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpening_nullEditedOpening_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOpeningList.setOpening(SHOPEE, null));","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpening_targetOpeningNotInList_throwsOpeningNotFoundException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(OpeningNotFoundException.class, () -\u003e uniqueOpeningList.setOpening(SHOPEE, SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpening_editedOpeningIsSameOpening_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.setOpening(SHOPEE, SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"        UniqueOpeningList expectedUniqueOpeningList \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"        expectedUniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(expectedUniqueOpeningList, uniqueOpeningList);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpening_editedOpeningHasSameIdentity_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"        Opening editedShopee \u003d new OpeningBuilder(SHOPEE).withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"                .withKeydates(VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.setOpening(SHOPEE, editedShopee);","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"        UniqueOpeningList expectedUniqueOpeningList \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"        expectedUniqueOpeningList.add(editedShopee);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(expectedUniqueOpeningList, uniqueOpeningList);","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpening_editedOpeningHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.setOpening(SHOPEE, GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"        UniqueOpeningList expectedUniqueOpeningList \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"        expectedUniqueOpeningList.add(GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(expectedUniqueOpeningList, uniqueOpeningList);","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpening_editedOpeningHasNonUniqueIdentity_throwsDuplicateOpeningException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(DuplicateOpeningException.class, () -\u003e uniqueOpeningList.setOpening(SHOPEE, GOOGLE));","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"KevinEyo1"},"content":"    public void remove_nullOpening_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOpeningList.remove(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"KevinEyo1"},"content":"    public void remove_openingDoesNotExist_throwsOpeningNotFoundException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(OpeningNotFoundException.class, () -\u003e uniqueOpeningList.remove(SHOPEE));","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"KevinEyo1"},"content":"    public void remove_existingOpening_removesOpening() {","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.remove(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"KevinEyo1"},"content":"        UniqueOpeningList expectedUniqueOpeningList \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(expectedUniqueOpeningList, uniqueOpeningList);","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpenings_nullUniqueOpeningList_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOpeningList.setOpenings((UniqueOpeningList) null));","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpenings_uniqueOpeningList_replacesOwnListWithProvidedUniqueOpeningList() {","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"KevinEyo1"},"content":"        UniqueOpeningList expectedUniqueOpeningList \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"KevinEyo1"},"content":"        expectedUniqueOpeningList.add(GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.setOpenings(expectedUniqueOpeningList);","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(expectedUniqueOpeningList, uniqueOpeningList);","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpenings_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOpeningList.setOpenings((List\u003cOpening\u003e) null));","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpenings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.add(SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cOpening\u003e openingList \u003d Collections.singletonList(GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"KevinEyo1"},"content":"        uniqueOpeningList.setOpenings(openingList);","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"KevinEyo1"},"content":"        UniqueOpeningList expectedUniqueOpeningList \u003d new UniqueOpeningList();","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"KevinEyo1"},"content":"        expectedUniqueOpeningList.add(GOOGLE);","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(expectedUniqueOpeningList, uniqueOpeningList);","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"KevinEyo1"},"content":"    public void setOpenings_listWithDuplicateOpenings_throwsDuplicateOpeningException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cOpening\u003e listWithDuplicateOpenings \u003d Arrays.asList(SHOPEE, SHOPEE);","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(DuplicateOpeningException.class, () -\u003e uniqueOpeningList.setOpenings(listWithDuplicateOpenings));","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"KevinEyo1"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"KevinEyo1"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"KevinEyo1"},"content":"                -\u003e uniqueOpeningList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"KevinEyo1":172}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//public class AddressTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    public void isValidAddress() {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        // null address","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid addresses","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        // valid addresses","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":36}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//public class EmailTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    public void isValidEmail() {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        // null email","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        // blank email","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        // missing parts","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid parts","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        // valid email","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":68}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"//        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"//        new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        // One keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"//        NameContainsKeywordsPredicate predicate","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"//   \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        // Multiple keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        // Only one matching keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        // Zero keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//        // Non-matching keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":73,"KevinEyo1":4}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//public class NameTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    public void isValidName() {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        // null name","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid name","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        // valid name","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//public class PersonTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":92}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//public class PhoneTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    public void isValidPhone() {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//        // null phone number","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        // invalid phone numbers","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        // valid phone numbers","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//public class UniquePersonListTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//                .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//                .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"//    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.remove(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"BagDownB3nny"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"BagDownB3nny"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"BagDownB3nny"},"content":"//        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"BagDownB3nny"},"content":"//        uniquePersonList.setPersons(personList);","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"BagDownB3nny"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"BagDownB3nny"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"BagDownB3nny"},"content":"//        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"BagDownB3nny"},"content":"//    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"BagDownB3nny"},"content":"//            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":170}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.model.tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//public class TagTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//        String invalidTagName \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    public void isValidTagName() {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//        // null tag name","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"//                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"//                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"//                VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"//                INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//            VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":111,"KevinEyo1":8}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    @TempDir","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//                : null;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        // Save in new file and read back","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.util.JsonUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//public class JsonUserPrefsStorageTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    @TempDir","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//                : null;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        return userPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BagDownB3nny"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"BagDownB3nny"},"content":"//        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"BagDownB3nny"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"BagDownB3nny"},"content":"//        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":124}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.core.GuiSettings;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.storage.StorageManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//public class StorageManagerTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    @TempDir","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    private StorageManager storageManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        return testFolder.resolve(fileName);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    public void prefsReadSave() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//        /*","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//         */","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        storageManager.saveUserPrefs(original);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(original, retrieved);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        /*","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//         */","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    public void getAddressBookFilePath() {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":70}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"///**","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"// * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"// * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"// *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"// */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//public class AddressBookBuilder {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//    private AddressBook addressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//    public AddressBookBuilder() {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//        addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//        this.addressBook \u003d addressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        addressBook.addPerson(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//    public AddressBook build() {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//        return addressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":34}},{"path":"src/test/java/seedu/address/testutil/EditOpeningDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand.EditOpeningDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":" * A utility class to help with building EditOpeningDescriptor objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"public class EditOpeningDescriptorBuilder {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"    private EditOpeningDescriptor descriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder() {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor \u003d new EditOpeningDescriptor();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder(EditOpeningDescriptor descriptor) {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"        this.descriptor \u003d new EditOpeningDescriptor(descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns an {@code EditOpeningDescriptor} with fields containing {@code opening}\u0027s details","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder(Opening opening) {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor \u003d new EditOpeningDescriptor();","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setPosition(opening.getPosition());","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setCompany(opening.getCompany());","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setEmail(opening.getEmail());","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setStatus(opening.getStatus());","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        descriptor.setKeydates(opening.getKeydates());","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Position} of the {@code EditOpeningDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder withPosition(String position) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setPosition(new Position(position));","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Company} of the {@code EditOpeningDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setCompany(new Company(company));","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Email} of the {@code EditOpeningDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Status} of the {@code EditOpeningDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"     * Parses the {@code dates} into a {@code Set\u003cDate\u003e} and set it to the {@code EditOpeningDescriptor}","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"     * that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptorBuilder withDates(ArrayList\u003cString\u003e... dates) {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"        List\u003cKeydate\u003e dateSet \u003d Stream.of(dates).map(date -\u003e new Keydate(date.get(0), date.get(1))).collect(Collectors.toList());","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"        descriptor.setKeydates(dateSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"    public EditOpeningDescriptor build() {","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"        return descriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":80,"KevinEyo1":7,"Lanreath":1}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"///**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"// * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"// */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//public class EditPersonDescriptorBuilder {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    private EditPersonDescriptor descriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setName(person.getName());","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setTags(person.getTags());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//     * that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//    public EditPersonDescriptor build() {","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        return descriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":87}},{"path":"src/test/java/seedu/address/testutil/OpeningBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Lanreath"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Company;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Email;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Position;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Remark;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Status;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":" * A utility class to help with building Opening objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"public class OpeningBuilder {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String DEFAULT_POSITION \u003d \"Software Engineer\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String DEFAULT_COMPANY \u003d \"Google\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String DEFAULT_EMAIL \u003d \"google_hr@gmail.com\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String DEFAULT_STATUS \u003d \"APPLIED\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String DEFAULT_REMARK \u003d \"I really want this job.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    private Position position;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"    private Company company;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    private Email email;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"    private Status status;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    private List\u003cKeydate\u003e keydates;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"     * Creates a {@code OpeningBuilder} with the default details.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"    public OpeningBuilder() {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"        position \u003d new Position(DEFAULT_POSITION);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        keydates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"     * Initializes the OpeningBuilder with the data of {@code openingToCopy}.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"    public OpeningBuilder(Opening openingToCopy) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"        position \u003d openingToCopy.getPosition();","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"        company \u003d openingToCopy.getCompany();","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"        email \u003d openingToCopy.getEmail();","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"        status \u003d openingToCopy.getStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"        remark \u003d openingToCopy.getRemark();","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        keydates \u003d new ArrayList\u003c\u003e(openingToCopy.getKeydates());","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Position} of the {@code Opening} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"    public OpeningBuilder withPosition(String position) {","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"        this.position \u003d new Position(position);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"     * Parses the {@code keydates} into a {@code Set\u003cKeydate\u003e} and set it to the {@code Opening} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"    public OpeningBuilder withKeydates(ArrayList\u003cString\u003e... dates) {","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"        this.keydates \u003d Stream.of(dates).map(date -\u003e new Keydate(date.get(0), date.get(1)))","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Email} of the {@code Opening} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"    public OpeningBuilder withEmail(String email) {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Remark} of the {@code Opening} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"    public OpeningBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Company} of the {@code Opening} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"    public OpeningBuilder withCompany(String company) {","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"     * Sets the {@code Status} of the {@code Status} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"    public OpeningBuilder withStatus(String status) {","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"    public Opening build() {","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"        return new Opening(position, company, email, status, remark, keydates);","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":97,"KevinEyo1":11,"Lanreath":2}},{"path":"src/test/java/seedu/address/testutil/OpeningUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_KEYDATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import static seedu.ultron.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Lanreath"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.logic.commands.EditCommand.EditOpeningDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import seedu.ultron.model.opening.Keydate;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":" * A utility class for Opening.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"public class OpeningUtil {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns an add command string for adding the {@code opening}.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"    public static String getAddCommand(Opening opening) {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getOpeningDetails(opening);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns the part of command string for the given {@code opening}\u0027s details.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"    public static String getOpeningDetails(Opening opening) {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"        sb.append(PREFIX_POSITION + opening.getPosition().fullPosition + \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"        sb.append(PREFIX_COMPANY + opening.getCompany().fullCompany + \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"        sb.append(PREFIX_EMAIL + opening.getEmail().value + \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"        sb.append(PREFIX_STATUS + opening.getStatus().fullStatus + \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"        sb.append(PREFIX_REMARK + opening.getRemark().value + \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        opening.getKeydates().stream().forEach(","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"            s -\u003e sb.append(PREFIX_KEYDATE + s.fullKey + \"@\" + s.fullDate + \" \")","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"        );","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns the part of command string for the given {@code EditOpeningDescriptor}\u0027s details.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"    public static String getEditOpeningDescriptorDetails(EditOpeningDescriptor descriptor) {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        descriptor.getPosition().ifPresent(position -\u003e sb.append(PREFIX_POSITION)","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"                .append(position.fullPosition).append(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"        descriptor.getCompany().ifPresent(company -\u003e sb.append(PREFIX_COMPANY).append(company.fullCompany)","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"                .append(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.fullStatus).append(\" \"));","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"        if (descriptor.getKeydates().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"            List\u003cKeydate\u003e dates \u003d descriptor.getKeydates().get();","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"            if (dates.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"                sb.append(PREFIX_KEYDATE);","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"                dates.forEach(s -\u003e sb.append(PREFIX_KEYDATE).append(s.fullKey).append(\"@\")","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"                        .append(s.fullDate).append(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":52,"KevinEyo1":14,"Lanreath":1}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Remark;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"///**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"// * A utility class to help with building Person objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"// */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//public class PersonBuilder {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    private Name name;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    private Phone phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    private Email email;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    private Address address;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//    private Remark remark;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder() {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        name \u003d personToCopy.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        email \u003d personToCopy.getEmail();","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder withName(String name) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//        this.address \u003d new Address(address);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//    public Person build() {","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":108}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.ultron.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"///**","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"// * A utility class for Person.","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"// */","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//public class PersonUtil {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    public static String getAddCommand(Person person) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    public static String getPersonDetails(Person person) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//        person.getTags().stream().forEach(","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//        );","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//        return sb.toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//            if (tags.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//            }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//        return sb.toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":64}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns the middle index of the opening in the {@code model}\u0027s opening list.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"        return Index.fromOneBased(model.getFilteredOpeningList().size() / 2);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns the last index of the opening in the {@code model}\u0027s opening list.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"        return Index.fromOneBased(model.getFilteredOpeningList().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns the opening in the {@code model}\u0027s opening list at {@code index}.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"    public static Opening getOpening(Model model, Index index) {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"        return model.getFilteredOpeningList().get(index.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":10,"-":45}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"///**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"// * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"// */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//public class TypicalIndexes {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":12}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexesNew.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"public class TypicalIndexesNew {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Index INDEX_FIRST_OPENING \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Index INDEX_SECOND_OPENING \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Index INDEX_THIRD_OPENING \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":12}},{"path":"src/test/java/seedu/address/testutil/TypicalOpenings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_GOOGLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_SHOPEE;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_FEB_OA;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_KEYDATE_MARCH_INTERVIEW;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":" * A utility class containing a list of {@code Opening} objects to be used in tests.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"public class TypicalOpenings {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening MICROSOFT \u003d new OpeningBuilder().withPosition(\"Software Engineer\")","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"            .withStatus(\"APPLIED\").withEmail(\"microsoft@outlook.com\")","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"            .withCompany(\"Microsoft\").withRemark(\"Dream job\")","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"            .withKeydates(new ArrayList\u003cString\u003e(Arrays.asList(\"OA\", \"2022-03-01\"))).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening APPLE \u003d new OpeningBuilder().withPosition(\"Frontend Engineer\")","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"            .withStatus(\"INTERVIEWING\")","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"apple@apple.com\").withCompany(\"Apple\")","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"            .withRemark(\"I love apple\")","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"            .withKeydates(new ArrayList\u003cString\u003e(Arrays.asList(\"OA\", \"2022-03-01\")),","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"                        new ArrayList\u003cString\u003e(Arrays.asList(\"Interview\", \"2022-02-01\"))).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening GRAB \u003d new OpeningBuilder().withPosition(\"Backend Engineer\").withCompany(\"Grab\")","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"grab@grab.com\").withStatus(\"REJECTED\")","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"            .withRemark(\"I didn\u0027t like Grab anyways\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening BYTEDANCE \u003d new OpeningBuilder().withPosition(\"Fullstack engineer\").withCompany(\"Bytedance\")","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"bytedance@bytedance.com\").withStatus(\"INTERVIEWING\")","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"            .withRemark(\"I want to meet tiktok influencers\")","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"            .withKeydates(new ArrayList\u003cString\u003e(Arrays.asList(\"Interview\", \"2022-03-05\"))).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening META \u003d new OpeningBuilder().withPosition(\"Game Developer\").withCompany(\"Meta\")","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"meta@meta.com\").withStatus(\"FOUND\")","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"            .withRemark(\"Is the metaverse bad?\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening AMAZON \u003d new OpeningBuilder().withPosition(\"Cloud Engineer\").withCompany(\"Amazon\")","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"amazon@amazon.com\").withStatus(\"OFFERED\")","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"            .withRemark(\"I don\u0027t really like Jeff Bezos though\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening NETFLIX \u003d new OpeningBuilder().withPosition(\"Backend Engineer\").withCompany(\"Netflix\")","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"netflix@netflix.com\").withStatus(\"ACCEPTED\")","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"            .withRemark(\"Bing chilling\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"    // Manually added","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening Blizzard \u003d new OpeningBuilder().withPosition(\"Game developer\").withCompany(\"Blizzard\")","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"blizzard@blizzard.com\").withStatus(\"FOUND\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening Riot \u003d new OpeningBuilder().withPosition(\"Game developer\").withCompany(\"Riot games\")","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(\"riot@riot.com\").withStatus(\"FOUND\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"    // Manually added - Opening\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening GOOGLE \u003d new OpeningBuilder().withPosition(VALID_POSITION_GOOGLE).withCompany(VALID_COMPANY_GOOGLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(VALID_EMAIL_GOOGLE).withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"            .withRemark(VALID_REMARK_GOOGLE).withKeydates(VALID_KEYDATE_FEB_OA).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"    public static final Opening SHOPEE \u003d new OpeningBuilder().withPosition(VALID_POSITION_SHOPEE).withCompany(VALID_COMPANY_SHOPEE)","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"            .withEmail(VALID_EMAIL_SHOPEE).withStatus(VALID_STATUS_SHOPEE)","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"            .withRemark(VALID_REMARK_SHOPEE).withKeydates(VALID_KEYDATE_MARCH_INTERVIEW, VALID_KEYDATE_FEB_OA)","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"            .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"    private TypicalOpenings() {} // prevents instantiation","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"     * Returns an {@code Ultron} with all the typical openings.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"    public static Ultron getTypicalUltron() {","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"        Ultron ultron \u003d new Ultron();","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"        for (Opening opening : getTypicalOpenings()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"            ultron.addOpening(opening);","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"        return ultron;","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"    public static List\u003cOpening\u003e getTypicalOpenings() {","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MICROSOFT, BYTEDANCE, AMAZON, APPLE, GRAB, META, NETFLIX));","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":83,"KevinEyo1":5}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"///**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"// * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"// */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//public class TypicalPersons {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//            .withTags(\"friends\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(\"He likes to swim.\")","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(\"He likes to code.\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(\"He likes to dance.\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(\"She likes eating.\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(\"She likes fashion.\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(\"He likes gaming.\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//    // Manually added","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//            .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//            .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//            ab.addPerson(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//        return ab;","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":86}},{"path":"src/test/java/seedu/address/testutil/UltronBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.Ultron;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"import seedu.ultron.model.opening.Opening;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":" *     {@code Ultron ab \u003d new UltronBuilder().withOpening(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"public class UltronBuilder {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"    private Ultron ultron;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"    public UltronBuilder() {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"        ultron \u003d new Ultron();","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"    public UltronBuilder(Ultron addressBook) {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"        this.ultron \u003d addressBook;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"     * Adds a new {@code Opening} to the {@code Ultron} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"    public UltronBuilder withOpening(Opening opening) {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"        ultron.addOpening(opening);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"    public Ultron build() {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"        return ultron;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BagDownB3nny":34}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import javafx.beans.DefaultProperty;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"///**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"// * A test object which can be constructed via an FXML file.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"// * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"// */","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//@DefaultProperty(\"text\")","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//public class TestFxmlObject {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//    private String text;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//    public TestFxmlObject() {}","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//    public TestFxmlObject(String text) {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//        setText(text);","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    public String getText() {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//        return text;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//    public void setText(String text) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//        this.text \u003d text;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":35}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BagDownB3nny"},"content":"//package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BagDownB3nny"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BagDownB3nny"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BagDownB3nny"},"content":"//import java.net.URL;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BagDownB3nny"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BagDownB3nny"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BagDownB3nny"},"content":"//import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.MainApp;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BagDownB3nny"},"content":"//import seedu.ultron.ui.UiPart;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BagDownB3nny"},"content":"//public class UiPartTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BagDownB3nny"},"content":"//    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BagDownB3nny"},"content":"//    @TempDir","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BagDownB3nny"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BagDownB3nny"},"content":"//        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BagDownB3nny"},"content":"//        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BagDownB3nny"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BagDownB3nny"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BagDownB3nny"},"content":"//        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BagDownB3nny"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BagDownB3nny"},"content":"//    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BagDownB3nny"},"content":"//    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BagDownB3nny"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BagDownB3nny"},"content":"//    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BagDownB3nny"},"content":"//        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BagDownB3nny"},"content":"//        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BagDownB3nny"},"content":"//        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BagDownB3nny"},"content":"//        return testFileUrl;","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BagDownB3nny"},"content":"//    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BagDownB3nny"},"content":"//     * UiPart used for testing.","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BagDownB3nny"},"content":"//     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BagDownB3nny"},"content":"//     */","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BagDownB3nny"},"content":"//    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BagDownB3nny"},"content":"//        @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BagDownB3nny"},"content":"//        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BagDownB3nny"},"content":"//        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BagDownB3nny"},"content":"//            super(fxmlFileUrl, root);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BagDownB3nny"},"content":"//        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BagDownB3nny"},"content":"//            super(fxmlFileName, root);","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BagDownB3nny"},"content":"//        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BagDownB3nny"},"content":"//            super(fxmlFileUrl);","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BagDownB3nny"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BagDownB3nny"},"content":"//        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BagDownB3nny"},"content":"//            super(fxmlFileName);","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BagDownB3nny"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BagDownB3nny"},"content":"//        }","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BagDownB3nny"},"content":"//    }","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BagDownB3nny"},"content":"//","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BagDownB3nny"},"content":"//}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BagDownB3nny":115}}]
