[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T15-2/tp/branch/master/graph/badge.svg?token\u003d4KRK8YBI9X)](https://codecov.io/gh/AY2223S2-CS2103T-T15-2/tp)","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"![Java CI](https://github.com/AY2223S2-CS2103T-T15-2/tp/actions/workflows/gradle.yml/badge.svg)","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"* This is **a project made by CS2103T-T15-2 group**.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"* The project simulates an ongoing software project for a desktop application (called _FitBook_) used by fitness instructors to keep track","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"of their clients and respective details such as appointments and exercise routines.","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"  * It comes with **features such as adding clients details, editing, finding and many more which you can find in the user guide**.","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"* It is named `FitBook` because it tracks the details of its Personal Training clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"* * For the detailed documentation of FitBook, see the [FitBook Product Website](https://ay2223s2-cs2103t-t15-2.github.io/tp/)","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"## Adapted from AddressBook-Level3","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"* For the detailed documentation of this project, see the [Address Book Product Website](https://se-education.org/addressbook-level3)","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"* This project is based on the **FitBook-Level3** project created by the [SE-EDU initiative](https://se-education.org). If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jundatan":5,"dfordarius":6,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"mainClassName \u003d \u0027seedu.fitbook.Main\u0027","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"    archiveFileName \u003d \u0027fitbook.jar\u0027","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"run {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jundatan":2,"dfordarius":2,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"You can reach us at the email:","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"Tan Jun Da - `jundatan@hotmail.com`","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"Darius Ng - `darius-ng@live.com`","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"Kalaris Ng - `to be added`","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"Jia Hui Liao - `e0775484@nus.edu.sg`","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Tan Jun Da","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"\u003cimg src\u003d\"images/jundatan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"[[github](https://github.com/jundatan)]","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"[[portfolio](team/jundatan.md)]","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"* Role: Integration","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"* Responsibilities: Integration checking, scheduling and tracking, Dev OPs","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Darius Ng","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"\u003cimg src\u003d\"images/dfordarius.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"[[github](http://github.com/dfordarius)]","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"[[portfolio](team/dfordarius.md)]","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"* Role: Documentation","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"* Responsibilities: Code quality, Dev ops, Documentation checking","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Jia Hui Liao","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"\u003cimg src\u003d\"images/oliviajhl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"[[github](https://github.com/oliviajhl)]","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"[[portfolio](team/oliviajhl.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"* Role: Tester and UI","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"* Responsibilities: Testing, Deals with UI, Dev Ops","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"### Kalaris Ng","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"\u003cimg src\u003d\"images/kalarisng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"[[github](http://github.com/kalarisng)]","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"[[portfolio](team/kalarisng.md)]","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"* Role: Team lead","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"* Responsibilities: Team lead, Deliverables and deadlines, Dev Ops","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kalarisng":3,"OliviaJHL":4,"jundatan":19,"dfordarius":2,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/fitbook/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/fitbook/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"* [**`FitBookModel`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/fitbook/ui/Ui.java)","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ClientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/fitbook/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"* listens for changes to `FitBookModel` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"* depends on some classes in the `FitBookModel` component, as it displays `Client` object residing in the `FitBookModel`.","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/fitbook/logic/Logic.java)","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"1. When `Logic` is called upon to execute a command, it uses the `FitBookParser` class to parse the user command.","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"1. The command can communicate with the `FitBookModel` when it is executed (e.g. to add a client).","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"* When called upon to parse a user command, the `FitBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `FitBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"### FitBookModel component","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"**API** : [`FitBookModel.java`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/fitbook/model/FitBookModel.java)","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"\u003cimg src\u003d\"images/FitBookModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"The `FitBookModel` component,","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"* stores the FitBook data i.e., all `Client` objects (which are contained in a `UniqueClientList` object).","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"* stores the currently \u0027selected\u0027 `Client` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cClient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"dfordarius"},"content":"* does not depend on any of the other three components (as the `FitBookModel` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `FitBook`, which `Client` references. This allows `FitBook` to only require one `Tag` object per unique tag, instead of each `Client` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"\u003cimg src\u003d\"images/BetterFitBookModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/fitbook/storage/FitBookStorage.java)","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"* can save both FitBook data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"* inherits from both `FitBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"* depends on some classes in the `FitBookModel` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `FitBookModel`)","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"dfordarius"},"content":"Classes used by multiple components are in the `seedu.fitbook.commons` package.","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"dfordarius"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedFitBook`. It extends `FitBook` with an undo/redo history, stored internally as an `fitBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"* `VersionedFitBook#commit()` — Saves the current FitBook state in its history.","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"* `VersionedFitBook#undo()` — Restores the previous FitBook state from its history.","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"dfordarius"},"content":"* `VersionedFitBook#redo()` — Restores a previously undone FitBook state from its history.","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"dfordarius"},"content":"These operations are exposed in the `FitBookModel` interface as `FitBookModel#commitFitBook()`, `FitBookModel#undoFitBook()` and `FitBookModel#redoFitBook()` respectively.","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"dfordarius"},"content":"Step 1. The user launches the application for the first time. The `VersionedFitBook` will be initialized with the initial FitBook state, and the `currentStatePointer` pointing to that single FitBook state.","lastModifiedDate":"2023-02-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"dfordarius"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the FitBook. The `delete` command calls `FitBookModel#commitFitBook()`, causing the modified state of the FitBook after the `delete 5` command executes to be saved in the `fitBookStateList`, and the `currentStatePointer` is shifted to the newly inserted FitBook state.","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"dfordarius"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also calls `FitBookModel#commitFitBook()`, causing another modified FitBook state to be saved into the `fitBookStateList`.","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"dfordarius"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `FitBookModel#commitFitBook()`, so the FitBook state will not be saved into the `fitBookStateList`.","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"dfordarius"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `FitBookModel#undoFitBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous FitBook state, and restores the FitBook to that state.","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"dfordarius"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial FitBook state, then there are no previous FitBook states to restore. The `undo` command uses `FitBookModel#canUndoFitBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-02-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"dfordarius"},"content":"The `redo` command does the opposite — it calls `FitBookModel#redoFitBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the FitBook to that state.","lastModifiedDate":"2023-02-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"dfordarius"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `fitBookStateList.size() - 1`, pointing to the latest FitBook state, then there are no undone FitBook states to restore. The `redo` command uses `FitBookModel#canRedoFitBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-02-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"dfordarius"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the FitBook, such as `list`, will usually not call `FitBookModel#commitFitBook()`, `FitBookModel#undoFitBook()` or `FitBookModel#redoFitBook()`. Thus, the `fitBookStateList` remains unchanged.","lastModifiedDate":"2023-02-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"dfordarius"},"content":"Step 6. The user executes `clear`, which calls `FitBookModel#commitFitBook()`. Since the `currentStatePointer` is not pointing at the end of the `fitBookStateList`, all FitBook states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-02-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"dfordarius"},"content":"* **Alternative 1 (current choice):** Saves the entire FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"dfordarius"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2023-02-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"jundatan"},"content":"* has a need to manage a significant number of clients","lastModifiedDate":"2023-02-27"},{"lineNumber":260,"author":{"gitId":"jundatan"},"content":"* has a need to manage details of each client","lastModifiedDate":"2023-02-27"},{"lineNumber":261,"author":{"gitId":"jundatan"},"content":"* has a need to store exercises routines for each client","lastModifiedDate":"2023-02-27"},{"lineNumber":262,"author":{"gitId":"jundatan"},"content":"* has a need to mark done or not done for each exercises","lastModifiedDate":"2023-02-27"},{"lineNumber":263,"author":{"gitId":"jundatan"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2023-02-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"dfordarius"},"content":"**Value proposition**: Fitness trainers tend to write all their clients’ fitness checklist, weight and progress with","lastModifiedDate":"2023-02-27"},{"lineNumber":269,"author":{"gitId":"dfordarius"},"content":"targets in a notebook. Keeping track of so many clients’ routines and progress on a notebook can be tough and","lastModifiedDate":"2023-02-27"},{"lineNumber":270,"author":{"gitId":"dfordarius"},"content":"inefficient. So, our product aims to help solve this by combining the addressbook with additional features such as","lastModifiedDate":"2023-02-27"},{"lineNumber":271,"author":{"gitId":"dfordarius"},"content":"adding fitness routines to each client with checkboxes for easy access and to check if they have completed their","lastModifiedDate":"2023-02-27"},{"lineNumber":272,"author":{"gitId":"dfordarius"},"content":"routines during their individual sessions. The trainer can also find the clients’ progress such as weight and their","lastModifiedDate":"2023-02-27"},{"lineNumber":273,"author":{"gitId":"dfordarius"},"content":"appointment dates and times they have with their clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"jundatan"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":282,"author":{"gitId":"dfordarius"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":283,"author":{"gitId":"dfordarius"},"content":"| Priority | As a …​           | I can …​                                                             | So that …​                                                     |","lastModifiedDate":"2023-02-27"},{"lineNumber":284,"author":{"gitId":"dfordarius"},"content":"|----------|-------------------|----------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-02-27"},{"lineNumber":285,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | look at the list of clients                                          | I know who are my clients and their details                            |","lastModifiedDate":"2023-02-27"},{"lineNumber":286,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | edit my client\u0027s routine                                             | the client\u0027s routine data is accurate                                  |","lastModifiedDate":"2023-02-27"},{"lineNumber":287,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | edit my client\u0027s current routine                                     | so that the client\u0027s calorie intake is accurate                        |","lastModifiedDate":"2023-02-27"},{"lineNumber":288,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | find a person by name                                                | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-02-27"},{"lineNumber":289,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | hide private contact details                                         | minimize the chance of someone else seeing them by accident            |","lastModifiedDate":"2023-02-27"},{"lineNumber":290,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | edit my client\u0027s weight data                                         | the client\u0027s weight data is accurate                                   |","lastModifiedDate":"2023-02-27"},{"lineNumber":291,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | put my client\u0027s current weight                                       | I can see if they get closer to their targeted weight                  |","lastModifiedDate":"2023-02-27"},{"lineNumber":292,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | set goal for each of my clients                                      | I can help my clients to make the most suitable plan                   |","lastModifiedDate":"2023-02-27"},{"lineNumber":293,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | set a list of tasks for my client                                    | I can keep track of what i have asked my client to do                  |","lastModifiedDate":"2023-02-27"},{"lineNumber":294,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | sort persons by name                                                 | I can locate a person easily                                           |","lastModifiedDate":"2023-02-27"},{"lineNumber":295,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | search for clients through their names                               | I can find my client\u0027s data                                            |","lastModifiedDate":"2023-02-27"},{"lineNumber":296,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | new user          | save exercise routines in a list                                     | I can match them with each client                                      |","lastModifiedDate":"2023-02-27"},{"lineNumber":297,"author":{"gitId":"dfordarius"},"content":"| `* * * ` | intermediate user | mark the exercise as incomplete                                      | I can manage my time properly next time                                |","lastModifiedDate":"2023-02-27"},{"lineNumber":298,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | intermediate user | mark the exercise as complete                                        | I can teach my clients new exercises                                   |","lastModifiedDate":"2023-02-27"},{"lineNumber":299,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | intermediate user | edit previous data                                                   | I can change my client\u0027s data                                          |","lastModifiedDate":"2023-02-27"},{"lineNumber":300,"author":{"gitId":"dfordarius"},"content":"| `* * *`  | intermediate user | add time to a client\u0027s appointment                                   | I can easily view my appointments for the week                         |","lastModifiedDate":"2023-02-27"},{"lineNumber":301,"author":{"gitId":"dfordarius"},"content":"| `* `     | intermediate user | search client\u0027s using their contact number                           | I can contact them when necessary                                      |","lastModifiedDate":"2023-02-27"},{"lineNumber":302,"author":{"gitId":"dfordarius"},"content":"| `*`      | intermediate user | filter clients by gender or exercise level                           | I can find my client easily                                            |","lastModifiedDate":"2023-02-27"},{"lineNumber":303,"author":{"gitId":"dfordarius"},"content":"| `*`      | Expert user       | link my clients under the same price package or classes              | I know who is under which class or price package                       |","lastModifiedDate":"2023-02-27"},{"lineNumber":304,"author":{"gitId":"dfordarius"},"content":"| `* *`    | Expert user  | add clients into specific groups                                     | it will be easier to track if they are in the same session             |","lastModifiedDate":"2023-02-27"},{"lineNumber":305,"author":{"gitId":"dfordarius"},"content":"| `* *`    | Expert user  | download data collected in FitBook                          | I can show results of my services to new potential clients             |","lastModifiedDate":"2023-03-15"},{"lineNumber":306,"author":{"gitId":"dfordarius"},"content":"| `* *`    | Expert user  | view reminder messages                                               | I remember the session I have with my clients for the day              |","lastModifiedDate":"2023-02-27"},{"lineNumber":307,"author":{"gitId":"dfordarius"},"content":"| `* *`    | Expert user  | add the time taken for each exercise for each session of the client  | I can achieve my target time for each exercise                         |","lastModifiedDate":"2023-02-27"},{"lineNumber":308,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"jundatan"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":314,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"dfordarius"},"content":"(For all use cases below, the **System** is the `FitBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-03"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"jundatan"},"content":"\u003e **Use case: UC01 - Delete a client**","lastModifiedDate":"2023-03-03"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"dfordarius"},"content":"1.  User requests to list clients","lastModifiedDate":"2023-02-27"},{"lineNumber":324,"author":{"gitId":"dfordarius"},"content":"2.  FitBook shows a list of clients","lastModifiedDate":"2023-03-03"},{"lineNumber":325,"author":{"gitId":"dfordarius"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2023-02-27"},{"lineNumber":326,"author":{"gitId":"dfordarius"},"content":"4.  FitBook deletes the client","lastModifiedDate":"2023-03-03"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"dfordarius"},"content":"    * 3a1. FitBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"jundatan"},"content":"\u003e **Use case: UC02 - Add a client**","lastModifiedDate":"2023-03-03"},{"lineNumber":343,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":344,"author":{"gitId":"jundatan"},"content":"**MSS**","lastModifiedDate":"2023-02-26"},{"lineNumber":345,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":346,"author":{"gitId":"dfordarius"},"content":"1. User requests to add a client","lastModifiedDate":"2023-02-27"},{"lineNumber":347,"author":{"gitId":"dfordarius"},"content":"2. FitBook adds the client into the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":348,"author":{"gitId":"jundatan"},"content":"3. FitBook displays that the client has been added.","lastModifiedDate":"2023-03-03"},{"lineNumber":349,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":350,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":351,"author":{"gitId":"jundatan"},"content":"   Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":352,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":353,"author":{"gitId":"jundatan"},"content":"**Extensions**","lastModifiedDate":"2023-02-26"},{"lineNumber":354,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":355,"author":{"gitId":"dfordarius"},"content":"* 1a. The client added has missing compulsory fields.","lastModifiedDate":"2023-02-27"},{"lineNumber":356,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":357,"author":{"gitId":"dfordarius"},"content":"    * 1a1. FitBook shows an error message for missing fields.","lastModifiedDate":"2023-03-03"},{"lineNumber":358,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":359,"author":{"gitId":"jundatan"},"content":"      Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":360,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":361,"author":{"gitId":"dfordarius"},"content":"* 1b. The client added has duplicate names.","lastModifiedDate":"2023-02-27"},{"lineNumber":362,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":363,"author":{"gitId":"dfordarius"},"content":"    * 1b1. FitBook shows an error message for duplicate names.","lastModifiedDate":"2023-03-03"},{"lineNumber":364,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":366,"author":{"gitId":"jundatan"},"content":"      Use case ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":367,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":368,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":369,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":370,"author":{"gitId":"dfordarius"},"content":"**Use case: UC03 - List clients**","lastModifiedDate":"2023-03-02"},{"lineNumber":371,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":372,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":373,"author":{"gitId":"OliviaJHL"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":374,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":375,"author":{"gitId":"OliviaJHL"},"content":"1. User requests to list clients.","lastModifiedDate":"2023-03-01"},{"lineNumber":376,"author":{"gitId":"dfordarius"},"content":"2. FitBook displays a list of clients.","lastModifiedDate":"2023-03-03"},{"lineNumber":377,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":378,"author":{"gitId":"OliviaJHL"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":379,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":380,"author":{"gitId":"OliviaJHL"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":381,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":382,"author":{"gitId":"OliviaJHL"},"content":"* 1a. Client list is empty use case.","lastModifiedDate":"2023-03-01"},{"lineNumber":383,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":384,"author":{"gitId":"OliviaJHL"},"content":"  Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":385,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":386,"author":{"gitId":"jundatan"},"content":"\u003e **Use case: UC04 - Edit a client**","lastModifiedDate":"2023-03-03"},{"lineNumber":387,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":388,"author":{"gitId":"dfordarius"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":389,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":390,"author":{"gitId":"dfordarius"},"content":"1. User requests to edit a client\u0027s details.","lastModifiedDate":"2023-03-02"},{"lineNumber":391,"author":{"gitId":"dfordarius"},"content":"2. FitBook edits the client\u0027s detail into the database.","lastModifiedDate":"2023-03-03"},{"lineNumber":392,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":393,"author":{"gitId":"dfordarius"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":394,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":395,"author":{"gitId":"dfordarius"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":396,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":397,"author":{"gitId":"dfordarius"},"content":"* 1a. The user enters the command incorrectly.","lastModifiedDate":"2023-03-02"},{"lineNumber":398,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":399,"author":{"gitId":"dfordarius"},"content":"    * 1a1. FitBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":400,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":401,"author":{"gitId":"dfordarius"},"content":"      Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":402,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":403,"author":{"gitId":"dfordarius"},"content":"* 1b. The user enters a client that does not exist in the database.","lastModifiedDate":"2023-03-02"},{"lineNumber":404,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":405,"author":{"gitId":"dfordarius"},"content":"    * 1b1. FitBook shows an error message that the client does not exist.","lastModifiedDate":"2023-03-03"},{"lineNumber":406,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":407,"author":{"gitId":"dfordarius"},"content":"      Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":408,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":409,"author":{"gitId":"jundatan"},"content":"\u003e **Use case: UC05 - Clear all clients**","lastModifiedDate":"2023-03-03"},{"lineNumber":410,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":411,"author":{"gitId":"jundatan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":412,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":413,"author":{"gitId":"jundatan"},"content":"1. User requests to clear the list of clients.","lastModifiedDate":"2023-03-03"},{"lineNumber":414,"author":{"gitId":"jundatan"},"content":"2. FitBook clears the list and database of clients.","lastModifiedDate":"2023-03-03"},{"lineNumber":415,"author":{"gitId":"jundatan"},"content":"3. FitBook displays that the list is cleared.","lastModifiedDate":"2023-03-03"},{"lineNumber":416,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":417,"author":{"gitId":"dfordarius"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":418,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":419,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":420,"author":{"gitId":"jundatan"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":421,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":422,"author":{"gitId":"jundatan"},"content":"* 1a. The list is empty in the database.","lastModifiedDate":"2023-03-03"},{"lineNumber":423,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":424,"author":{"gitId":"jundatan"},"content":"  * 1a1. FitBook displays that the list is cleared.","lastModifiedDate":"2023-03-03"},{"lineNumber":425,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":426,"author":{"gitId":"jundatan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"jundatan"},"content":"\u003e **Use case: UC06 - Exit**","lastModifiedDate":"2023-03-03"},{"lineNumber":429,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":430,"author":{"gitId":"jundatan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":431,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":432,"author":{"gitId":"jundatan"},"content":"1. User requests to exit the application.","lastModifiedDate":"2023-03-03"},{"lineNumber":433,"author":{"gitId":"jundatan"},"content":"2. FitBook exits the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":434,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":435,"author":{"gitId":"dfordarius"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":436,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":437,"author":{"gitId":"jundatan"},"content":"\u003e **Use case: UC07 - Find**","lastModifiedDate":"2023-03-03"},{"lineNumber":438,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":439,"author":{"gitId":"jundatan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":440,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":441,"author":{"gitId":"kalarisng"},"content":"1. User requests to find a client.","lastModifiedDate":"2023-03-05"},{"lineNumber":442,"author":{"gitId":"kalarisng"},"content":"2. FitBook displays the list of matching clients.","lastModifiedDate":"2023-03-05"},{"lineNumber":443,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":444,"author":{"gitId":"kalarisng"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":445,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":446,"author":{"gitId":"kalarisng"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":447,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":448,"author":{"gitId":"kalarisng"},"content":"* 1a. The input does not match any client in the database.","lastModifiedDate":"2023-03-05"},{"lineNumber":449,"author":{"gitId":"kalarisng"},"content":"    * 1a1. FitBook displays that there are no matches.","lastModifiedDate":"2023-03-05"},{"lineNumber":450,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":451,"author":{"gitId":"kalarisng"},"content":"      Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":452,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":453,"author":{"gitId":"kalarisng"},"content":"* 2a. The list is empty in the database.","lastModifiedDate":"2023-03-05"},{"lineNumber":454,"author":{"gitId":"kalarisng"},"content":"    * 2a1. FitBook displays that there are no matches.","lastModifiedDate":"2023-03-05"},{"lineNumber":455,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":456,"author":{"gitId":"kalarisng"},"content":"      Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":457,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":458,"author":{"gitId":"kalarisng"},"content":"* 3a. The find command has incorrect format.","lastModifiedDate":"2023-03-05"},{"lineNumber":459,"author":{"gitId":"kalarisng"},"content":"    * 3a1. FitBook displays an error that the find format is wrong.","lastModifiedDate":"2023-03-05"},{"lineNumber":460,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":461,"author":{"gitId":"dfordarius"},"content":"      Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":462,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":463,"author":{"gitId":"jundatan"},"content":"*{More to be added}","lastModifiedDate":"2023-03-03"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"jundatan"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"dfordarius"},"content":"2. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-27"},{"lineNumber":470,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"jundatan"},"content":"4. Should be usable by users even if they are not familiar with command lines.","lastModifiedDate":"2023-02-26"},{"lineNumber":472,"author":{"gitId":"jundatan"},"content":"5. Should start up fast when starting the application.","lastModifiedDate":"2023-02-26"},{"lineNumber":473,"author":{"gitId":"jundatan"},"content":"6. Should work on most screen resolutions.","lastModifiedDate":"2023-02-26"},{"lineNumber":474,"author":{"gitId":"jundatan"},"content":"7. Should not consume too much battery or data usage on the user\u0027s device.","lastModifiedDate":"2023-02-26"},{"lineNumber":475,"author":{"gitId":"jundatan"},"content":"8. Source code should be _open source_.","lastModifiedDate":"2023-02-26"},{"lineNumber":476,"author":{"gitId":"jundatan"},"content":"9. JAR file should be less than 2GB.","lastModifiedDate":"2023-02-26"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"jundatan"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":481,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"jundatan"},"content":"* **Open source**: Programs that people can modify and share because its design is publicly accessible","lastModifiedDate":"2023-02-26"},{"lineNumber":487,"author":{"gitId":"jundatan"},"content":"* **Ui**: User interface of the program where the user interacts with","lastModifiedDate":"2023-02-26"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"dfordarius"},"content":"### Deleting a client","lastModifiedDate":"2023-02-27"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"dfordarius"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2023-02-27"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"dfordarius"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"dfordarius"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-02-27"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kalarisng":19,"OliviaJHL":15,"jundatan":60,"dfordarius":133,"-":313}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"   1. Run the `seedu.fitbook.Main` and try a few commands.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [FitBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"dfordarius":2,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"   e.g. `seedu.fitbook.commons.StringUtilTest`","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"   e.g. `seedu.fitbook.storage.StorageManagerTest`","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"   e.g. `seedu.fitbook.logic.LogicManagerTest`","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"dfordarius":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"FitBook is a **desktop app for managing clients, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Fitbook can get your client management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"1. Download the latest `fitbook.jar` from [here](https://github.com/AY2223S2-CS2103T-T15-2/tp/releases).","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fitbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the FitBook.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"### Adding a client: `add`","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"Adds a client to the FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS w/WEIGHT","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"[cal/RECOMMENDED_CALORIES_INTAKE] [g/GOAL] [r/Routines] [g/gender] [app/APPOINTMENT_TIME]…​ [t/TAG]…​`","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"A client can have any number of tags, appointments and exercise routines (including 0)","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"* `add n/Betsy Crowe app/12-12-2030 cal/2300 g/Female  e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"### Listing all clients : `list`","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"OliviaJHL"},"content":"Displays a list of all clients in the FitBook.","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"OliviaJHL"},"content":"Format: `listClients`","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"OliviaJHL"},"content":"* Initiate the command with \u0027listClients\u0027","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"OliviaJHL"},"content":"* All clients in FitBook has been listed once again!","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"### Editing a client : `edit`","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"Edits an existing client in the FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"Format: `edit INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS w/WEIGHT","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"[cal/RECOMMENDED_CALORIES_INTAKE] [g/GOAL] [r/Routines] [g/gender] [app/APPOINTMENT_TIME] [t/TAG]…​`","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"* You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"*  `edit 3 w/23.0` Edits the weight of the 3rd client to `23.0`.","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"*  `edit 4 w/25.0 g/m` Edits the weight and gender of the 4th client to `25.0` and `m`.","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"### Locating clients by name: `find`","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"kalarisng"},"content":"Finds Clients in Fitbook whose details contain any of the given keywords.","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"kalarisng"},"content":"Format: `find [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [w/WEIGHT] [g/GENDER] [cal/CALORIE] [t/TAG]","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"kalarisng"},"content":"[app/APPOINTMENT]…​`","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"kalarisng"},"content":"* Prefix must be included, or there will be an exception. Multiple prefixes are allowed per command.","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"kalarisng"},"content":"* The order of the keywords matters. e.g. `Hans Bo` will not match `Bo Hans`","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"kalarisng"},"content":"* Details containing the keyword will also be matched, even if both do not match exactly.","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"kalarisng"},"content":"  e.g. `Han` will match `Hans`, `John` will match `John Li` and `John Tan`,","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"kalarisng"},"content":"  `19` will match `1900` and `0190`","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"kalarisng"},"content":"Available Prefixes:","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"kalarisng"},"content":"* `n` filters by Name","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"kalarisng"},"content":"* `p` filters by Phone","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"kalarisng"},"content":"* `e` filers by Email","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"kalarisng"},"content":"* `a` filters by Address","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"kalarisng"},"content":"* `t` filters by Tag","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"kalarisng"},"content":"* `w` filters by Weight","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"kalarisng"},"content":"* `g` filters by Gender","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"kalarisng"},"content":"* `cal` filters by Calorie","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"kalarisng"},"content":"* `app` filters by Appointment","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"kalarisng"},"content":"* `find n/Alex` returns every client with \u0027Alex\u0027 in their name.","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"kalarisng"},"content":"* `find p/91234567` returns every client with phone numbers that matches or contains \u002791234567\u0027.","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"kalarisng"},"content":"* `find n/Alex p/91234567` returns every client with \u0027Alex\u0027 in their name OR with phone numbers that matches or contains","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"kalarisng"},"content":"\u002791234567\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"kalarisng"},"content":"* `find alex david` will throw an exception, since there is a missing prefix in the command.","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"Deletes the specified client from the FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"dfordarius"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"dfordarius"},"content":"* `list` followed by `delete 2` deletes the 2nd client in the FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"dfordarius"},"content":"Clears all entries from the FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"dfordarius"},"content":"FitBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":186,"author":{"gitId":"dfordarius"},"content":"FitBook data are saved as a JSON file `[JAR file location]/data/fitbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"dfordarius"},"content":"If your changes to the data file makes its format invalid, FitBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"///PLACE HOLDER OUR ACTUAL FEATURE LIST////","lastModifiedDate":"2023-02-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"1.\tAdding new client","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Add a new customer profile: addClient","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Format: addClient c/CLIENT_NAME p/PHONE_NUMBER add/ADDRESS [appt/APPOINTMENT_TIME] [w/WEIGHT] [cal/TARGET_CALORIES_INTAKE][g/ GOAL] [r/Routines] [g/gender]","lastModifiedDate":"2023-02-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2023-02-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"•\taddClient c/Lisa p/95230245 cal/2000 w/50 r/1,2,3","lastModifiedDate":"2023-02-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"2.\tRemoving a client: removeClient","lastModifiedDate":"2023-02-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Removes a client profile.","lastModifiedDate":"2023-02-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Format: removeClient c/CLIENT_NAME","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"•\tremoveClient c/Lisa","lastModifiedDate":"2023-02-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"3.\tEditing client information","lastModifiedDate":"2023-02-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Edits client details (e.g. phone number)","lastModifiedDate":"2023-02-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Format: editClient c/CLIENT_NAME [p/PHONE_NUMBER] [add/ADDRESS] [appt/APPOINTMENT_TIME]","lastModifiedDate":"2023-02-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"[w/WEIGHT] [cal/TARGET_CALORIES_INTAKE][g/ GOAL] [r/Routines] [g/gender]","lastModifiedDate":"2023-02-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"`","lastModifiedDate":"2023-02-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":216,"author":{"gitId":"-"},"content":"•\teditClient c/Lisa p/95230245","lastModifiedDate":"2023-02-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"4.\tFinding client by name","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Locates client","lastModifiedDate":"2023-02-16"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Format: findClient c/CLIENT_NAME","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"•\tfindClient c/Lisa","lastModifiedDate":"2023-02-16"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"5.\tListing all clients: listClients","lastModifiedDate":"2023-02-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Lists all clients added. “Change tab to clients”.","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Format: listClients","lastModifiedDate":"2023-02-16"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"6.\tListing all the routines: listRoutines","lastModifiedDate":"2023-02-16"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Lists all routines added. “Change tab to lists”.","lastModifiedDate":"2023-02-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Format: listRoutines","lastModifiedDate":"2023-02-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"7.\tExiting the app","lastModifiedDate":"2023-02-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Format: logout","lastModifiedDate":"2023-02-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":237,"author":{"gitId":"-"},"content":"8.\tCreating an exercise routine: createRoutine","lastModifiedDate":"2023-02-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Creates an empty exercise routine to the list of exercise routines.","lastModifiedDate":"2023-02-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Format: createRoutine n/EXERCISE_ROUTINE_NAME","lastModifiedDate":"2023-02-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":242,"author":{"gitId":"-"},"content":"•\tcreateRoutine n/Slimming Exercise","lastModifiedDate":"2023-02-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"•\tcreateRoutine n/Cardio Exercise","lastModifiedDate":"2023-02-16"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":245,"author":{"gitId":"-"},"content":"9.\tSaving exercise routines: saveExercise","lastModifiedDate":"2023-02-16"},{"lineNumber":246,"author":{"gitId":"jundatan"},"content":"Saves an exercise routine to the FitBook.","lastModifiedDate":"2023-02-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Format: saveExercise e/EXERCISE_NUMBER r/ROUTINE_NUMBER n/ROUTINE [t/DURATION_OR_REPS][s/SETS]","lastModifiedDate":"2023-02-16"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":250,"author":{"gitId":"-"},"content":"•\tsaveExercise e/3 r/2 n/Dumbbell curls t/20 s/3","lastModifiedDate":"2023-02-16"},{"lineNumber":251,"author":{"gitId":"-"},"content":"•\tsaveExercise e/2 r/3 n/Lateral Raises t/10 s/4","lastModifiedDate":"2023-02-16"},{"lineNumber":252,"author":{"gitId":"-"},"content":"•\tsaveExercise e/1 r/1 n/Treadmill Sprint t/10 minutes","lastModifiedDate":"2023-02-16"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"10.\tShowing the list of exercise routines: listRoutines","lastModifiedDate":"2023-02-16"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Shows the list of exercise routines in the fitbook.","lastModifiedDate":"2023-02-16"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Format: listRoutines [f/SEARCH]","lastModifiedDate":"2023-02-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"•\tlistRoutines","lastModifiedDate":"2023-02-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"•\tlistRoutines f/Cardio","lastModifiedDate":"2023-02-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":262,"author":{"gitId":"-"},"content":"11.\tTagging the exercise routine to each client: tagExercise","lastModifiedDate":"2023-02-16"},{"lineNumber":263,"author":{"gitId":"-"},"content":"Tags an exercise routine to each client in the fitbook.","lastModifiedDate":"2023-02-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"Format: tagExercise p/PERSON_INDEX_IN_THE_LIST e/EXERCISE_INDEX_IN_THE_EXERCISE_LIST","lastModifiedDate":"2023-02-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"•\ttagExercise p/2 e/3","lastModifiedDate":"2023-02-16"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"12.\t  Filtering clients by exercises: filterExercise","lastModifiedDate":"2023-02-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Filters and shows the clients by their routine.","lastModifiedDate":"2023-02-16"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Format: filterExercise e/EXERCISE_NAME","lastModifiedDate":"2023-02-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"•\tfilterExercise e/Cardio","lastModifiedDate":"2023-02-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"•\tfilterExercise e/Strength","lastModifiedDate":"2023-02-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Filtering the clients by gender: filterGender","lastModifiedDate":"2023-02-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Filters and shows the clients by gender.","lastModifiedDate":"2023-02-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Format: filterGender g/GENDER","lastModifiedDate":"2023-02-16"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"13.\tMarking the exercise of a client’s routine as done: markExercise","lastModifiedDate":"2023-02-16"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Marks the exercise of a client’s routine as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"markExercise p/PERSON_INDEX_IN_THE_LIST r/ROUTINE_NUMBER e/EXERCISE_NUMBER","lastModifiedDate":"2023-02-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2023-02-16"},{"lineNumber":286,"author":{"gitId":"-"},"content":"•\tmarkExercise p/2 r/1 e/3","lastModifiedDate":"2023-02-16"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":288,"author":{"gitId":"-"},"content":"14.\tUnmarking the exercise of a client’s routine as not done: unmarkExercise","lastModifiedDate":"2023-02-16"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Unmarks the exercise of a client’s routine as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":290,"author":{"gitId":"-"},"content":"unmarkExercise p/PERSON_INDEX_IN_THE_LIST r/ROUTINE_NUMBER e/EXERCISE_NUMBER","lastModifiedDate":"2023-02-16"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2023-02-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":"•\tunmarkExercise p/2 r/1 e/3","lastModifiedDate":"2023-02-16"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"15.\tUnmarking all the exercise of a client’s routine as not done:","lastModifiedDate":"2023-02-16"},{"lineNumber":296,"author":{"gitId":"-"},"content":"unmarkAllExercise","lastModifiedDate":"2023-02-16"},{"lineNumber":297,"author":{"gitId":"-"},"content":"Unmarks all the exercise of a client’s routine as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":298,"author":{"gitId":"-"},"content":"unmarkAllExercise p/PERSON_INDEX_IN_THE_LIST r/ROUTINE_NUMBER","lastModifiedDate":"2023-02-16"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2023-02-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"•\tunmarkAllExercise p/1 r/3","lastModifiedDate":"2023-02-16"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"dfordarius"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FitBook home folder.","lastModifiedDate":"2023-02-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":316,"author":{"gitId":"jundatan"},"content":"| Action     | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2023-02-28"},{"lineNumber":317,"author":{"gitId":"OliviaJHL"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":318,"author":{"gitId":"OliviaJHL"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-01"},{"lineNumber":319,"author":{"gitId":"jundatan"},"content":"| **Clear**  | `clear`                                                                                                                                                               |","lastModifiedDate":"2023-02-28"},{"lineNumber":320,"author":{"gitId":"jundatan"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2023-02-28"},{"lineNumber":321,"author":{"gitId":"jundatan"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2023-02-28"},{"lineNumber":322,"author":{"gitId":"OliviaJHL"},"content":"| **Find**   | `find KEYWORD [MORE KEYWORDS] [p/PHONE] [e/EMAIL] [a/ADDRESS] [w/WEIGHT] [g/GENDER]…​`\u003cbr\u003e e.g., `find James Jake p/91234567 e/jamesjake@example.com`                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":323,"author":{"gitId":"OliviaJHL"},"content":"| **List**   | `listClients`                                                                                                                                                         |","lastModifiedDate":"2023-03-01"},{"lineNumber":324,"author":{"gitId":"jundatan"},"content":"| **Help**   | `help`                                                                                                                                                                |","lastModifiedDate":"2023-02-28"},{"lineNumber":325,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"kalarisng":23,"OliviaJHL":8,"jundatan":14,"dfordarius":29,"-":251}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"dfordarius"},"content":"    content: \"FitBook\";","lastModifiedDate":"2023-02-17"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"dfordarius":1,"-":294}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    Class FitBookModel MODEL_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"UI -right[#green]-\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"Logic -down[#blue]-\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"Main -up[#grey]-\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"Storage -up[STORAGE_COLOR].\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":5,"-":28}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"Participant \":FitBookModel\" as model MODEL_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteClient(p)","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveFitBook(fitBook)","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":35}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"FitBook *-right-\u003e \"1\" UniqueClientList","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"FitBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"UniqueClientList -right-\u003e Client","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"Client -up-\u003e \"*\" Tag","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Name","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Phone","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Email","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Address","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":10,"-":11}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"if () then ([command commits FitBook])","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    :Save FitBook to","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    fitBookStateList;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":12}},{"path":"docs/diagrams/ComponentManagers.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"package FitBookModel{","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nFitBookModel\" as FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"Class FitBookModelManager","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"FitBookModelManager .up.|\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"LogicManager --\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"dfordarius":5,"-":26}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"participant \":FitBookParser\" as FitBookParser LOGIC_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"box FitBookModel MODEL_COLOR_T1","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"participant \":FitBookModel\" as FitBookModel MODEL_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"LogicManager -\u003e FitBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"activate FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"FitBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"DeleteCommandParser --\u003e FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"FitBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"DeleteCommandParser --\u003e FitBookParser : d","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"DeleteCommandParser -[hidden]-\u003e FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"FitBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"deactivate FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"DeleteCommand -\u003e FitBookModel : deleteClient(1)","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"activate FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"FitBookModel --\u003e DeleteCommand","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"deactivate FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":16,"-":53}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"Class FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"package FitBookModel{","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"Class HiddenFitBookModel #FFFFFF","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"LogicManager -right-\u003e\"1\" FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"FitBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"LogicManager --\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"Storage --[hidden] FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"Command .right.\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":8,"-":38}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"Package FitBookModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyFitBook\" as ReadOnlyFitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nFitBookModel\" as FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"Class FitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"Class FitBookModelManager","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"Class UniqueClientList","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"Class Client","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"HiddenOutside ..\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"FitBook .up.|\u003e ReadOnlyFitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"FitBookModelManager .up.|\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"FitBookModel .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"FitBookModel .left.\u003e ReadOnlyFitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"FitBookModelManager -left-\u003e \"1\" FitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"FitBookModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"FitBook *--\u003e \"1\" UniqueClientList","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"UniqueClientList --\u003e \"~* all\" Client","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Name","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Phone","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Email","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e Address","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"Client *--\u003e \"*\" Tag","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"FitBookModelManager --\u003e\"~* filtered\" Client","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":22,"-":28}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"Class FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"HiddenOutside ..\u003e FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"FitBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"FitBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"dfordarius":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"package \"FitBook Storage\" #F4F6F6{","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nFitBookStorage\" as FitBookStorage","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"Class JsonFitBookStorage","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"Class JsonSerializableFitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"Class JsonAdaptedClient","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"StorageManager -up-\u003e \"1\" FitBookStorage","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"Storage -right-|\u003e FitBookStorage","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"JsonFitBookStorage .up.|\u003e FitBookStorage","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"JsonFitBookStorage ..\u003e JsonSerializableFitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"JsonSerializableFitBook --\u003e \"*\" JsonAdaptedClient","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"JsonAdaptedClient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":11,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"Class ClientListPanel","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"Class ClientCard","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"package FitBookModel \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"Class HiddenFitBookModel #FFFFFF","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"MainWindow *-down-\u003e \"1\" ClientListPanel","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"ClientListPanel -down-\u003e \"*\" ClientCard","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"ClientListPanel --|\u003e UiPart","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"ClientCard --|\u003e UiPart","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"ClientCard ..\u003e FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"ClientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":10,"-":50}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    class State1 as \"__ab0:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    class State2 as \"__ab1:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    class State3 as \"__ab2:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    class State1 as \"__ab0:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    class State2 as \"__ab1:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    class State3 as \"__ab2:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    class State1 as \"__ab0:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    class State2 as \"__ab1:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    class State3 as \"__ab2:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    class State1 as \"__ab0:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    class State2 as \"__ab1:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    class State3 as \"__ab2:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    class State1 as \"__ab0:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    class State2 as \"__ab1:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    class State3 as \"__ab2:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    class State1 as \"__ab0:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    class State2 as \"__ab1:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    class State3 as \"__ab3:FitBook__\"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":3,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"participant \":FitBookParser\" as FitBookParser LOGIC_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"box FitBookModel MODEL_COLOR_T1","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"participant \":FitBookModel\" as FitBookModel MODEL_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"participant \":VersionedFitBook\" as VersionedFitBook MODEL_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"LogicManager -\u003e FitBookParser : parseCommand(undo)","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"activate FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"FitBookParser -\u003e UndoCommand","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"UndoCommand --\u003e FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"FitBookParser --\u003e LogicManager : u","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"deactivate FitBookParser","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"UndoCommand -\u003e FitBookModel : undoFitBook()","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"activate FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"FitBookModel -\u003e VersionedFitBook : undo()","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"activate VersionedFitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"VersionedFitBook -\u003e VersionedFitBook :resetData(ReadOnlyFitBook)","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"VersionedFitBook --\u003e FitBookModel :","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"deactivate VersionedFitBook","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"FitBookModel --\u003e UndoCommand","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"deactivate FitBookModel","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dfordarius":19,"-":34}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"Participant \":FitBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"ecp -\u003e ec ++: index, editClientDescriptor","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"dfordarius":2,"-":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"title: FitBook","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T15-2/tp/branch/master/graph/badge.svg?token\u003d4KRK8YBI9X)](https://codecov.io/gh/AY2223S2-CS2103T-T15-2/tp)","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"**FitBook is a desktop application for managing your personal training client details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"* If you are interested in using FitBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"* If you are interested about developing FitBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dfordarius":5,"-":14}},{"path":"docs/team/dfordarius.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Darius Ng\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Project: FitBook","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"FitBook - to be added later","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dtotalCommits%20dsc\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddfordarius\u0026tabRepo\u003dAY2223S2-CS2103T-T15-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"dfordarius":2,"-":42}},{"path":"docs/team/jundatan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"title: Jun Da\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"### Project: FitBook","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"Fitbook is a desktop tracking book application used for tracking the progress and informations","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"for the clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"It is written in Java.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"* **New Feature**: Added *Calorie* class to client and enhanced **Add** and **Edit** Command.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"  * What it does: allows the user to add and edit the recommended calorie intake of the client. (Optional attribute)","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"  * Justification: This feature improves the product significantly because a user may want to keep track of the","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    recommended calorie\u0027s intake of its clients which makes it easier for the client to keep track.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"* **New Feature**: Added *Appointment* class to client and enhanced **Add** and **Edit** Command.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"  * What it does: allows the user to add and edit the appointment date and time (coming soon) of the client. (Optional attribute)","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"  * Justification: This feature improves the product significantly because a user may want to keep track of the","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    appointment dates and time of its clients which makes it easier for the client to keep track.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    * Added documentation for the features `add` [\\#62](https://github.com/AY2223S2-CS2103T-T15-2/tp/pull/62)","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    * Added Use case for `add` [\\#67](https://github.com/AY2223S2-CS2103T-T15-2/tp/pull/67)","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    * Added Use case for `exit` and `clear`","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"  [\\#81](https://github.com/AY2223S2-CS2103T-T15-2/tp/pull/81),","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"  [\\#75](https://github.com/AY2223S2-CS2103T-T15-2/tp/pull/75),","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"  [\\#58](https://github.com/AY2223S2-CS2103T-T15-2/tp/pull/58),","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"  [\\#48](https://github.com/AY2223S2-CS2103T-T15-2/tp/pull/48)","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"  * Contributed to forum discussions","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"  [\\109](https://github.com/nus-cs2103-AY2223S2/forum/issues/109),","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"  [\\#114](https://github.com/nus-cs2103-AY2223S2/forum/issues/114),","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"  [\\#150](https://github.com/nus-cs2103-AY2223S2/forum/issues/150)","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jundatan":59}},{"path":"docs/team/kalarisng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"layout: page","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"title: Kalaris Ng\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"### Project: FitBook","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"Fitbook is a desktop tracking book application used for tracking the progress and informations","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"for the clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"It is written in Java.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"\u003e Anything below are to be added soon. They are just placeholders.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"* **Project management**:","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    * User Guide:","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"* **Community**:","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"* **Tools**:","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"kalarisng":49,"jundatan":1}},{"path":"docs/team/oliviajhl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"layout: page","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"title: Jiahui\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"### Project: FitBook","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"Fitbook is a desktop tracking book application used for tracking the progress and informations","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"for the clients. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"It is written in Java.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"\u003e Anything below are to be added soon. They are just placeholders.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"* **Project management**:","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"    * User Guide:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"* **Community**:","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"* **Tools**:","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"OliviaJHL":49,"jundatan":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"This command allows users of the FitBook application to add optional remarks to people in their FitBook and edit it if required. The command should have the following format:","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":" * Changes the remark of an existing client in the FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `FitBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"            + \": Edits the remark of the client identified \"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"            + \"by the index number used in the last client listing. \"","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"     * @param index of the client in the filtered client list to edit the remark","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"     * @param remark of the client to be updated to","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"Create a `RemarkCommandParser` class in the `seedu.fitbook.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"dfordarius"},"content":":information_source: Don’t forget to update `FitBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-02-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"dfordarius"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of client data. We achieve that by working with the `Client` model. Each field in a Client is implemented as a separate class (e.g. a `Name` object represents the client’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a client.","lastModifiedDate":"2023-02-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"dfordarius"},"content":"Create a new `Remark` in `seedu.fitbook.model.client`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"dfordarius"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each client.","lastModifiedDate":"2023-02-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"dfordarius"},"content":"Simply add the following to [`seedu.fitbook.ui.ClientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"dfordarius"},"content":"**`ClientCard.java`:**","lastModifiedDate":"2023-02-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"dfordarius"},"content":"Then insert the following into [`main/resources/view/ClientListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-02-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"dfordarius"},"content":"**`ClientListCard.fxml`:**","lastModifiedDate":"2023-02-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"dfordarius"},"content":"## Modify `Client` to support a `Remark` field","lastModifiedDate":"2023-02-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"dfordarius"},"content":"Since `ClientCard` displays data from a `Client`, we need to update `Client` to get our `Remark` displayed!","lastModifiedDate":"2023-02-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"dfordarius"},"content":"### Modify `Client`","lastModifiedDate":"2023-02-27"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"dfordarius"},"content":"We change the constructor of `Client` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-02-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"dfordarius"},"content":"### Update other usages of `Client`","lastModifiedDate":"2023-02-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"dfordarius"},"content":"Unfortunately, a change to `Client` will cause other commands to break, you will have to modify these commands to use the updated `Client`!","lastModifiedDate":"2023-02-27"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"dfordarius"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Client` class to find these commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"dfordarius"},"content":"FitBook stores data by serializing `JsonAdaptedClient` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedClient` to work with our new `Client`!","lastModifiedDate":"2023-02-27"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"dfordarius"},"content":":exclamation: You must delete FitBook’s storage file located at `/data/fitbook.json` before running it! Not doing so will cause FitBook to default to an empty FitBook!","lastModifiedDate":"2023-02-27"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"dfordarius"},"content":"Now that we have finalized the `Client` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-02-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"dfordarius"},"content":"**`ClientCard.java`:**","lastModifiedDate":"2023-02-27"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"dfordarius"},"content":"public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2023-02-27"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"dfordarius"},"content":"    remark.setText(client.getRemark().value);","lastModifiedDate":"2023-02-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"dfordarius"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Client`. Since all fields in a `Client` are immutable, we create a new instance of a `Client` with the values that we want and","lastModifiedDate":"2023-02-27"},{"lineNumber":329,"author":{"gitId":"dfordarius"},"content":"save it with `FitBookModel#setClient()`.","lastModifiedDate":"2023-02-27"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Client: %1$s\";","lastModifiedDate":"2023-02-27"},{"lineNumber":336,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Client: %1$s\";","lastModifiedDate":"2023-02-27"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":340,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"dfordarius"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":347,"author":{"gitId":"dfordarius"},"content":"        Client editedClient \u003d new Client(","lastModifiedDate":"2023-02-27"},{"lineNumber":348,"author":{"gitId":"dfordarius"},"content":"                clientToEdit.getName(), clientToEdit.getPhone(), clientToEdit.getEmail(),","lastModifiedDate":"2023-02-27"},{"lineNumber":349,"author":{"gitId":"dfordarius"},"content":"                clientToEdit.getAddress(), remark, clientToEdit.getTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"dfordarius"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":352,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-27"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(generateSuccessMessage(editedClient));","lastModifiedDate":"2023-02-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"dfordarius"},"content":"     * {@code clientToEdit}.","lastModifiedDate":"2023-02-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"dfordarius"},"content":"    private String generateSuccessMessage(Client clientToEdit) {","lastModifiedDate":"2023-02-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"dfordarius"},"content":"        return String.format(message, clientToEdit);","lastModifiedDate":"2023-02-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"dfordarius"},"content":"This concludes the tutorial for adding a new `Command` to FitBook.","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":52,"-":349}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Client` class.","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"The `address` field in `Client` is actually an instance of the `seedu.fitbook.model.client.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditClientDescriptor` may require more careful inspection.","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"Let’s try removing references to `Address` in `EditClientDescriptor`.","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"1. Safe delete the field `address` in `EditClientDescriptor`.","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Client` class will require you to modify its constructor.","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `ClientCard` that has not been removed nor identified.","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"A quick look at the `ClientCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"**`ClientCard.java`**","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"**`ClientCard.fxml`**","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"**`invalidClientFitBook.json`:**","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"  \"clients\": [ {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    \"name\": \"Client with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dfordarius":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.fitbook.logic.Logic`.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"A quick look at the `seedu.fitbook.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"dfordarius"},"content":"        Command command \u003d fitBookParser.parseCommand(commandText);","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"            storage.saveFitBook(model.getFitBook());","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `FitBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"dfordarius"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditClientDescriptor`. Recall that we can verify the contents of `editClientDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"dfordarius"},"content":"   public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"dfordarius"},"content":"       Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":193,"author":{"gitId":"dfordarius"},"content":"       Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":194,"author":{"gitId":"dfordarius"},"content":"       if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"dfordarius"},"content":"       model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":198,"author":{"gitId":"dfordarius"},"content":"       model.updateFilteredClientList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-27"},{"lineNumber":199,"author":{"gitId":"dfordarius"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedClient));","lastModifiedDate":"2023-02-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"dfordarius"},"content":"   * it uses the `setClient()` method (defined in the interface `FitBookModel` and implemented in `FitBookModelManager` as per the usual pattern) to update the client data.","lastModifiedDate":"2023-02-27"},{"lineNumber":205,"author":{"gitId":"dfordarius"},"content":"   * it uses the `updateFilteredClientList` method to ask the `FitBookModel` to populate the \u0027filtered list\u0027 with _all_ clients.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":206,"author":{"gitId":"dfordarius"},"content":"     FYI, The \u0027filtered list\u0027 is the list of clients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the clients so that the user can see the edited client along with all other clients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":207,"author":{"gitId":"dfordarius"},"content":"     To provide some context, given below is the class diagram of the `FitBookModel` component. See if you can figure out where the \u0027filtered list\u0027 of clients is being tracked.","lastModifiedDate":"2023-02-27"},{"lineNumber":208,"author":{"gitId":"dfordarius"},"content":"     \u003cimg src\u003d\"../images/FitBookModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":209,"author":{"gitId":"dfordarius"},"content":"   * :bulb: This may be a good time to read through the [`FitBookModel` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2023-02-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"dfordarius"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveFitBook(model.getFitBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-02-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"dfordarius"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonFitBook#saveFitBook()` method which calls the `JsonSerializableFitBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"dfordarius"},"content":"    **`JsonSerializableFitBook` constructor:**","lastModifiedDate":"2023-02-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"dfordarius"},"content":"     * Converts a given {@code ReadOnlyFitBook} into this class for Jackson use.","lastModifiedDate":"2023-02-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"dfordarius"},"content":"     * {@code JsonSerializableFitBook}.","lastModifiedDate":"2023-02-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"dfordarius"},"content":"    public JsonSerializableFitBook(ReadOnlyFitBook source) {","lastModifiedDate":"2023-02-27"},{"lineNumber":234,"author":{"gitId":"dfordarius"},"content":"        clients.addAll(","lastModifiedDate":"2023-02-27"},{"lineNumber":235,"author":{"gitId":"dfordarius"},"content":"            source.getClientList()","lastModifiedDate":"2023-02-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"dfordarius"},"content":"                  .map(JsonAdaptedClient::new)","lastModifiedDate":"2023-02-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"dfordarius"},"content":"1. It appears that a `JsonAdaptedClient` is created for each `Client` and then added to the `JsonSerializableFitBook`.","lastModifiedDate":"2023-02-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"dfordarius"},"content":"    3.  Save the FitBook in the CSV format instead","lastModifiedDate":"2023-02-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"dfordarius"},"content":"    5.  Add a new field to `Client`","lastModifiedDate":"2023-02-27"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"dfordarius"},"content":"    6.  Add a new entity to the FitBook","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":32,"-":269}},{"path":"gradle.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"org.gradle.parallel\u003dfalse","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"org.gradle.jvmargs\u003d-XX:MaxMetaspaceSize\u003d512m -XX:+HeapDumpOnOutOfMemoryError -Xmx1024m -Dfile.encoding\u003dutf-8","lastModifiedDate":"2018-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# TODO: This is a workaround for a JDK11 bug which causes test coverage upload to fail.","lastModifiedDate":"2019-04-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Remove it when https://bugs.openjdk.java.net/browse/JDK-8221253 is fixed.","lastModifiedDate":"2019-04-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"systemProp.jdk.tls.client.protocols\u003d\"TLSv1,TLSv1.1,TLSv1.2\"","lastModifiedDate":"2019-04-23"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"org.gradle.warning.mode \u003d none","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"dfordarius":2,"-":6}},{"path":"src/main/java/seedu/fitbook/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.util.FileUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"dfordarius":3,"-":61}},{"path":"src/main/java/seedu/fitbook/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"dfordarius":1,"-":24}},{"path":"src/main/java/seedu/fitbook/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.Config;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.Version;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.Logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.LogicManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.util.SampleExerciseRoutineDataUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.FitBookStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.JsonFitBookStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.Storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.StorageManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.routine.FitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.routine.JsonFitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.ui.UiManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    protected FitBookModel model;","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FitBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        FitBookStorage fitBookStorage \u003d new JsonFitBookStorage(userPrefs.getFitBookFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutineStorage exerciseBookStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"                new JsonFitBookExerciseRoutineStorage(userPrefs.getFitBookExerciseRoutineFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        storage \u003d new StorageManager(fitBookStorage, userPrefsStorage, exerciseBookStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        model \u003d initFitBookModelManager(storage, userPrefs);","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"     * Returns a {@code FitBookModelManager} with the data from {@code storage}\u0027s FitBook, FitBookExerciseRoutine","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"     * and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"     * The data from the sample FitBook will be used instead if {@code storage}\u0027s FitBook is not found,","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"     * or an empty FitBook will be used instead if errors occur when reading {@code storage}\u0027s FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel initFitBookModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"        ReadOnlyFitBook initialData;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        ReadOnlyFitBookExerciseRoutine initialExerciseRoutineData;","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"        initialData \u003d initFitBookData(storage);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"        initialExerciseRoutineData \u003d initExerciseRoutineData(storage);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"        return new FitBookModelManager(initialData, initialExerciseRoutineData, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"     * Returns a {@code ReadOnlyFitBook} with the initial data from {@code storage}\u0027s FitBook.","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"     * The initial data from the sample FitBook will be used instead if {@code storage}\u0027s FitBook is not found,","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"     * or an empty FitBook will be used instead if errors occur when reading {@code storage}\u0027s FitBook.","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"    private ReadOnlyFitBook initFitBookData(Storage storage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"        Optional\u003cReadOnlyFitBook\u003e addressBookOptional;","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"        ReadOnlyFitBook initialData;","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"            addressBookOptional \u003d storage.readFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"                logger.info(\"Data file not found for FitBook. Will be starting with a sample FitBook\");","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleFitBook);","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"            logger.warning(\"Data file not in the correct format for FitBook. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"                    + \"Will be starting with an empty FitBook\");","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"            initialData \u003d new FitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"            logger.warning(\"Problem while reading from the file for FitBook. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"                    + \"Will be starting with an empty FitBook\");","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"            initialData \u003d new FitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        return initialData;","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"     * Returns a {@code ReadOnlyFitBookExerciseRoutine} with the initial data from {@code storage}\u0027s","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"     * FitBookExerciseRoutine.","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"     * The initial data from the sample FitBookExerciseRoutine will be used instead","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"     * if {@code storage}\u0027s FitBookExerciseRoutine is not found,","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"     * or an empty FitBookExerciseRoutine will be used instead if errors occur","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"     * when reading {@code storage}\u0027s FitBookExerciseRoutine.","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"    private ReadOnlyFitBookExerciseRoutine initExerciseRoutineData(Storage storage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"        ReadOnlyFitBookExerciseRoutine initialExerciseRoutineData;","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"        Optional\u003cReadOnlyFitBookExerciseRoutine\u003e exerciseRoutineOptional;","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"            exerciseRoutineOptional \u003d storage.readFitBookExerciseRoutine();","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"            if (!exerciseRoutineOptional.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"                logger.info(\"Data file not found for Exercise Routine. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"                        + \"Will be starting with a sample Exercise Routine\");","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"            initialExerciseRoutineData \u003d exerciseRoutineOptional","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"                    .orElseGet(SampleExerciseRoutineDataUtil::getSampleFitBookExerciseRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"            logger.warning(\"Data file for Exercise Routine not in the correct format. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"                    + \"Will be starting with an empty Exercise Routine\");","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"            initialExerciseRoutineData \u003d new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"            logger.warning(\"Problem while reading from the file for Exercise Routine.\"","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"                    + \" Will be starting with an empty Exercise Routine\");","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"            initialExerciseRoutineData \u003d new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"        return initialExerciseRoutineData;","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"dfordarius"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FitBook\");","lastModifiedDate":"2023-02-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"dfordarius"},"content":"        logger.info(\"Starting FitBook \" + MainApp.VERSION);","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"dfordarius"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping FitBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jundatan":84,"dfordarius":15,"-":137}},{"path":"src/main/java/seedu/fitbook/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":62}},{"path":"src/main/java/seedu/fitbook/commons/core/CsvConfig.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":" * Container for Csv related extensions.","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"public class CsvConfig {","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"    public static final String CSV_EXTENSION \u003d \".csv\";","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    public static final String FILE_NAME_CLIENT \u003d \"ClientFitBook\";","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    public static final String FILE_NAME_ROUTINE \u003d \"RoutineFitBook\";","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    public static final String COMMA_SEPARATOR \u003d \",\";","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    public static final String WHITE_SPACE \u003d \"----\";","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    public static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":14}},{"path":"src/main/java/seedu/fitbook/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":78}},{"path":"src/main/java/seedu/fitbook/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":111}},{"path":"src/main/java/seedu/fitbook/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    public static final String MESSAGE_NO_KEYWORD \u003d \"Keyword parameter cannot be empty. \\n%1$s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    public static final String MESSAGE_NO_PREFIX \u003d \"Prefix parameter cannot be empty. \\n%1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public static final String MESSAGE_INVALID_PREFIX \u003d \"Invalid prefix inputted! \\n%1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d client(s) listed!\";","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_INVALID_ROUTINE_DISPLAYED_INDEX \u003d \"The routine index provided is invalid\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_ROUTINES_LISTED_OVERVIEW \u003d \"%1$d routine(s) listed!\";","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_DISPLAYED_INDEX \u003d \"The exercise index provided is invalid\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kalarisng":3,"jundatan":3,"dfordarius":3,"-":9}},{"path":"src/main/java/seedu/fitbook/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":115}},{"path":"src/main/java/seedu/fitbook/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core.index;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"dfordarius":1,"-":53}},{"path":"src/main/java/seedu/fitbook/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":10}},{"path":"src/main/java/seedu/fitbook/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":1,"-":20}},{"path":"src/main/java/seedu/fitbook/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.MainApp;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dfordarius":2,"-":40}},{"path":"src/main/java/seedu/fitbook/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":1,"-":34}},{"path":"src/main/java/seedu/fitbook/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Config;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"dfordarius":3,"-":20}},{"path":"src/main/java/seedu/fitbook/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":82}},{"path":"src/main/java/seedu/fitbook/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":3,"-":140}},{"path":"src/main/java/seedu/fitbook/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        boolean contains \u003d false;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        String preppedWord \u003d word;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        String[] wordsInPreppedSentence \u003d {preppedSentence};","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        if (Arrays.stream(wordsInPreppedSentence).anyMatch(preppedWord::equalsIgnoreCase)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"            contains \u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        } else if (preppedSentence.toLowerCase().contains(preppedWord.toLowerCase())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"            contains \u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        return contains;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kalarisng":9,"dfordarius":2,"-":62}},{"path":"src/main/java/seedu/fitbook/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     * Returns the FitBook.","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * @see seedu.fitbook.model.FitBookModel#getFitBook()","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    ReadOnlyFitBook getFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"     * Returns the user prefs\u0027 FitBook file path.","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    Path getFitBookFilePath();","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    ObservableList\u003cRoutine\u003e getFilteredRoutineList();","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dfordarius":17,"-":36}},{"path":"src/main/java/seedu/fitbook/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.Command;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.parser.FitBookParser;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.Storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    private final FitBookModel model;","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    private final FitBookParser fitBookParser;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"     * Constructs a {@code LogicManager} with the given {@code FitBookModel} and {@code Storage}.","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    public LogicManager(FitBookModel model, Storage storage) {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        fitBookParser \u003d new FitBookParser();","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        Command command \u003d fitBookParser.parseCommand(commandText);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"            storage.saveFitBook(model.getFitBook());","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"            storage.saveFitBookExerciseRoutine(model.getFitBookExerciseRoutine());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"    public ReadOnlyFitBook getFitBook() {","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        return model.getFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"    public Path getFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        return model.getFitBookFilePath();","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"    public ObservableList\u003cRoutine\u003e getFilteredRoutineList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"        return model.getFilteredRoutineList();","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jundatan":16,"dfordarius":16,"-":56}},{"path":"src/main/java/seedu/fitbook/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":" * Adds a client to the FitBook.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the FitBook. \"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"            + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"            + PREFIX_GOAL + \"GOAL \"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"            + \"[\" + PREFIX_CALORIE + \"CALORIE_INTAKE]\"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"            + \"[\" + PREFIX_APPOINTMENT + \"APPOINTMENT_TIME]...\"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"            + PREFIX_CALORIE + \"2100 \"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"            + PREFIX_WEIGHT + \"23.2 \"","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"            + PREFIX_GOAL + \"lose weight \"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"            + PREFIX_APPOINTMENT + \"13-12-2200 \"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney \";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the FitBook\";","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    private final Client toAdd;","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"     * Creates an AddCommand to add the specified {@code Client}","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    public AddCommand(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        toAdd \u003d client;","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jundatan":8,"dfordarius":29,"-":43}},{"path":"src/main/java/seedu/fitbook/logic/commands/AddRoutineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ROUTINE;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * Adds a routine to the FitBook.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"public class AddRoutineCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    public static final String COMMAND_WORD \u003d \"addRoutine\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a routine to the FitBook. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"            + PREFIX_ROUTINE + \"ROUTINE NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"            + \"[\" + PREFIX_EXERCISE + \"EXERCISE]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"            + PREFIX_ROUTINE + \"Cardio \"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"            + PREFIX_EXERCISE + \"3x5 1km Jog \"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"            + PREFIX_EXERCISE + \"3x10 Jumping Jacks \";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New routine added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_DUPLICATE_ROUTINE \u003d \"This routine already exists in the FitBook\";","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    private final Routine toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     * Creates an AddCommand to add the specified {@code Client}","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    public AddRoutineCommand(Routine routine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        requireNonNull(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        toAdd \u003d routine;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        if (model.hasRoutine(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ROUTINE);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        model.addRoutine(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"                || (other instanceof AddRoutineCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 toAdd.equals(((AddRoutineCommand) other).toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":58}},{"path":"src/main/java/seedu/fitbook/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Clears Client list in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"FitBook has been cleared!\";","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        model.setFitBook(new FitBook());","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":7,"-":16}},{"path":"src/main/java/seedu/fitbook/logic/commands/ClearRoutinesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Clears the FitBook routine list.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class ClearRoutinesCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    public static final String COMMAND_WORD \u003d \"clearRoutines\";","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Routines in FitBook has been cleared!\";","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        model.setFitBookExerciseRoutine(new FitBookExerciseRoutine());","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"dfordarius":23}},{"path":"src/main/java/seedu/fitbook/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"     * @param model {@code FitBookModel} which the command should operate on.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public abstract CommandResult execute(FitBookModel model) throws CommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":5,"-":15}},{"path":"src/main/java/seedu/fitbook/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":1,"-":70}},{"path":"src/main/java/seedu/fitbook/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":" * Deletes a client identified using it\u0027s displayed index from FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, clientToDelete));","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":14,"-":39}},{"path":"src/main/java/seedu/fitbook/logic/commands/DeleteRoutineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":" * Deletes a Routine identified using it\u0027s displayed index from the FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"public class DeleteRoutineCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public static final String COMMAND_WORD \u003d \"deleteRoutine\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"            + \": Deletes the routine identified by the index number used in the displayed routine list.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_DELETE_ROUTINE_SUCCESS \u003d \"Deleted Routine: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    public DeleteRoutineCommand(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        List\u003cRoutine\u003e lastShownList \u003d model.getFilteredRoutineList();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ROUTINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        Routine routineToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        model.deleteRoutine(routineToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ROUTINE_SUCCESS, routineToDelete));","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof DeleteRoutineCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteRoutineCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"dfordarius":53}},{"path":"src/main/java/seedu/fitbook/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.model.FitBookModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":" * Edits the details of an existing client in the FitBook.","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"            + \"[\" + PREFIX_CALORIE + \"CALORIE] \"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"            + \"[\" + PREFIX_APPOINTMENT + \"APPOINTMENT_TIME]...\"","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"            + \"[\" + PREFIX_GOAL + \"GOAL] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in the FitBook.\";","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"    public EditCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedClient));","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"        Phone updatedPhone \u003d editClientDescriptor.getPhone().orElse(clientToEdit.getPhone());","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"        Email updatedEmail \u003d editClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"        Address updatedAddress \u003d editClientDescriptor.getAddress().orElse(clientToEdit.getAddress());","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        Calorie updatedCalorie \u003d editClientDescriptor.getCalorie().orElse(clientToEdit.getCalorie());","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"        Weight updatedWeight \u003d editClientDescriptor.getWeight().orElse(clientToEdit.getWeight());","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"        Gender updatedGender \u003d editClientDescriptor.getGender().orElse(clientToEdit.getGender());","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"        Goal updatedGoal \u003d editClientDescriptor.getGoal().orElse(clientToEdit.getGoal());","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"        Set\u003cAppointment\u003e updatedAppointment \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"                editClientDescriptor.getAppointments().orElse(clientToEdit.getAppointments());","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedAppointment, updatedWeight,","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"dfordarius"},"content":"                updatedGender, updatedCalorie, updatedGoal, updatedTags);","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"dfordarius"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"        private Calorie calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"        private Weight weight;","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"        private Gender gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"        private Goal goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"        private Set\u003cAppointment\u003e appointments;","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"            setCalorie(toCopy.calorie);","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"dfordarius"},"content":"            setWeight(toCopy.weight);","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"dfordarius"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"dfordarius"},"content":"            setGoal(toCopy.goal);","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"            setAppointments(toCopy.appointments);","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"dfordarius"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, appointments, gender, weight,","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"dfordarius"},"content":"                    calorie, goal, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"dfordarius"},"content":"        public void setWeight(Weight weight) {","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"dfordarius"},"content":"            this.weight \u003d weight;","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"dfordarius"},"content":"        public Optional\u003cWeight\u003e getWeight() {","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"dfordarius"},"content":"            return Optional.ofNullable(weight);","lastModifiedDate":"2023-02-22"},{"lineNumber":224,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"dfordarius"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"dfordarius"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"dfordarius"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"dfordarius"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"dfordarius"},"content":"        public void setGoal(Goal goal) {","lastModifiedDate":"2023-03-07"},{"lineNumber":233,"author":{"gitId":"dfordarius"},"content":"            this.goal \u003d goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":234,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":235,"author":{"gitId":"dfordarius"},"content":"        public Optional\u003cGoal\u003e getGoal() {","lastModifiedDate":"2023-03-07"},{"lineNumber":236,"author":{"gitId":"dfordarius"},"content":"            return Optional.ofNullable(goal);","lastModifiedDate":"2023-03-07"},{"lineNumber":237,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":238,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"jundatan"},"content":"        /**","lastModifiedDate":"2023-02-26"},{"lineNumber":240,"author":{"gitId":"jundatan"},"content":"         * Sets {@code appointments} to this object\u0027s {@code appointments}.","lastModifiedDate":"2023-02-26"},{"lineNumber":241,"author":{"gitId":"jundatan"},"content":"         * A defensive copy of {@code appointments} is used internally.","lastModifiedDate":"2023-02-26"},{"lineNumber":242,"author":{"gitId":"jundatan"},"content":"         */","lastModifiedDate":"2023-02-26"},{"lineNumber":243,"author":{"gitId":"jundatan"},"content":"        public void setAppointments(Set\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":244,"author":{"gitId":"jundatan"},"content":"            this.appointments \u003d (appointments !\u003d null) ? new HashSet\u003c\u003e(appointments) : null;","lastModifiedDate":"2023-02-26"},{"lineNumber":245,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":246,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":247,"author":{"gitId":"jundatan"},"content":"        /**","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"jundatan"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-26"},{"lineNumber":249,"author":{"gitId":"jundatan"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-02-26"},{"lineNumber":250,"author":{"gitId":"jundatan"},"content":"         * Returns {@code Optional#empty()} if {@code appointments} is null.","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"jundatan"},"content":"         */","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"jundatan"},"content":"        public Optional\u003cSet\u003cAppointment\u003e\u003e getAppointments() {","lastModifiedDate":"2023-02-26"},{"lineNumber":253,"author":{"gitId":"jundatan"},"content":"            return (appointments !\u003d null) ? Optional.of(Collections.unmodifiableSet(appointments)) : Optional.empty();","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":255,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"jundatan"},"content":"        public void setCalorie(Calorie calorie) {","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"jundatan"},"content":"            this.calorie \u003d calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":276,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":277,"author":{"gitId":"jundatan"},"content":"        public Optional\u003cCalorie\u003e getCalorie() {","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"jundatan"},"content":"            return Optional.ofNullable(calorie);","lastModifiedDate":"2023-02-26"},{"lineNumber":279,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":280,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"dfordarius"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"dfordarius"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2023-02-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":300,"author":{"gitId":"dfordarius"},"content":"                    \u0026\u0026 getWeight().equals(e.getWeight())","lastModifiedDate":"2023-02-22"},{"lineNumber":301,"author":{"gitId":"dfordarius"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2023-02-22"},{"lineNumber":302,"author":{"gitId":"dfordarius"},"content":"                    \u0026\u0026 getGoal().equals(e.getGoal())","lastModifiedDate":"2023-03-08"},{"lineNumber":303,"author":{"gitId":"dfordarius"},"content":"                    \u0026\u0026 getCalorie().equals(e.getCalorie())","lastModifiedDate":"2023-03-08"},{"lineNumber":304,"author":{"gitId":"jundatan"},"content":"                    \u0026\u0026 getAppointments().equals(e.getAppointments())","lastModifiedDate":"2023-02-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jundatan":37,"dfordarius":103,"-":168}},{"path":"src/main/java/seedu/fitbook/logic/commands/EditRoutineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE_NUMBER;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ROUTINE;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.model.FitBookModel.PREDICATE_SHOW_ALL_ROUTINES;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":" * Edits the details of an existing routine in the FitBook.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"public class EditRoutineCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    public static final String COMMAND_WORD \u003d \"editRoutine\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the exercises of the routine \"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"            + \"by the index number of the routine and exercise used in the displayed routine list. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"            + \"Also edits the routine name by the index number of the routine used in the displayed routine list.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"            + PREFIX_EXERCISE_NUMBER + \"EXERCISE_NUMBER (must be a positive integer) \"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"            + PREFIX_EXERCISE + \"EXERCISE\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"            + PREFIX_EXERCISE_NUMBER + \"1 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"            + PREFIX_EXERCISE + \"3x10 Dumbbell Curls \"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"            + PREFIX_EXERCISE + \"5x11 Sit Ups\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"            + PREFIX_ROUTINE + \"ROUTINE_NAME\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"            + PREFIX_ROUTINE + \"HIIT\";","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_EDIT_ROUTINE_SUCCESS \u003d \"Edited Routine: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_DUPLICATE_ROUTINE \u003d \"This routine already exists in the FitBook.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    private final Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    private final EditRoutineDescriptor editRoutineDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"     * @param index of the routine in the filtered routine list to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"     * @param editRoutineDescriptor details to edit the routine with","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"    public EditRoutineCommand(Index index, EditRoutineDescriptor editRoutineDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        requireNonNull(editRoutineDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        this.editRoutineDescriptor \u003d new EditRoutineDescriptor(editRoutineDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        List\u003cRoutine\u003e lastShownList \u003d model.getFilteredRoutineList();","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ROUTINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"        Routine routineToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"        Routine editedRoutine \u003d createEditedRoutine(routineToEdit, editRoutineDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"        if (!routineToEdit.isSameRoutine(editedRoutine) \u0026\u0026 model.hasRoutine(editedRoutine)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ROUTINE);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"        model.setRoutine(routineToEdit, editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"        model.updateFilteredRoutineList(PREDICATE_SHOW_ALL_ROUTINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ROUTINE_SUCCESS, editedRoutine));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"     * Creates and returns a {@code Routine} with the details of {@code routineToEdit}","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"     * edited with {@code editRoutineDescriptor}.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"    private static Routine createEditedRoutine(Routine routineToEdit, EditRoutineDescriptor editRoutineDescriptor)","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"        assert routineToEdit !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"        List\u003cExercise\u003e updatedExercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"        RoutineName updatedRoutineName \u003d editRoutineDescriptor.getRoutineName().orElse(routineToEdit.getRoutineName());","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"        if (editRoutineDescriptor.getExercise().isPresent() \u0026\u0026 editRoutineDescriptor.getExerciseIndex().isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"            int changeIndex \u003d editRoutineDescriptor.getExerciseIndex().get().getZeroBased();","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"            Exercise changeExercise \u003d editRoutineDescriptor.getExercise().get();","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"            if (changeIndex \u003e\u003d routineToEdit.getExercises().size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_EXERCISE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"            routineToEdit.getExercises().remove(changeIndex);","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"            routineToEdit.getExercises().add(changeIndex, changeExercise);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"        updatedExercise \u003d new ArrayList\u003c\u003e(routineToEdit.getExercises());","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"        return new Routine(updatedRoutineName, updatedExercise);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        if (!(other instanceof EditRoutineCommand)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand e \u003d (EditRoutineCommand) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 editRoutineDescriptor.equals(e.editRoutineDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"     * Stores the details to edit the routine with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"     * corresponding field value of the routine.","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"    public static class EditRoutineDescriptor {","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"        private RoutineName routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"        private Index exerciseIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"        private Exercise exerciseChange;","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"        public EditRoutineDescriptor() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"         * A defensive copy of {@code exercises} is used internally.","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"        public EditRoutineDescriptor(EditRoutineDescriptor toCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"            setRoutineName(toCopy.routineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"            setExercise(toCopy.exerciseChange);","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"            setExerciseIndex(toCopy.exerciseIndex);","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"            return CollectionUtil.isAnyNonNull(routineName, exerciseIndex, exerciseChange);","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"        public void setExerciseIndexNull() {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"            this.exerciseIndex \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"        public void setExerciseNull() {","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"            this.exerciseChange \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"        public void setRoutineNameNull() {","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"            this.routineName \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"        public void setRoutineName(RoutineName routineName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"            this.routineName \u003d routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"        public Optional\u003cRoutineName\u003e getRoutineName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"            return Optional.ofNullable(routineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"        public void setExercise(Exercise exerciseChange) {","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"            this.exerciseChange \u003d exerciseChange;","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"        public Optional\u003cExercise\u003e getExercise() {","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"            return Optional.ofNullable(exerciseChange);","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"        public void setExerciseIndex(Index exerciseIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"            this.exerciseIndex \u003d exerciseIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"        public Optional\u003cIndex\u003e getExerciseIndex() {","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"            return Optional.ofNullable(exerciseIndex);","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"jundatan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"jundatan"},"content":"                return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"jundatan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"jundatan"},"content":"            if (!(other instanceof EditRoutineDescriptor)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"jundatan"},"content":"                return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"jundatan"},"content":"            // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"jundatan"},"content":"            EditRoutineDescriptor e \u003d (EditRoutineDescriptor) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"            return getRoutineName().equals(e.getRoutineName())","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"jundatan"},"content":"                    \u0026\u0026 getExerciseIndex().equals(e.getExerciseIndex())","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"jundatan"},"content":"                    \u0026\u0026 getExercise().equals(e.getExercise());","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":212}},{"path":"src/main/java/seedu/fitbook/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting FitBook as requested ...\";","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dfordarius":4,"-":15}},{"path":"src/main/java/seedu/fitbook/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.CsvConfig.CSV_EXTENSION;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.CsvConfig.FILE_NAME_CLIENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.io.File;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":" * Exports the client details into a csv file.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Client File has been exported.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_FAILURE \u003d \"File could not be exported. Ensure the csv file is not opened in the \"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"            + \"background \";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        String feedback \u003d writeToCsvFile(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     * Writes to the csv file with details of {@code Client}","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     * @param model model {@code FitBookModel} which the command should operate on.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    public static String writeToCsvFile(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e clients \u003d model.getFilteredClientList().stream().collect(Collectors.toList());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"            File csv \u003d new File(FILE_NAME_CLIENT + CSV_EXTENSION);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"            PrintWriter pw \u003d new PrintWriter(csv);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"            writeHeaderRow(pw);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"            writeClientRows(pw, clients);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        return ExportCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"     * Writes the header row in the csv file.","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"     * @param pw the PrintWriter responsible for writing the header row into the csv file.","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    public static void writeHeaderRow(PrintWriter pw) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        pw.printf(\"Name, Phone Number, Email, Address, Weight, Gender\\n\");","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"     * Writes the client detail rows into the csv file.","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"     * @param pw the PrintWriter responsible for writing rows into the csv file.","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"     * @param clients List of clients stored in FitBook.","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"    public static void writeClientRows(PrintWriter pw, List\u003cClient\u003e clients) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        for (Client client : clients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"            pw.printf(\"%s, %s, %s, %s, %s, %s\\n\", client.getName(), client.getPhone(), client.getEmail(),","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"                    client.getAddress().toString().replaceAll(\"[^a-zA-Z0-9]\", \" \"),","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"                    client.getWeight(), client.getGender());","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        pw.close();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"dfordarius":74}},{"path":"src/main/java/seedu/fitbook/logic/commands/ExportRoutineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.CsvConfig.COMMA_SEPARATOR;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.CsvConfig.CSV_EXTENSION;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.CsvConfig.FILE_NAME_ROUTINE;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.CsvConfig.NEW_LINE;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.CsvConfig.WHITE_SPACE;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import java.io.File;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":" * Exports the routine and exercise details into a csv file.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"public class ExportRoutineCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public static final String COMMAND_WORD \u003d \"exportRoutine\";","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"RoutineFile has been exported.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_FAILURE \u003d \"File could not be exported. Ensure the csv file is not opened in the \"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            + \"background \";","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        String feedback \u003d writeToCsvFile(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"     * Writes to the csv file with details of {@code Routine}","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"     * @param model model {@code FitBookModel} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    public static String writeToCsvFile(FitBookModel model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        List\u003cRoutine\u003e routines \u003d model.getFilteredRoutineList().stream().collect(Collectors.toList());","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"            File csv \u003d new File(FILE_NAME_ROUTINE + CSV_EXTENSION);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"            PrintWriter pw \u003d new PrintWriter(csv);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"            writeHeaderRow(pw);","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"            writeRoutineRows(pw, routines);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"        return ExportRoutineCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"     * Writes the header row in the csv file.","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"     * @param pw the PrintWriter responsible for writing the header row into the csv file.","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"    public static void writeHeaderRow(PrintWriter pw) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        pw.printf(\"Routine, Exercises\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"     * Writes the routine and exercise rows into the csv file.","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"     * @param pw the PrintWriter responsible for writing rows into the csv file.","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"     * @param routines List of routines stored in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    public static void writeRoutineRows(PrintWriter pw, List\u003cRoutine\u003e routines) {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        for (Routine routine : routines) {","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"            s.append(routine.getRoutineName().toString() + COMMA_SEPARATOR);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"            for (Exercise exercise : routine.getExercises()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"                s.append(exercise.exerciseName + WHITE_SPACE);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"            s.append(NEW_LINE);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        pw.print(s);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        pw.close();","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":82}},{"path":"src/main/java/seedu/fitbook/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":" * Finds and lists all clients in FitBook whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose details matches or contains \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"            + \"Parameters: PREFIX, KEYWORD/S\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex or \" + COMMAND_WORD + \" p/91234567\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"    public static final String PREFIX_USAGE \u003d COMMAND_WORD + \": Finds all clients whose details matches or contains \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"            + \"Available Prefixes: n, p, e, a, t, w, g, cal, app, gl\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex or \" + COMMAND_WORD + \" p/91234567\";","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"    private List\u003cPredicate\u003cClient\u003e\u003e predicateList;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"    public FindCommand(List\u003cPredicate\u003cClient\u003e\u003e predicateList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        this.predicateList \u003d predicateList;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"        Predicate\u003cClient\u003e combinedPredicates \u003d predicateList.stream().reduce(x -\u003e false, Predicate::or);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        model.updateFilteredClientList(combinedPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 predicateList.equals(((FindCommand) other).predicateList)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kalarisng":19,"dfordarius":6,"-":26}},{"path":"src/main/java/seedu/fitbook/logic/commands/FindRoutineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.RoutineNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Finds and lists all routines in fitbook whose routine name contains any of the argument keywords.","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"public class FindRoutineCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public static final String COMMAND_WORD \u003d \"findRoutine\";","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all routine whose names contain any of \"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"            + \"Example: \" + COMMAND_WORD + \" cardio\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    private final RoutineNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    public FindRoutineCommand(RoutineNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredRoutineList(predicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"                String.format(Messages.MESSAGE_ROUTINES_LISTED_OVERVIEW, model.getFilteredRoutineList().size()));","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof FindRoutineCommand // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 predicate.equals(((FindRoutineCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"dfordarius":41}},{"path":"src/main/java/seedu/fitbook/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":3,"-":18}},{"path":"src/main/java/seedu/fitbook/logic/commands/ListClientsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.model.FitBookModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Lists all clients in FitBook to the user.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"public class ListClientsCommand extends Command {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"    public static final String COMMAND_WORD \u003d \"listClients\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"OliviaJHL":2,"dfordarius":7,"-":15}},{"path":"src/main/java/seedu/fitbook/logic/commands/ListRoutinesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.model.FitBookModel.PREDICATE_SHOW_ALL_ROUTINES;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Lists all routines in FitBook to the user.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class ListRoutinesCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    public static final String COMMAND_WORD \u003d \"listRoutines\";","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all Routines\";","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    public CommandResult execute(FitBookModel model) {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredRoutineList(PREDICATE_SHOW_ALL_ROUTINES);","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"dfordarius":25}},{"path":"src/main/java/seedu/fitbook/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"dfordarius":1,"-":16}},{"path":"src/main/java/seedu/fitbook/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"                        PREFIX_APPOINTMENT, PREFIX_WEIGHT, PREFIX_GENDER, PREFIX_CALORIE, PREFIX_GOAL, PREFIX_TAG);","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_WEIGHT,","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"                PREFIX_GENDER, PREFIX_EMAIL)","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        Set\u003cAppointment\u003e appointmentList \u003d ParserUtil.parseAppointments(argMultimap.getAllValues(PREFIX_APPOINTMENT));","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        Calorie calorie \u003d optionalPresentCaloriePrefix(argMultimap);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        Weight weight \u003d ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get());","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        Goal goal \u003d ParserUtil.parseGoal(argMultimap.getValue(PREFIX_GOAL).get());","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        Client client \u003d new Client(name, phone, email, address, appointmentList, weight, gender, calorie, goal,","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"                tagList);","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        return new AddCommand(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"     * Returns the Calorie if the prefix is not empty {@code Optional} values in the given","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"     * @param argumentMultimap The argument multimap used to find the prefix and its values.","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"     * @return A new Calorie","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"     * @throws ParseException if there is an incorrect value for the Calorie.","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"    private static Calorie optionalPresentCaloriePrefix(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"        if (argumentMultimap.getValue(PREFIX_CALORIE).isPresent()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"            return ParserUtil.parseCalorie(argumentMultimap.getValue(PREFIX_CALORIE).get());","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"        return new Calorie(\"0000\");","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jundatan":15,"dfordarius":35,"-":39}},{"path":"src/main/java/seedu/fitbook/logic/parser/AddRoutineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ROUTINE;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddRoutineCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" * Parses input arguments and creates a new AddRoutineCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"public class AddRoutineCommandParser implements Parser\u003cAddRoutineCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddRoutineCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     * and returns an AddRoutineCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public AddRoutineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ROUTINE, PREFIX_EXERCISE);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ROUTINE)","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRoutineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        RoutineName routineName \u003d ParserUtil.parseRoutineName(argMultimap.getValue(PREFIX_ROUTINE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        List\u003cExercise\u003e exerciseList \u003d ParserUtil.parseExercises(argMultimap.getAllValues(PREFIX_EXERCISE));","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        Routine routine \u003d new Routine(routineName, exerciseList);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        return new AddRoutineCommand(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":47}},{"path":"src/main/java/seedu/fitbook/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"dfordarius":1,"-":59}},{"path":"src/main/java/seedu/fitbook/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"dfordarius":1,"-":147}},{"path":"src/main/java/seedu/fitbook/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    public static final Prefix PREFIX_CALORIE \u003d new Prefix(\"cal/\");","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w/\");","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"app/\");","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public static final Prefix PREFIX_GOAL \u003d new Prefix(\"gl/\");","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    public static final Prefix PREFIX_ROUTINE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public static final Prefix PREFIX_EXERCISE \u003d new Prefix(\"ex/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public static final Prefix PREFIX_EXERCISE_NUMBER \u003d new Prefix(\"exno/\");","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jundatan":5,"dfordarius":5,"-":13}},{"path":"src/main/java/seedu/fitbook/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dfordarius":5,"-":24}},{"path":"src/main/java/seedu/fitbook/logic/parser/DeleteRoutineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteRoutineCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" * Parses input arguments and creates a new DeleteRoutineCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"public class DeleteRoutineCommandParser implements Parser\u003cDeleteRoutineCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteRoutineCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     * and returns a DeleteRoutineCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    public DeleteRoutineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"            return new DeleteRoutineCommand(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteRoutineCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"dfordarius":29}},{"path":"src/main/java/seedu/fitbook/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"                        PREFIX_APPOINTMENT, PREFIX_WEIGHT, PREFIX_GENDER, PREFIX_GOAL, PREFIX_CALORIE, PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"            editClientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        if (argMultimap.getValue(PREFIX_CALORIE).isPresent()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"            editClientDescriptor.setCalorie(ParserUtil.parseCalorie(argMultimap.getValue(PREFIX_CALORIE).get()));","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"            editClientDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get()));","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"            editClientDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        if (argMultimap.getValue(PREFIX_GOAL).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"            editClientDescriptor.setGoal(ParserUtil.parseGoal(argMultimap.getValue(PREFIX_GOAL).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"        parseAppointmentsForEdit(argMultimap.getAllValues(PREFIX_APPOINTMENT))","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"                .ifPresent(editClientDescriptor::setAppointments);","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"        return new EditCommand(index, editClientDescriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"    private Optional\u003cSet\u003cAppointment\u003e\u003e parseAppointmentsForEdit(Collection\u003cString\u003e appointments) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"        assert appointments !\u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"        if (appointments.isEmpty()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"        Collection\u003cString\u003e appointmentSet \u003d appointments.size() \u003d\u003d 1 \u0026\u0026 appointments.contains(\"\")","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"                ? Collections.emptySet() : appointments;","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"        return Optional.of(ParserUtil.parseAppointments(appointmentSet));","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jundatan":20,"dfordarius":37,"-":58}},{"path":"src/main/java/seedu/fitbook/logic/parser/EditRoutineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_EXERCISE_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE_NUMBER;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ROUTINE;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand.EditRoutineDescriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":" * Parses input arguments and creates a new EditRoutineCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"public class EditRoutineCommandParser implements Parser\u003cEditRoutineCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditRoutineCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     * and returns an EditRoutineCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public EditRoutineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ROUTINE, PREFIX_EXERCISE, PREFIX_EXERCISE_NUMBER);","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"                    EditRoutineCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        checkRoutineCommandConflictFormat(argMultimap);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor editRoutineDescriptor \u003d new EditRoutineDescriptor();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        if (argMultimap.getValue(PREFIX_ROUTINE).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"            editRoutineDescriptor.setRoutineName(ParserUtil","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"                    .parseRoutineName(argMultimap.getValue(PREFIX_ROUTINE).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        if (argMultimap.getValue(PREFIX_EXERCISE).isPresent()","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"                || argMultimap.getValue(PREFIX_EXERCISE_NUMBER).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"            editRoutineDescriptor \u003d parseExerciseForEdit(argMultimap, editRoutineDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        if (!editRoutineDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(EditRoutineCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        return new EditRoutineCommand(index, editRoutineDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"     * Parses {@code Exercises exercise} into a {@code Exercise} if {@code exercise}\u0027s part is non-empty.","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"    private EditRoutineDescriptor parseExerciseForEdit(ArgumentMultimap argMultimap,","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"            EditRoutineDescriptor editRoutineDescriptor) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        if (argMultimap.getValue(PREFIX_EXERCISE_NUMBER).isPresent()","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_EXERCISE).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"            String exerciseNumber \u003d argMultimap.getValue(PREFIX_EXERCISE_NUMBER).get();","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"            String exerciseName \u003d argMultimap.getValue(PREFIX_EXERCISE).get();","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"            EditRoutineDescriptor currEditRoutineDescriptor \u003d new EditRoutineDescriptor(editRoutineDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"            try {","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"                Exercise exercise \u003d new Exercise(exerciseName);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"                Index exerciseNumberIndex \u003d ParserUtil.parseIndex(exerciseNumber);","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"                currEditRoutineDescriptor.setExercise(exercise);","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"                currEditRoutineDescriptor.setExerciseIndex(exerciseNumberIndex);","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_EXERCISE_DISPLAYED_INDEX,","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"                        EditRoutineCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"            } catch (IllegalArgumentException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"                throw new ParseException(Exercise.MESSAGE_CONSTRAINTS, pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"            return currEditRoutineDescriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"            checkExerciseFormatPresent(argMultimap);","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"            return new EditRoutineDescriptor();","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"     * Checks if {@code exercise}\u0027s format part is non-empty.","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    private void checkExerciseFormatPresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EXERCISE_NUMBER, PREFIX_EXERCISE)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"                    EditRoutineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"     * Checks if {@code exercise}\u0027s format consists of mix exercise and routineName parts.","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"    private void checkRoutineCommandConflictFormat(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"        boolean isMixCommand \u003d argMultimap.getValue(PREFIX_ROUTINE).isPresent()","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 (argMultimap.getValue(PREFIX_EXERCISE).isPresent()","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"                || argMultimap.getValue(PREFIX_EXERCISE_NUMBER).isPresent());","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"        if (isMixCommand) {","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"                    EditRoutineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":119}},{"path":"src/main/java/seedu/fitbook/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_PREFIX;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_NO_KEYWORD;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_NO_PREFIX;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.CalorieContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.GenderContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.predicate.GoalContainsKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.WeightContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"                        PREFIX_APPOINTMENT, PREFIX_WEIGHT, PREFIX_GENDER, PREFIX_CALORIE, PREFIX_TAG,","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"                        PREFIX_GOAL);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        checkParseStringFormat(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e phoneKeywords \u003d argMultimap.getAllValues(PREFIX_PHONE);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e emailKeywords \u003d argMultimap.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e addressKeywords \u003d argMultimap.getAllValues(PREFIX_ADDRESS);","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e tagKeywords \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e weightKeywords \u003d argMultimap.getAllValues(PREFIX_WEIGHT);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e genderKeywords \u003d argMultimap.getAllValues(PREFIX_GENDER);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e calorieKeywords \u003d argMultimap.getAllValues(PREFIX_CALORIE);","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        List\u003cString\u003e goalKeywords \u003d argMultimap.getAllValues(PREFIX_GOAL);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e appointmentKeywords \u003d argMultimap.getAllValues(PREFIX_APPOINTMENT);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"        if (!nameKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"        if (!phoneKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new PhoneContainsKeywordsPredicate(phoneKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"        if (!emailKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new EmailContainsKeywordsPredicate(emailKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"        if (!addressKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new AddressContainsKeywordsPredicate(addressKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"        if (!tagKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new TagContainsKeywordsPredicate(tagKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"        if (!weightKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new WeightContainsKeywordsPredicate(weightKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"kalarisng"},"content":"        if (!genderKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new GenderContainsKeywordsPredicate(genderKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"kalarisng"},"content":"        if (!calorieKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new CalorieContainsKeywordsPredicate(calorieKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        if (!goalKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"            predicates.add(new GoalContainsKeywordsPredicate(goalKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"kalarisng"},"content":"        if (!appointmentKeywords.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"kalarisng"},"content":"            predicates.add(new AppointmentContainsKeywordsPredicate(appointmentKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"kalarisng"},"content":"        return new FindCommand(predicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"kalarisng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"kalarisng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"kalarisng"},"content":"    private static boolean areAvailablePrefixes(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"kalarisng"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"kalarisng"},"content":"     * Checks the format of the given {@code String} of arguments in the context of the FindCommand.","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"kalarisng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"kalarisng"},"content":"    public void checkParseStringFormat(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"kalarisng"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"kalarisng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"kalarisng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"kalarisng"},"content":"        String patternString \u003d \"([a-zA-Z]+/[^\\\\s]*)(?:\\\\s|$)\";","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"kalarisng"},"content":"        Pattern pattern \u003d Pattern.compile(patternString);","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"kalarisng"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e matchedPrefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"kalarisng"},"content":"        while (matcher.find()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"kalarisng"},"content":"            String matchedPrefix \u003d matcher.group(1);","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"kalarisng"},"content":"            matchedPrefixes.add(\" \" + matchedPrefix);","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"kalarisng"},"content":"        if (matchedPrefixes.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"kalarisng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"kalarisng"},"content":"                    String.format(MESSAGE_NO_PREFIX, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"kalarisng"},"content":"        for (int k \u003d 0; k \u003c matchedPrefixes.size(); k++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"kalarisng"},"content":"            ArgumentMultimap newArgMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"kalarisng"},"content":"                    ArgumentTokenizer.tokenize(matchedPrefixes.get(k), PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"kalarisng"},"content":"                            PREFIX_ADDRESS, PREFIX_APPOINTMENT, PREFIX_WEIGHT, PREFIX_GENDER, PREFIX_CALORIE,","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"kalarisng"},"content":"                            PREFIX_TAG, PREFIX_GOAL);","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"kalarisng"},"content":"            String testCommand \u003d matchedPrefixes.get(k);","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"kalarisng"},"content":"            if (testCommand.substring(testCommand.indexOf(\u0027/\u0027) + 1).isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"kalarisng"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"kalarisng"},"content":"                        String.format(MESSAGE_NO_KEYWORD, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"kalarisng"},"content":"            if (!testCommand.contains(\"/\")) {","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"kalarisng"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"kalarisng"},"content":"                        String.format(MESSAGE_NO_PREFIX, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"kalarisng"},"content":"            if (!areAvailablePrefixes(newArgMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_WEIGHT,","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"kalarisng"},"content":"                    PREFIX_GENDER, PREFIX_EMAIL, PREFIX_TAG, PREFIX_APPOINTMENT, PREFIX_CALORIE, PREFIX_GOAL)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"kalarisng"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_PREFIX, FindCommand.PREFIX_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kalarisng":128,"dfordarius":12,"-":17}},{"path":"src/main/java/seedu/fitbook/logic/parser/FindRoutineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindRoutineCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.RoutineNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":" * Parses input arguments and creates a new FindRoutineCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"public class FindRoutineCommandParser implements Parser\u003cFindRoutineCommand\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     * Parses the given {@code String} of arguments in the context of the FindRoutineCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     * and returns a FindRoutineCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    public FindRoutineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindRoutineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        return new FindRoutineCommand(new RoutineNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"dfordarius":32}},{"path":"src/main/java/seedu/fitbook/logic/parser/FitBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.AddRoutineCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ClearRoutinesCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteRoutineCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ExportRoutineCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindRoutineCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ListClientsCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ListRoutinesCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"public class FitBookParser {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        case AddRoutineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"            return new AddRoutineCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        case EditRoutineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"            return new EditRoutineCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        case ClearRoutinesCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"            return new ClearRoutinesCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"OliviaJHL"},"content":"        case ListClientsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"OliviaJHL"},"content":"            return new ListClientsCommand();","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"        case ListRoutinesCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"            return new ListRoutinesCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"            return new ExportCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        case ExportRoutineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"            return new ExportRoutineCommand();","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"        case FindRoutineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"            return new FindRoutineCommandParser().parse(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        case DeleteRoutineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"            return new DeleteRoutineCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"OliviaJHL":2,"jundatan":6,"dfordarius":41,"-":59}},{"path":"src/main/java/seedu/fitbook/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"dfordarius":3,"-":13}},{"path":"src/main/java/seedu/fitbook/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"     * Parses a {@code String routineName} into a {@code RoutineName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"     * @throws ParseException if the given {@code routineName} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"    public static RoutineName parseRoutineName(String routineName) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        requireNonNull(routineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        String trimmedRoutineName \u003d routineName.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"        if (!RoutineName.isValidRoutineName(trimmedRoutineName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(RoutineName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"        return new RoutineName(trimmedRoutineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"dfordarius"},"content":"     * Parses a {@code String Weight} into an {@code Weight}.","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"     * @throws ParseException if the given {@code weight} is invalid.","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"dfordarius"},"content":"    public static Weight parseWeight(String weight) throws ParseException {","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"        String trimmedWeight \u003d weight.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"        if (!Weight.isValidWeight(trimmedWeight)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"dfordarius"},"content":"        return new Weight(trimmedWeight);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"     * Parses a {@code String Gender} into an {@code Gender}.","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"dfordarius"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"dfordarius"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"dfordarius"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"dfordarius"},"content":"     * Parses a {@code String Goal} into an {@code Goal}.","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"     * @throws ParseException if the given {@code goal} is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"dfordarius"},"content":"    public static Goal parseGoal(String goal) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(goal);","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"        String trimmedGoal \u003d goal.trim();","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"dfordarius"},"content":"        if (!Goal.isValidGoal(trimmedGoal)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"dfordarius"},"content":"            throw new ParseException(Goal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"        return new Goal(trimmedGoal);","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"     * Parses a {@code String appointment} into an {@code Appointment}.","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"     * @throws ParseException if the given {@code appointment} is invalid.","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"    public static Appointment parseAppointment(String appointment) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"        String trimmedAppointment \u003d appointment.trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"        if (!Appointment.isValidAppointment(trimmedAppointment)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"        return new Appointment(trimmedAppointment);","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"     * Parses {@code Collection\u003cString\u003e appointments} into a {@code Set\u003cAppointment\u003e}.","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"    public static Set\u003cAppointment\u003e parseAppointments(Collection\u003cString\u003e appointments) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"        requireNonNull(appointments);","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"        final Set\u003cAppointment\u003e appointmentSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"        for (String appointmentName : appointments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"            appointmentSet.add(parseAppointment(appointmentName));","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"        return appointmentSet;","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":220,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":221,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"jundatan"},"content":"     * Parses a {@code String calorie} into an {@code Calorie}.","lastModifiedDate":"2023-02-26"},{"lineNumber":223,"author":{"gitId":"jundatan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-26"},{"lineNumber":224,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":225,"author":{"gitId":"jundatan"},"content":"     * @throws ParseException if the given {@code calorie} is invalid.","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"jundatan"},"content":"    public static Calorie parseCalorie(String calorie) throws ParseException {","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"jundatan"},"content":"        requireNonNull(calorie);","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"jundatan"},"content":"        String trimmedCalorie \u003d calorie.trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"jundatan"},"content":"        if (!Calorie.isValidCalorie(trimmedCalorie)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(Calorie.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"jundatan"},"content":"        return new Calorie(trimmedCalorie);","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"jundatan"},"content":"     * Parses a {@code String exercise} into an {@code Exercise}.","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"jundatan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"jundatan"},"content":"     * @throws ParseException if the given {@code exercise} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"jundatan"},"content":"    public static Exercise parseExercise(String exercise) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"jundatan"},"content":"        requireNonNull(exercise);","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"jundatan"},"content":"        String tirmmedExercise \u003d exercise.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"jundatan"},"content":"        if (!Exercise.isValidExerciseName(tirmmedExercise)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"jundatan"},"content":"            throw new ParseException(Exercise.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"jundatan"},"content":"        return new Exercise(tirmmedExercise);","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"jundatan"},"content":"     * Parses {@code Collection\u003cString\u003e exercises} into a {@code List\u003cExercise\u003e}.","lastModifiedDate":"2023-03-10"},{"lineNumber":253,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"jundatan"},"content":"    public static List\u003cExercise\u003e parseExercises(Collection\u003cString\u003e exercises) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":255,"author":{"gitId":"jundatan"},"content":"        requireNonNull(exercises);","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"jundatan"},"content":"        final List\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":257,"author":{"gitId":"jundatan"},"content":"        for (String exerciseName : exercises) {","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"jundatan"},"content":"            exerciseList.add(parseExercise(exerciseName));","lastModifiedDate":"2023-03-10"},{"lineNumber":259,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"jundatan"},"content":"        return exerciseList;","lastModifiedDate":"2023-03-10"},{"lineNumber":261,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jundatan":88,"dfordarius":58,"-":116}},{"path":"src/main/java/seedu/fitbook/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"dfordarius":1,"-":38}},{"path":"src/main/java/seedu/fitbook/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"dfordarius":2,"-":15}},{"path":"src/main/java/seedu/fitbook/model/FitBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.UniqueClientList;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"public class FitBook implements ReadOnlyFitBook {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    /*","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     *   among constructors.","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public FitBook() {}","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"     * Creates an FitBook using the Clients in the {@code toBeCopied}","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    public FitBook(ReadOnlyFitBook toBeCopied) {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        this();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"     * Resets the existing data of this {@code FitBook} with {@code newData}.","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    public void resetData(ReadOnlyFitBook newData) {","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    //// client-level operations","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"     * Returns true if a client with the same identity as {@code client} exists in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        return clients.contains(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"     * Adds a client to FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"     * The client must not already exist in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        clients.add(p);","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"     * {@code target} must exist in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"     * Removes {@code key} from this {@code FitBook}.","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"     * {@code key} must exist in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"        clients.remove(key);","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"    //// util methods","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        // TODO: refine later","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof FitBook // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 clients.equals(((FitBook) other).clients));","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"        return clients.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":120}},{"path":"src/main/java/seedu/fitbook/model/FitBookExerciseRoutine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.UniqueRoutineList;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * Wraps all data at the fit-book level","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * Duplicates are not allowed (by .isSameRoutine comparison)","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class FitBookExerciseRoutine implements ReadOnlyFitBookExerciseRoutine {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    private final UniqueRoutineList routines;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        routines \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public FitBookExerciseRoutine() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     * Creates an FitBook using the Routines in the {@code toBeCopied}","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    public FitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine toBeCopied) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        this();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     * Replaces the contents of the routine list with {@code routines}.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"     * {@code routines} must not contain duplicate routines.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    public void setRoutines(List\u003cRoutine\u003e routines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        this.routines.setRoutines(routines);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"     * Resets the existing data of this {@code FitBookExerciseRoutine} with {@code newData}.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    public void resetData(ReadOnlyFitBookExerciseRoutine newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        setRoutines(newData.getRoutineList());","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"    //// routine-level operations","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"     * Returns true if a routine with the same identity as {@code routine} exists in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"    public boolean hasRoutine(Routine routine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        requireNonNull(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        return routines.contains(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"     * Adds a routine to the FitBook exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"     * The routine must not already exist in the FitBook exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"    public void addRoutine(Routine p) {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        routines.add(p);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"     * Replaces the given routine {@code target} in the list with {@code editedRoutine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"     * {@code target} must exist in the FitBook exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"     * The routine identity of {@code editedRoutine} must not be the same","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"     * as another existing routine in the FitBook exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"    public void setRoutine(Routine target, Routine editedRoutine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"        requireNonNull(editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"        routines.setRoutine(target, editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"     * Removes {@code key} from this {@code FitBookExerciseRoutine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"     * {@code key} must exist in the FitBook exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    public void removeRoutine(Routine key) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        routines.remove(key);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"    //// util methods","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"        return routines.asUnmodifiableObservableList().size() + \" routines\";","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"    public ObservableList\u003cRoutine\u003e getRoutineList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"        return routines.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"                || (other instanceof FitBookExerciseRoutine // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 routines.equals(((FitBookExerciseRoutine) other).routines));","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        return routines.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":119,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/FitBookModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":" * The API of the FitBookModel component.","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"public interface FitBookModel {","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    Predicate\u003cRoutine\u003e PREDICATE_SHOW_ALL_ROUTINES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"     * Returns the user prefs\u0027 FitBook file path.","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    Path getFitBookFilePath();","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"     * Sets the user prefs\u0027 FitBook file path.","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"    void setFitBookFilePath(Path fitBookFilePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"     * Replaces FitBook data with the data in {@code fitBook}.","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    void setFitBook(ReadOnlyFitBook fitBook);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"     * Returns the FitBook","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    ReadOnlyFitBook getFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"     * Returns true if a client with the same identity as {@code client} exists in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"     * Deletes the given client.","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"     * The client must exist in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"     * Adds the given client.","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"     * {@code client} must not already exist in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"    void addClient(Client client);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"     * {@code target} must exist in the FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"OliviaJHL"},"content":"     * Returns an unmodifiable view of the filtered client list","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"OliviaJHL"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"     * Replaces exercise routine data with the data in {@code exerciseRoutine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"    void setFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine exerciseRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"    /** Returns the Exercise Routine */","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"    ReadOnlyFitBookExerciseRoutine getFitBookExerciseRoutine();","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"     * Returns true if a routine with the same identity as {@code routine} exists in the exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"    boolean hasRoutine(Routine routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"     * Deletes the given routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"     * The routine must exist in the exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    void deleteRoutine(Routine target);","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"     * Adds the given routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"     * {@code routine} must not already exist in the exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"    void addRoutine(Routine routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"     * Replaces the given routine {@code target} with {@code editedRoutine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"     * {@code target} must exist in the exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"     * The routine identity of {@code editedRoutine} must not be the same","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"     * as another existing routine in the exercise routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"    void setRoutine(Routine target, Routine editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"    /** Returns an unmodifiable view of the filtered routine list */","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"    ObservableList\u003cRoutine\u003e getFilteredRoutineList();","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"     * Updates the filter of the filtered routine list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"    void updateFilteredRoutineList(Predicate\u003cRoutine\u003e predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"OliviaJHL":8,"jundatan":45,"dfordarius":85}},{"path":"src/main/java/seedu/fitbook/model/FitBookModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" * Represents the in-memory model of the FitBook data.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"public class FitBookModelManager implements FitBookModel {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FitBookModelManager.class);","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    private final FitBook fitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    private final FilteredList\u003cRoutine\u003e filteredRoutines;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    private final FitBookExerciseRoutine fitBookExerciseRoutine;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * Initializes a FitBookModelManager with the given FitBook and userPrefs.","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    public FitBookModelManager(ReadOnlyFitBook fitBook, ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine,","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"                               ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        requireAllNonNull(fitBook, fitBookExerciseRoutine, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        logger.fine(\"Initializing with FitBook: \" + fitBook + \" , exercises routines \"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"                + fitBookExerciseRoutine + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        this.fitBook \u003d new FitBook(fitBook);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        this.fitBookExerciseRoutine \u003d new FitBookExerciseRoutine(fitBookExerciseRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        filteredRoutines \u003d new FilteredList\u003c\u003e(this.fitBookExerciseRoutine.getRoutineList());","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.fitBook.getClientList());","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    public FitBookModelManager() {","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        this(new FitBook(), new FitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    public Path getFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        return userPrefs.getFitBookFilePath();","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"    public void setFitBookFilePath(Path fitBookFilePath) {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(fitBookFilePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"        userPrefs.setFitBookFilePath(fitBookFilePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FitBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"    public void setFitBook(ReadOnlyFitBook addressBook) {","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"        this.fitBook.resetData(addressBook);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"    public ReadOnlyFitBook getFitBook() {","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        return fitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        return fitBook.hasClient(client);","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"        fitBook.removeClient(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"        fitBook.addClient(client);","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"        fitBook.setClient(target, editedClient);","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exercise Routines \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"    public void setFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine exerciseRoutine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"        this.fitBookExerciseRoutine.resetData(exerciseRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"    public ReadOnlyFitBookExerciseRoutine getFitBookExerciseRoutine() {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"        return fitBookExerciseRoutine;","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"    public boolean hasRoutine(Routine routine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"        requireNonNull(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"        return fitBookExerciseRoutine.hasRoutine(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"    public void deleteRoutine(Routine target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"        fitBookExerciseRoutine.removeRoutine(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"    public void addRoutine(Routine routine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"        fitBookExerciseRoutine.addRoutine(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"        updateFilteredRoutineList(PREDICATE_SHOW_ALL_ROUTINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"    public void setRoutine(Routine target, Routine editedRoutine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"        requireAllNonNull(target, editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"        fitBookExerciseRoutine.setRoutine(target, editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":158,"author":{"gitId":"dfordarius"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"     * {@code versionedFitBook}","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"dfordarius"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"        return filteredClients;","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"dfordarius"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"dfordarius"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"     * Returns an unmodifiable view of the list of {@code Routine} backed by the internal list of","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"     * {@code versionedFitBookExerciseRoutine}","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"    public ObservableList\u003cRoutine\u003e getFilteredRoutineList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"        return filteredRoutines;","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"    public void updateFilteredRoutineList(Predicate\u003cRoutine\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"        filteredRoutines.setPredicate(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"dfordarius"},"content":"        if (!(obj instanceof FitBookModelManager)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"dfordarius"},"content":"        FitBookModelManager other \u003d (FitBookModelManager) obj;","lastModifiedDate":"2023-02-27"},{"lineNumber":203,"author":{"gitId":"dfordarius"},"content":"        return fitBook.equals(other.fitBook)","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":205,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients)","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 fitBookExerciseRoutine.equals(other.fitBookExerciseRoutine)","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 filteredRoutines.equals(other.filteredRoutines);","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jundatan":64,"dfordarius":45,"-":101}},{"path":"src/main/java/seedu/fitbook/model/ReadOnlyFitBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Unmodifiable view of FitBook","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"public interface ReadOnlyFitBook {","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":17}},{"path":"src/main/java/seedu/fitbook/model/ReadOnlyFitBookExerciseRoutine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" * Unmodifiable view of a FitBook routine book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"public interface ReadOnlyFitBookExerciseRoutine {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"     * Returns an unmodifiable view of the routines list.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"     * This list will not contain any duplicate routines.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    ObservableList\u003cRoutine\u003e getRoutineList();","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":17}},{"path":"src/main/java/seedu/fitbook/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    Path getFitBookFilePath();","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    Path getFitBookExerciseRoutineFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jundatan":3,"dfordarius":1,"-":13}},{"path":"src/main/java/seedu/fitbook/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    private Path fitBookFilePath \u003d Paths.get(\"data\" , \"fitbook.json\");","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    private Path fitBookExerciseRoutineFilePath \u003d Paths.get(\"data\", \"exerciseroutine.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        setFitBookFilePath(newUserPrefs.getFitBookFilePath());","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        setFitBookExerciseRoutineFilePath(newUserPrefs.getFitBookExerciseRoutineFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    public Path getFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"        return fitBookFilePath;","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    public void setFitBookFilePath(Path fitBookFilePath) {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(fitBookFilePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        this.fitBookFilePath \u003d fitBookFilePath;","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    public Path getFitBookExerciseRoutineFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        return fitBookExerciseRoutineFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    public void setFitBookExerciseRoutineFilePath(Path fitBookFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        requireNonNull(fitBookFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        this.fitBookExerciseRoutineFilePath \u003d fitBookFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 fitBookFilePath.equals(o.fitBookFilePath)","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 fitBookExerciseRoutineFilePath.equals(o.fitBookExerciseRoutineFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"        return Objects.hash(guiSettings, fitBookFilePath, fitBookExerciseRoutineFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        sb.append(\"\\nLocal data file location : \" + fitBookFilePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        sb.append(\"\\nLocal data file location for exercise routine: \" + fitBookExerciseRoutineFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jundatan":15,"dfordarius":8,"-":77}},{"path":"src/main/java/seedu/fitbook/model/client/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s address in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":3,"-":54}},{"path":"src/main/java/seedu/fitbook/model/client/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s appointment time in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAppointment(String)}","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"            \"Appointment should be in dd-mm-yyyy HH:mm format.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"            \"^(?:0[1-9]|[1-2][0-9]|3[0-1])-(?:0[1-9]|1[0-2])-(?:[0-9]{4}) (?:[01][0-9]|2[0-3]):(?:[0-5][0-9])$\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"    public final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public final String appointmentTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"    private final LocalDateTime localDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     * Constructs an {@code Appoinment}.","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     * @param appointment A valid appointment time.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public Appointment(String appointment) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        checkArgument(isValidAppointment(appointment), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        appointmentTime \u003d appointment;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"        this.localDateTime \u003d LocalDateTime.parse(appointment, dateTimeFormatter);","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     * Returns true if a given string is a valid appointment time.","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    public static boolean isValidAppointment(String test) {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"        return localDateTime.format(dateTimeFormatter);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"        Appointment otherDateTime \u003d (Appointment) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"        return this.localDateTime.equals(otherDateTime.localDateTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"OliviaJHL"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"OliviaJHL"},"content":"        return this.localDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        return appointmentTime.hashCode();","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"OliviaJHL"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"OliviaJHL"},"content":"    public int compareTo(Appointment other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"OliviaJHL"},"content":"        return this.localDateTime.compareTo(other.localDateTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"OliviaJHL":32,"jundatan":42,"dfordarius":3}},{"path":"src/main/java/seedu/fitbook/model/client/Calorie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" * Represents a Client\u0027s calorie intake in the FitBook.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCalorie(String)} (String)}","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"public class Calorie {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"            \"Calories should only contain numbers, and it should be at least 4 digits long\";","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4,}\";","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public final String value;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code Calorie}.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     * @param calorie A valid recommended calorie intake.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    public Calorie(String calorie) {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        requireNonNull(calorie);","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        checkArgument(isValidCalorie(calorie), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        value \u003d calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     * Returns true if a given string is a valid recommended calorie intake.","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    public static boolean isValidCalorie(String test) {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        return value;","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"                || (other instanceof Calorie // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 value.equals(((Calorie) other).value)); // state check","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"jundatan":50,"dfordarius":2}},{"path":"src/main/java/seedu/fitbook/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":" * Represents a Client in the FitBook.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"public class Client {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    private final Weight weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    private final Gender gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    private final Goal goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    private final Set\u003cAppointment\u003e appointments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    private final Calorie calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Set\u003cAppointment\u003e appointments,","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"                  Weight weight, Gender gender, Calorie calorie, Goal goal, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        requireAllNonNull(name, phone, email, address, appointments, weight, gender, calorie, goal, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        this.calorie \u003d calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    public Calorie getCalorie() {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        return calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    public Weight getWeight() {","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        return weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        return gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"    public Goal getGoal() {","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        return goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"OliviaJHL"},"content":"    public boolean isAppointmentEmpty() {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"OliviaJHL"},"content":"        return appointments.isEmpty();","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"     * Returns an immutable appointment set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"    public Set\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"        return appointments;","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"dfordarius"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone())","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getEmail().equals(getEmail())","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getAddress().equals(getAddress())","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getWeight().equals(getWeight())","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getGender().equals(getGender())","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 otherClient.getAppointments().equals(getAppointments())","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getTags().equals(getTags())","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getGoal().equals(getGoal())","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 otherClient.getCalorie().equals(getCalorie());","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"        return Objects.hash(name, phone, email, address, appointments, weight, gender, calorie, goal, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"                .append(getAddress())","lastModifiedDate":"2023-02-21"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"                .append(\"; Calorie: \")","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"                .append(getCalorie())","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"                .append(\"; Weight: \")","lastModifiedDate":"2023-02-21"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"                .append(getWeight())","lastModifiedDate":"2023-02-21"},{"lineNumber":161,"author":{"gitId":"dfordarius"},"content":"                .append(\" Kg\")","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"dfordarius"},"content":"                .append(\" Gender: \")","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"                .append(getGender())","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"                .append(\"; Goal: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"dfordarius"},"content":"                .append(getGoal());","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"        Set\u003cAppointment\u003e appointments \u003d getAppointments();","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"        if (!appointments.isEmpty()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"            builder.append(\"; Appointments: \");","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"            appointments.forEach(builder::append);","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"OliviaJHL":4,"jundatan":25,"dfordarius":54,"-":97}},{"path":"src/main/java/seedu/fitbook/model/client/ClientAppointmentComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":" * This class provides a Comparator implementation for comparing two Client objects","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":" * base on their appointments.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"*/","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"public class ClientAppointmentComparator implements Comparator\u003cClient\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"    public int compare(Client c1, Client c2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"        if (c1.isAppointmentEmpty() \u0026\u0026 c2.isAppointmentEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"            return 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"        } else if (c1.isAppointmentEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"            return -1;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"        } else if (c2.isAppointmentEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"            return 1;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"            Appointment c1Appointment \u003d c1.getAppointments().iterator().next();","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"            Appointment c2Appointment \u003d c2.getAppointments().iterator().next();","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"            return c1Appointment.compareTo(c2Appointment);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"OliviaJHL":24}},{"path":"src/main/java/seedu/fitbook/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s email in the FitBook.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":3,"-":68}},{"path":"src/main/java/seedu/fitbook/model/client/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s Gender in FitBook.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class Gender {","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"            \"Gender should either be M or F (not case sensitive)\";","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    public static final String VALIDATION_REGEX \u003d \"(M|F|m|f)\";","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public final String value;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"        value \u003d gender.toUpperCase();","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * Returns true if a given string is a valid Gender.","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        return value;","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"OliviaJHL":1,"dfordarius":53}},{"path":"src/main/java/seedu/fitbook/model/client/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s Goal in FitBook.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGoal(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class Goal {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"            \"Goal can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    public final String value;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     * Constructs a {@code Goal}.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * @param goal A valid goal.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    public Goal(String goal) {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(goal);","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        checkArgument(isValidGoal(goal), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        value \u003d goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"     * Returns true if a given string is a goal.","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    public static boolean isValidGoal(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        return value;","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof Goal // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 value.equals(((Goal) other).value)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"dfordarius":52}},{"path":"src/main/java/seedu/fitbook/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s name in FitBook.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":3,"-":56}},{"path":"src/main/java/seedu/fitbook/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s phone number in FitBook.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":3,"-":49}},{"path":"src/main/java/seedu/fitbook/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":" *","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":" *","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"     * Adds a client to the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"     * The client must exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"                        \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"dfordarius"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"dfordarius"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"dfordarius"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"                    return false;","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"dfordarius"},"content":"        return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":137}},{"path":"src/main/java/seedu/fitbook/model/client/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Represents a Client\u0027s Weight in FitBook.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidWeight(String)}","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class Weight {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"            \"Weight should only contain positive numbers and cannot be 0\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9]\\\\d*.\\\\d*|0.\\\\d*[1-9]\\\\d*$\";","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public final String value;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * @param weight A valid weight.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    public Weight(String weight) {","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        checkArgument(isValidWeight(weight), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        value \u003d weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * Returns true if a given string is a weight.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    public static boolean isValidWeight(String test) {","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        return value;","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof Weight // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 value.equals(((Weight) other).value)); // state check","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dfordarius":53}},{"path":"src/main/java/seedu/fitbook/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":6}},{"path":"src/main/java/seedu/fitbook/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":" * identity).","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":11}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getAddress().value, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((AddressContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":32,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/AppointmentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Appointment} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"public class AppointmentContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public AppointmentContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        boolean testClient \u003d false;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        for (Appointment appointment : client.getAppointments()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"            if (keywords.stream().anyMatch(keyword -\u003e StringUtil","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"                    .containsWordIgnoreCase(appointment.appointmentTime, keyword))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"                testClient \u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        return testClient;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof AppointmentContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((AppointmentContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":40,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/CalorieContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Calorie} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class CalorieContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public CalorieContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getCalorie().value, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof CalorieContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((CalorieContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":32,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getEmail().value, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":32,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/GenderContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Gender} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class GenderContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public GenderContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getGender().value, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof GenderContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((GenderContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":32,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/GoalContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" * Tests that a {@code Client}\u0027s {@code Goal} matches any of the keywords given.","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"public class GoalContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public GoalContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getGoal().value, keyword));","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof GoalContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 keywords.equals(((GoalContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":33}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":7,"dfordarius":1,"-":24}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getPhone().value, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":32,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        boolean testClient \u003d false;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        for (Tag tag : client.getTags()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"            if (keywords.stream().anyMatch(keyword -\u003e StringUtil","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"                    .containsWordIgnoreCase(tag.tagName, keyword))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"                testClient \u003d true;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        return testClient;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":40,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/client/predicate/WeightContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Tests that a {@code Client}\u0027s {@code Weight} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class WeightContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public WeightContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getWeight().value, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                || (other instanceof WeightContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                \u0026\u0026 keywords.equals(((WeightContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":32,"dfordarius":1}},{"path":"src/main/java/seedu/fitbook/model/routines/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routines;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" * Represents an Exercise in the FitBook Exercise Routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidExerciseName(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"public class Exercise {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Exercises names should be alphanumeric\";","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 ]*$\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    public final String exerciseName;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code Exercise}.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     * @param exerciseName A valid tag name.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public Exercise(String exerciseName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        requireNonNull(exerciseName);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        checkArgument(isValidExerciseName(exerciseName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     * Returns true if a given string is a valid exercise name.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public static boolean isValidExerciseName(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        return test.matches(VALIDATION_REGEX)","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 !test.trim().isEmpty()","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 !test.isEmpty();","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"                || (other instanceof Exercise // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 exerciseName.equals(((Exercise) other).exerciseName)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        return exerciseName.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"        return exerciseName;","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"OliviaJHL":1,"jundatan":54}},{"path":"src/main/java/seedu/fitbook/model/routines/Routine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routines;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * Represents a Routine in the FitBook.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class Routine {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    private final RoutineName routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    private final List\u003cExercise\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code Routine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     * @param routineName A valid routine name.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    public Routine(RoutineName routineName, List\u003cExercise\u003e exercises) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        requireNonNull(routineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        this.exercises.addAll(exercises);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        this.routineName \u003d routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"     * Sets exercises for {@code exercises}.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     * @param strings Strings of exercises to be stored in object.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    public void withExercises(String... strings) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        List\u003cExercise\u003e exercises \u003d Arrays.stream(strings)","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"                .map(Exercise::new)","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        this.exercises.clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        this.exercises.addAll(exercises);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public RoutineName getRoutineName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        return routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    public List\u003cExercise\u003e getExercises() {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        return exercises;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"     * Returns true if both routines have the same identity and data fields.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"     * This defines a stronger notion of equality between two routines.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        if (!(other instanceof Routine)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        Routine otherRoutine \u003d (Routine) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        return otherRoutine.getRoutineName().equals(getRoutineName())","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 otherRoutine.getExercises().equals(getExercises());","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"     * Returns true if both routines have the same name.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"     * This defines a weaker notion of equality between two routines.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"    public boolean isSameRoutine(Routine otherRoutine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"        if (otherRoutine \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"        return otherRoutine !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 otherRoutine.getRoutineName().equals(getRoutineName());","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        return Objects.hash(routineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"        builder.append(getRoutineName());","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"OliviaJHL"},"content":"     * Format exercise as text for viewing.","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"OliviaJHL"},"content":"     * @return textString","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"OliviaJHL"},"content":"    public StringBuilder exerciseListToString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"OliviaJHL"},"content":"        StringBuilder textString \u003d new StringBuilder();","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"OliviaJHL"},"content":"        for (int i \u003d 1; i \u003c\u003d exercises.size(); i++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"OliviaJHL"},"content":"            textString.append(\"    \" + i + \". \" + exercises.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"OliviaJHL"},"content":"        return textString;","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"OliviaJHL":12,"jundatan":97}},{"path":"src/main/java/seedu/fitbook/model/routines/RoutineName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routines;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" * Represents a Routine\u0027s name in FitBook.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRoutineName(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"public class RoutineName {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"            \"Routine Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public final String routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code RoutineName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     * @param routineName A valid routine name.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public RoutineName(String routineName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        requireNonNull(routineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        checkArgument(isValidRoutineName(routineName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        this.routineName \u003d routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    public static boolean isValidRoutineName(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        return test.matches(VALIDATION_REGEX)","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 !test.trim().isEmpty()","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 !test.isEmpty();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        return routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"                || (other instanceof RoutineName // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"                \u0026\u0026 routineName.equals(((RoutineName) other).routineName)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        return routineName.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":61}},{"path":"src/main/java/seedu/fitbook/model/routines/RoutineNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.routines;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Tests that a {@code Routine}\u0027s {@code RoutineName} matches any of the keywords given.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class RoutineNameContainsKeywordsPredicate implements Predicate\u003cRoutine\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public RoutineNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    public boolean test(Routine routine) {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(routine.getRoutineName().routineName, keyword));","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"                || (other instanceof RoutineNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 keywords.equals(((RoutineNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"dfordarius":31}},{"path":"src/main/java/seedu/fitbook/model/routines/UniqueRoutineList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.routines;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.exceptions.DuplicateRoutineException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.exceptions.RoutineNotFoundException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":" * A list of routines that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":" * A routine is considered unique by comparing using {@code Routine#isSameRoutine(Routine)}.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" * As such, adding and updating of","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" * routines uses Routine#isSameRoutine(Routine) for equality so as to ensure that the routine being added or updated is","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":" * unique in terms of identity in the UniqueRoutineList. However, the removal of a routine uses Routine#equals(Object)","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":" * so as to ensure that the routine with exactly the same fields will be removed.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":" * @see Routine#isSameRoutine(Routine)","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"public class UniqueRoutineList implements Iterable\u003cRoutine\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    private final ObservableList\u003cRoutine\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    private final ObservableList\u003cRoutine\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     * Returns true if the list contains an equivalent routine as the given argument.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    public boolean contains(Routine toCheck) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"     * Adds a routine to the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * The routine must not already exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public void add(Routine toAdd) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"            throw new DuplicateRoutineException();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"     * Replaces the routine {@code target} in the list with {@code editedRoutine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     * The routine identity of {@code editedRoutine} must not be the same as another existing routine in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    public void setRoutine(Routine target, Routine editedRoutine) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        requireAllNonNull(target, editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"            throw new RoutineNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        if (!target.isSameRoutine(editedRoutine) \u0026\u0026 contains(editedRoutine)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"            throw new DuplicateRoutineException();","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        internalList.set(index, editedRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"     * Removes the equivalent routine from the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"     * The routine must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"    public void remove(Routine toRemove) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"            throw new RoutineNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"    public void setRoutines(UniqueRoutineList replacement) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"     * Replaces the contents of this list with {@code routines}.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"     * {@code routines} must not contain duplicate routines.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    public void setRoutines(List\u003cRoutine\u003e routines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        requireAllNonNull(routines);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"        if (!routinesAreUnique(routines)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"            throw new DuplicateRoutineException();","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"        internalList.setAll(routines);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"    public ObservableList\u003cRoutine\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"    public Iterator\u003cRoutine\u003e iterator() {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"                || (other instanceof UniqueRoutineList // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"                        \u0026\u0026 internalList.equals(((UniqueRoutineList) other).internalList));","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"     * Returns true if {@code routines} contains only unique routines.","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"    private boolean routinesAreUnique(List\u003cRoutine\u003e routines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"        for (int i \u003d 0; i \u003c routines.size() - 1; i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"            for (int j \u003d i + 1; j \u003c routines.size(); j++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"                if (routines.get(i).isSameRoutine(routines.get(j))) {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"                    return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"        return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":135,"dfordarius":3}},{"path":"src/main/java/seedu/fitbook/model/routines/exceptions/DuplicateRoutineException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routines.exceptions;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Signals that the operation will result in duplicate Routines (Routines are considered duplicates","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" * if they have the same identity).","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"public class DuplicateRoutineException extends RuntimeException {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"    public DuplicateRoutineException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"        super(\"Operation would result in duplicate routines\");","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":11}},{"path":"src/main/java/seedu/fitbook/model/routines/exceptions/RoutineNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routines.exceptions;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Signals that the operation is unable to find the specified routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"public class RoutineNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":6}},{"path":"src/main/java/seedu/fitbook/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Represents a Tag in FitBook.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dfordarius":3,"-":51}},{"path":"src/main/java/seedu/fitbook/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":" * Contains utility methods for populating {@code FitBook} with sample data.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        return new Client[] {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"20\"), new Gender(\"M\"), new Calorie(\"1200\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"20\"), new Gender(\"M\"), new Calorie(\"1200\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"30\"), new Gender(\"M\"), new Calorie(\"1100\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"40\"), new Gender(\"M\"), new Calorie(\"1200\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"50\"), new Gender(\"M\"), new Calorie(\"1202\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"60\"), new Gender(\"M\"), new Calorie(\"2356\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    public static ReadOnlyFitBook getSampleFitBook() {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        FitBook sampleAb \u003d new FitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"     * Returns an appointment set containing the list of strings given.","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"    public static Set\u003cAppointment\u003e getAppointmentSet(String... strings) {","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"                .map(Appointment::new)","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"OliviaJHL":6,"jundatan":8,"dfordarius":40,"-":27}},{"path":"src/main/java/seedu/fitbook/model/util/SampleExerciseRoutineDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.util;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" * Contains utility methods for populating {@code FitBookExerciseRoutine} with sample data.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"public class SampleExerciseRoutineDataUtil {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    public static Routine[] getSampleRoutines() {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"        return new Routine[] {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"            new Routine(new RoutineName(\"OPM\"), getExerciseList(\"100 Push ups\", \"100 Sit ups\", \"10km run\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"            new Routine(new RoutineName(\"Cardio\"), getExerciseList(\"10 Berpes\", \"100 crunches\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"            new Routine(new RoutineName(\"Strength\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"                getExerciseList(\"4x15 Dumbbell curls\", \"3x15 Bench Press\", \"5 reps of Deadlift\"))","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        };","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    public static ReadOnlyFitBookExerciseRoutine getSampleFitBookExerciseRoutine() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine sampleEr \u003d new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        for (Routine sampleRoutine : getSampleRoutines()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"            sampleEr.addRoutine(sampleRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        return sampleEr;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     * Returns an Exercise set containing the list of strings given.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    public static List\u003cExercise\u003e getExerciseList(String... strings) {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"                .map(Exercise::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":44}},{"path":"src/main/java/seedu/fitbook/storage/FitBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":" * Represents a storage for {@link seedu.fitbook.model.FitBook}.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"public interface FitBookStorage {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    Path getFitBookFilePath();","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * Returns FitBook data as a {@link ReadOnlyFitBook}.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    Optional\u003cReadOnlyFitBook\u003e readFitBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"     * @see #getFitBookFilePath()","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    Optional\u003cReadOnlyFitBook\u003e readFitBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"     * Saves the given {@link ReadOnlyFitBook} to the storage.","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     * @param fitBook cannot be null.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    void saveFitBook(ReadOnlyFitBook fitBook) throws IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"     * @see #saveFitBook(ReadOnlyFitBook)","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    void saveFitBook(ReadOnlyFitBook fitBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":45}},{"path":"src/main/java/seedu/fitbook/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    private final String appointmentName;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public JsonAdaptedAppointment(String appointmentName) {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        this.appointmentName \u003d appointmentName;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        appointmentName \u003d source.appointmentTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    @JsonValue","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    public String getAppointmentName() {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        return appointmentName;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    public Appointment toFitBookModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        if (!Appointment.isValidAppointment(appointmentName)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        return new Appointment(appointmentName);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"jundatan":45,"dfordarius":3}},{"path":"src/main/java/seedu/fitbook/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    private final String calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    private final String weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    private final String gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    private final String goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"            @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments,","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"            @JsonProperty(\"weight\") String weight, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"            @JsonProperty(\"goal\") String goal, @JsonProperty(\"calorie\") String calorie,","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        this.calorie \u003d calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"        calorie \u003d source.getCalorie().value;","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        weight \u003d source.getWeight().value;","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        goal \u003d source.getGoal().value;","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"        appointments.addAll(source.getAppointments().stream()","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"                .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"    public Client toFitBookModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"        final List\u003cAppointment\u003e clientAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"        for (JsonAdaptedAppointment appointment : appointments) {","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"            clientAppointments.add(appointment.toFitBookModelType());","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"            clientTags.add(tag.toFitBookModelType());","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"        if (calorie \u003d\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Calorie.class.getSimpleName()));","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"        if (!Calorie.isValidCalorie(calorie)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"            throw new IllegalValueException(Calorie.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"        final Calorie modelCalorie \u003d new Calorie(calorie);","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"        if (weight \u003d\u003d null) {","lastModifiedDate":"2023-02-21"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName()));","lastModifiedDate":"2023-02-21"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":147,"author":{"gitId":"dfordarius"},"content":"        if (!Weight.isValidWeight(weight)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":148,"author":{"gitId":"dfordarius"},"content":"            throw new IllegalValueException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"dfordarius"},"content":"        final Weight modelWeight \u003d new Weight(weight);","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"dfordarius"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"dfordarius"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"dfordarius"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"dfordarius"},"content":"        if (goal \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Goal.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"dfordarius"},"content":"        if (!Goal.isValidGoal(goal)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"dfordarius"},"content":"            throw new IllegalValueException(Goal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"        final Goal modelGoal \u003d new Goal(goal);","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"        final Set\u003cAppointment\u003e modelAppointment \u003d new HashSet\u003c\u003e(clientAppointments);","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"dfordarius"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelAddress, modelAppointment,","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"dfordarius"},"content":"                modelWeight, modelGender, modelCalorie, modelGoal, modelTags);","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jundatan":23,"dfordarius":63,"-":86}},{"path":"src/main/java/seedu/fitbook/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    public Tag toFitBookModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dfordarius":4,"-":44}},{"path":"src/main/java/seedu/fitbook/storage/JsonFitBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.FileUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.JsonUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":" * A class to access FitBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"public class JsonFitBookStorage implements FitBookStorage {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFitBookStorage.class);","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public JsonFitBookStorage(Path filePath) {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public Path getFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    public Optional\u003cReadOnlyFitBook\u003e readFitBook() throws DataConversionException {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        return readFitBook(filePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"     * Similar to {@link #readFitBook()}.","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    public Optional\u003cReadOnlyFitBook\u003e readFitBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"        Optional\u003cJsonSerializableFitBook\u003e jsonFitBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"                filePath, JsonSerializableFitBook.class);","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        if (!jsonFitBook.isPresent()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"            return Optional.of(jsonFitBook.get().toFitBookModelType());","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    public void saveFitBook(ReadOnlyFitBook fitBook) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        saveFitBook(fitBook, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"     * Similar to {@link #saveFitBook(ReadOnlyFitBook)}.","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"    public void saveFitBook(ReadOnlyFitBook fitBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"        requireNonNull(fitBook);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFitBook(fitBook), filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jundatan":12,"dfordarius":14,"-":54}},{"path":"src/main/java/seedu/fitbook/storage/JsonSerializableFitBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":" * An Immutable FitBook that is serializable to JSON format.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"@JsonRootName(value \u003d \"fitbook\")","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"class JsonSerializableFitBook {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * Constructs a {@code JsonSerializableFitBook} with the given clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public JsonSerializableFitBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients) {","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     * Converts a given {@code ReadOnlyFitBook} into this class for Jackson use.","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFitBook}.","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    public JsonSerializableFitBook(ReadOnlyFitBook source) {","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"     * Converts this FitBook into the model\u0027s {@code FitBook} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    public FitBook toFitBookModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        FitBook fitBook \u003d new FitBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"            Client client \u003d jsonAdaptedClient.toFitBookModelType();","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"            if (fitBook.hasClient(client)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"            fitBook.addClient(client);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        return fitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jundatan":3,"dfordarius":57}},{"path":"src/main/java/seedu/fitbook/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.util.JsonUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"dfordarius":5,"-":42}},{"path":"src/main/java/seedu/fitbook/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.storage.routine.FitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"public interface Storage extends FitBookStorage, UserPrefsStorage, FitBookExerciseRoutineStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    Path getFitBookFilePath();","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    Optional\u003cReadOnlyFitBook\u003e readFitBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    void saveFitBook(ReadOnlyFitBook fitBook) throws IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    Path getFitBookExerciseRoutineFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine(Path filePath)","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine,","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"            Path filePath) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jundatan":17,"dfordarius":10,"-":23}},{"path":"src/main/java/seedu/fitbook/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.storage.routine.FitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" * Manages storage of FitBook and Exercise Routine data in local storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    private FitBookStorage fitBookStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    private FitBookExerciseRoutineStorage fitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * Creates a {@code StorageManager} with the given {@code FitBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    public StorageManager(FitBookStorage fitBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"            FitBookExerciseRoutineStorage fitBookExerciseRoutineStorage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        this.fitBookStorage \u003d fitBookStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        this.fitBookExerciseRoutineStorage \u003d fitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FitBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"    public Path getFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        return fitBookStorage.getFitBookFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"    public Optional\u003cReadOnlyFitBook\u003e readFitBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        return readFitBook(fitBookStorage.getFitBookFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"    public Optional\u003cReadOnlyFitBook\u003e readFitBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"        return fitBookStorage.readFitBook(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    public void saveFitBook(ReadOnlyFitBook fitBook) throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        saveFitBook(fitBook, fitBookStorage.getFitBookFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"    public void saveFitBook(ReadOnlyFitBook fitBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        fitBookStorage.saveFitBook(fitBook, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FitBook Exercise Routine methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"    public Path getFitBookExerciseRoutineFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"        return fitBookExerciseRoutineStorage.getFitBookExerciseRoutineFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"    public Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine()","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        return readFitBookExerciseRoutine(fitBookExerciseRoutineStorage.getFitBookExerciseRoutineFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"    public Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine(Path filePath)","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"        return fitBookExerciseRoutineStorage.readFitBookExerciseRoutine(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"    public void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        saveFitBookExerciseRoutine(fitBookExerciseRoutine,","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"                fitBookExerciseRoutineStorage.getFitBookExerciseRoutineFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"    public void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine,","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"            Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"        fitBookExerciseRoutineStorage.saveFitBookExerciseRoutine(fitBookExerciseRoutine, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jundatan":37,"dfordarius":22,"-":56}},{"path":"src/main/java/seedu/fitbook/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":" * Represents a storage for {@link seedu.fitbook.model.UserPrefs}.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * Saves the given {@link seedu.fitbook.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"dfordarius":6,"-":30}},{"path":"src/main/java/seedu/fitbook/storage/routine/FitBookExerciseRoutineStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" * Represents a storage for {@link seedu.fitbook.model.FitBookExerciseRoutine}.","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"public interface FitBookExerciseRoutineStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    Path getFitBookExerciseRoutineFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     * Returns FitBook Exercise Routine data as a {@link seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine}.","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     * @see #getFitBookExerciseRoutineFilePath()","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine(Path filePath)","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * Saves the given {@link ReadOnlyFitBookExerciseRoutine} to the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     * @param fitBook cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBook) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * @see #saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine)","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":46}},{"path":"src/main/java/seedu/fitbook/storage/routine/JsonAdaptedExercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":" * Jackson-friendly version of {@link seedu.fitbook.model.routines.Routine}.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"class JsonAdaptedExercise {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    private final String exerciseName;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code JsonAdaptedExercise} with the given {@code routineName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public JsonAdaptedExercise(String exerciseName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     * Converts a given {@code Exercise} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    public JsonAdaptedExercise(Exercise source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        exerciseName \u003d source.exerciseName;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    @JsonValue","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    public String getExerciseName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        return exerciseName;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     * Converts this Jackson-friendly adapted exercise object into the model\u0027s {@code Exercise} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted exercise.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    public Exercise toFitBookExerciseRoutineModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        if (!Exercise.isValidExerciseName(exerciseName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"            throw new IllegalValueException(Exercise.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        return new Exercise(exerciseName);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":48}},{"path":"src/main/java/seedu/fitbook/storage/routine/JsonAdaptedRoutine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":" * Jackson-friendly version of {@link Routine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"class JsonAdaptedRoutine {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Routine\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    private final String routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    private final List\u003cJsonAdaptedExercise\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code JsonAdaptedRoutine} with the given routine details.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    public JsonAdaptedRoutine(@JsonProperty(\"routine\") String routineName,","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"            @JsonProperty(\"exercises\") List\u003cJsonAdaptedExercise\u003e exercises) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        this.routineName \u003d routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        if (exercises !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"            this.exercises.addAll(exercises);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     * Converts a given {@code Routine} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    public JsonAdaptedRoutine(Routine source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        routineName \u003d source.getRoutineName().routineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        exercises.addAll(source.getExercises().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"                .map(JsonAdaptedExercise::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"     * Converts this Jackson-friendly adapted routine object into the model\u0027s {@code Routine} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted routine.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    public Routine toFitBookExerciseRoutineModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        final List\u003cExercise\u003e routineExercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        for (JsonAdaptedExercise exercise : exercises) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"            routineExercises.add(exercise.toFitBookExerciseRoutineModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        if (routineName \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"                    RoutineName.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        if (!RoutineName.isValidRoutineName(routineName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"            throw new IllegalValueException(RoutineName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        final RoutineName modelRoutineName \u003d new RoutineName(routineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        final List\u003cExercise\u003e modelRoutineExercises \u003d new ArrayList\u003c\u003e(routineExercises);","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        return new Routine(modelRoutineName, modelRoutineExercises);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":69}},{"path":"src/main/java/seedu/fitbook/storage/routine/JsonFitBookExerciseRoutineStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.FileUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.JsonUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" * A class to access FitBook Exercise Routine data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"public class JsonFitBookExerciseRoutineStorage implements FitBookExerciseRoutineStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFitBookExerciseRoutineStorage.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public JsonFitBookExerciseRoutineStorage(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public Path getFitBookExerciseRoutineFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        return filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    public Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine() throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        return readFitBookExerciseRoutine(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"     * Similar to {@link #readFitBookExerciseRoutine()}.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    public Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine(Path filePath)","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        Optional\u003cJsonSerializableFitBookExerciseRoutine\u003e jsonFitBookExerciseRoutine \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"                filePath, JsonSerializableFitBookExerciseRoutine.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        if (!jsonFitBookExerciseRoutine.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"            return Optional.of(jsonFitBookExerciseRoutine.get().toFitBookExerciseRoutineModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"    public void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        saveFitBookExerciseRoutine(fitBookExerciseRoutine, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"     * Similar to {@link #saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine)}.","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"    public void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine,","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"            Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"        requireNonNull(fitBookExerciseRoutine);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFitBookExerciseRoutine(fitBookExerciseRoutine), filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":82}},{"path":"src/main/java/seedu/fitbook/storage/routine/JsonSerializableFitBookExerciseRoutine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" * An Immutable FitBook Exercise Routine that is serializable to JSON format.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"@JsonRootName(value \u003d \"routinebook\")","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"class JsonSerializableFitBookExerciseRoutine {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    public static final String MESSAGE_DUPLICATE_ROUTINE \u003d \"Exercise Routine list contains duplicate routine(s).\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    private final List\u003cJsonAdaptedRoutine\u003e routines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Constructs a {@code JsonSerializableFitBookExerciseRoutine} with the given routines.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public JsonSerializableFitBookExerciseRoutine(@JsonProperty(\"routines\") List\u003cJsonAdaptedRoutine\u003e routines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        this.routines.addAll(routines);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * Converts a given {@code ReadOnlyFitBookExerciseRoutine} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFitBookExerciseRoutine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    public JsonSerializableFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        routines.addAll(source.getRoutineList().stream().map(JsonAdaptedRoutine::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"     * Converts this Fitbook into the model\u0027s {@code FitBook} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    public FitBookExerciseRoutine toFitBookExerciseRoutineModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine fitBookExerciseRoutine \u003d new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        for (JsonAdaptedRoutine jsonAdaptedRoutine : routines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"            Routine routine \u003d jsonAdaptedRoutine.toFitBookExerciseRoutineModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"            if (fitBookExerciseRoutine.hasRoutine(routine)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ROUTINE);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"            fitBookExerciseRoutine.addRoutine(routine);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        return fitBookExerciseRoutine;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jundatan":60}},{"path":"src/main/java/seedu/fitbook/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on FitBook level 4\u003c/a\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    public final Client client;","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    private Label weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    @FXML","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    private Label gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    private FlowPane appointments;","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    private Label goal;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    private Label calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView genderList;","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView phoneIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView addressIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView genderIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView emailIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView weightIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView goalIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView caloriesIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        this.client \u003d client;","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"OliviaJHL"},"content":"        String genderText;","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"OliviaJHL"},"content":"        if (client.getGender().value.equals(\"M\") || client.getGender().value.equals(\"m\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"OliviaJHL"},"content":"            genderText \u003d \"maleIcon\";","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"OliviaJHL"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"OliviaJHL"},"content":"            genderText \u003d \"femaleIcon\";","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"        address.setText(client.getAddress().value);","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"        weight.setText(client.getWeight().value + \" Kg\");","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"OliviaJHL"},"content":"        goal.setText(client.getGoal().value);","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"        setCalorieCondition(client, calorie);","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"        client.getAppointments().stream()","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"                .sorted(Comparator.comparing(appointment -\u003e appointment.appointmentTime))","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"                .forEach(appointment -\u003e appointments.getChildren().add(new Label(appointment.appointmentTime)));","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        client.getTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":98,"author":{"gitId":"OliviaJHL"},"content":"        genderList.setImage(","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"OliviaJHL"},"content":"                new Image(this.getClass().getResourceAsStream(\"/images/genderList/\" + genderText + \".png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"OliviaJHL"},"content":"        phoneIcon.setImage(new Image(this.getClass().getResourceAsStream(\"/images/phoneIcon.png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"OliviaJHL"},"content":"        addressIcon.setImage(new Image(this.getClass().getResourceAsStream(\"/images/addressIcon.png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"OliviaJHL"},"content":"        emailIcon.setImage(new Image(this.getClass().getResourceAsStream(\"/images/emailIcon.png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"OliviaJHL"},"content":"        weightIcon.setImage(new Image(this.getClass().getResourceAsStream(\"/images/weightIcon.png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"OliviaJHL"},"content":"        goalIcon.setImage(new Image(this.getClass().getResourceAsStream(\"/images/goalIcon.png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"OliviaJHL"},"content":"        caloriesIcon.setImage(new Image(this.getClass().getResourceAsStream(\"/images/caloriesIcon.png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"     * Sets the calorie to be displayed.","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"     * If calorie value is 0000, remove display.","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"     * @param client The current client.","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"     * @param calorie The recommended calorie intake of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"    private void setCalorieCondition(Client client, Label calorie) {","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"        if (!client.getCalorie().value.equals(\"0000\")) {","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"OliviaJHL"},"content":"            calorie.setText(client.getCalorie().value + \" cal\");","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"            calorie.setManaged(false);","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"OliviaJHL":34,"jundatan":20,"dfordarius":25,"-":61}},{"path":"src/main/java/seedu/fitbook/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        super(FXML);","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"                setGraphic(null);","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"                setText(null);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"            } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dfordarius":48}},{"path":"src/main/java/seedu/fitbook/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"         * @see seedu.fitbook.logic.Logic#execute(String)","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"dfordarius":5,"-":80}},{"path":"src/main/java/seedu/fitbook/ui/ExerciseCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":" * A UI component that displays information of a {@code Routine}.","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"public class ExerciseCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"    private static final String FXML \u003d \"ExerciseCard.fxml\";","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on FitBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"    public final Routine routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"    private Label exercises;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"    private Label id;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"    private Label routineName;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"     * Creates a {@code RoutineCode} with the given {@code Rountine} and index to display.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"    public ExerciseCard(Routine routine, int displayedIndex) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"        super(FXML);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"OliviaJHL"},"content":"        this.routine \u003d routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"        routineName.setText(routine.getRoutineName().routineName);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"        exercises.setText(routine.exerciseListToString().toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"OliviaJHL"},"content":"            return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":"        if (!(other instanceof ExerciseCard)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"OliviaJHL"},"content":"            return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"        // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":"        ExerciseCard card \u003d (ExerciseCard) other;","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"                \u0026\u0026 routine.equals(card.routine);","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"OliviaJHL":62}},{"path":"src/main/java/seedu/fitbook/ui/ExercisePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":" * Custom {@code ListCell} that displays the graphics of a {@code Exercise} using a {@code ExerciseCard}.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"public class ExercisePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"    private static final String FXML \u003d \"ExercisePanel.fxml\";","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ExercisePanel.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"    private ListView\u003cRoutine\u003e exerciseView;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"     * Creates a {@code ExercisePanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"    public ExercisePanel(ObservableList\u003cRoutine\u003e routineList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"        super(FXML);","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"        exerciseView.setItems(routineList);","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"        exerciseView.setCellFactory(listView -\u003e new ExercisePanel.RoutineListViewCell());","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Routine} using a {@code ExerciseCard}.","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"    class RoutineListViewCell extends ListCell\u003cRoutine\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"        protected void updateItem(Routine routine, boolean empty) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"            super.updateItem(routine, empty);","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"OliviaJHL"},"content":"            if (empty || routine \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"                setText(null);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"            } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"                setGraphic(new ExerciseCard(routine, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"OliviaJHL":47}},{"path":"src/main/java/seedu/fitbook/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dfordarius":2,"-":100}},{"path":"src/main/java/seedu/fitbook/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.Logic;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"    private static final String TITLE \u003d \"FitBook\";","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"    private static final String EXERCISE \u003d \"Exercise\";","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"    private static final String SCHEDULE \u003d \"Schedule\";","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"    private static final String STATISTIC \u003d \"Statistic\";","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"    private Label mainTitle;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"    private Label subTitle;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"    private AnchorPane pagePane;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"    private SchedulePanel schedulePanel;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"    private ExercisePanel exercisePanel;","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"    private Label exercisePanelTitle;","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"    private HBox exerciseHolder;","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"OliviaJHL"},"content":"    private MenuItem exerciseMenuItem;","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"OliviaJHL"},"content":"    private StackPane panelPlaceholder;","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"OliviaJHL"},"content":"    private Pane schedulePanelTitleHolder;","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"OliviaJHL"},"content":"    private Pane exercisePanelTitleHolder;","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"OliviaJHL"},"content":"    private Label scheduleListListPanelTitle;","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"OliviaJHL"},"content":"    private Label exerciseListListPanelTitle;","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"dfordarius"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredClientList());","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"dfordarius"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"OliviaJHL"},"content":"        schedulePanel \u003d new SchedulePanel(logic.getFilteredClientList());","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.getChildren().add(schedulePanel.getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getFitBookFilePath());","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":206,"author":{"gitId":"OliviaJHL"},"content":"    private void setMainTitleText(String text) {","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"OliviaJHL"},"content":"        mainTitle.setText(text);","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"OliviaJHL"},"content":"    private void setSubTitle(String text) {","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"OliviaJHL"},"content":"        subTitle.setText(text);","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":214,"author":{"gitId":"OliviaJHL"},"content":"    private void handleExercise() {","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"OliviaJHL"},"content":"        resultDisplay.setFeedbackToUser(\": Start to handle exercise.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":217,"author":{"gitId":"OliviaJHL"},"content":"        setMainTitleText(EXERCISE);","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"OliviaJHL"},"content":"        setSubTitle(EXERCISE);","lastModifiedDate":"2023-03-16"},{"lineNumber":219,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.setManaged(false);","lastModifiedDate":"2023-03-16"},{"lineNumber":220,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"OliviaJHL"},"content":"        exercisePanel \u003d new ExercisePanel(logic.getFilteredRoutineList());","lastModifiedDate":"2023-03-16"},{"lineNumber":222,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.getChildren().add(exercisePanel.getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":224,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.setManaged(true);","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":226,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":228,"author":{"gitId":"OliviaJHL"},"content":"    private void handleStatistics() {","lastModifiedDate":"2023-03-21"},{"lineNumber":229,"author":{"gitId":"OliviaJHL"},"content":"        resultDisplay.setFeedbackToUser(\": Start to handle exercise.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":230,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":231,"author":{"gitId":"OliviaJHL"},"content":"        setMainTitleText(STATISTIC);","lastModifiedDate":"2023-03-21"},{"lineNumber":232,"author":{"gitId":"OliviaJHL"},"content":"        setSubTitle(STATISTIC);","lastModifiedDate":"2023-03-21"},{"lineNumber":233,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.setManaged(false);","lastModifiedDate":"2023-03-21"},{"lineNumber":234,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":235,"author":{"gitId":"OliviaJHL"},"content":"        exercisePanel \u003d new ExercisePanel(logic.getFilteredRoutineList());","lastModifiedDate":"2023-03-21"},{"lineNumber":236,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.getChildren().add(exercisePanel.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":237,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":238,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.setManaged(true);","lastModifiedDate":"2023-03-21"},{"lineNumber":239,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":240,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":241,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":242,"author":{"gitId":"OliviaJHL"},"content":"    private void handleSchedule() {","lastModifiedDate":"2023-03-16"},{"lineNumber":243,"author":{"gitId":"OliviaJHL"},"content":"        resultDisplay.setFeedbackToUser(\": Start to handle schedule.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":244,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":245,"author":{"gitId":"OliviaJHL"},"content":"        setMainTitleText(TITLE);","lastModifiedDate":"2023-03-16"},{"lineNumber":246,"author":{"gitId":"OliviaJHL"},"content":"        setSubTitle(SCHEDULE);","lastModifiedDate":"2023-03-16"},{"lineNumber":247,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":248,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.setManaged(false);","lastModifiedDate":"2023-03-16"},{"lineNumber":249,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":250,"author":{"gitId":"OliviaJHL"},"content":"        schedulePanel \u003d new SchedulePanel(logic.getFilteredClientList());","lastModifiedDate":"2023-03-16"},{"lineNumber":251,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.getChildren().add(schedulePanel.getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":252,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":253,"author":{"gitId":"OliviaJHL"},"content":"        panelPlaceholder.setManaged(true);","lastModifiedDate":"2023-03-16"},{"lineNumber":254,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":255,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":256,"author":{"gitId":"dfordarius"},"content":"    public ClientListPanel getClientListPanel() {","lastModifiedDate":"2023-02-27"},{"lineNumber":257,"author":{"gitId":"dfordarius"},"content":"        return clientListPanel;","lastModifiedDate":"2023-02-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":259,"author":{"gitId":"OliviaJHL"},"content":"    public ExercisePanel getExercisePanel() {","lastModifiedDate":"2023-03-16"},{"lineNumber":260,"author":{"gitId":"OliviaJHL"},"content":"        return exercisePanel;","lastModifiedDate":"2023-03-16"},{"lineNumber":261,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":262,"author":{"gitId":"OliviaJHL"},"content":"    public SchedulePanel getSchedulePanel() {","lastModifiedDate":"2023-03-16"},{"lineNumber":263,"author":{"gitId":"OliviaJHL"},"content":"        return schedulePanel;","lastModifiedDate":"2023-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"dfordarius"},"content":"     * @see seedu.fitbook.logic.Logic#execute(String)","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"OliviaJHL":95,"dfordarius":15,"-":182}},{"path":"src/main/java/seedu/fitbook/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dfordarius":1,"-":27}},{"path":"src/main/java/seedu/fitbook/ui/ScheduleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":" * A UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"public class ScheduleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"    private static final String FXML \u003d \"ScheduleCard.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on FitBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"    public final Client client;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"    private LocalDateTime currentTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"OliviaJHL"},"content":"    private Label name;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"    private Label id;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"    private Label appointments;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"    private ImageView personIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"     * Creates a {@code ScheduleCard} with the given {@code Client} and index to display.","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"    public ScheduleCard(Client client, int displayedIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"OliviaJHL"},"content":"        this.client \u003d client;","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"        ObservableList\u003cAppointment\u003e appointmentsList \u003d FXCollections.observableArrayList(client.getAppointments());","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"        ObservableList\u003cLocalDateTime\u003e dateTimeList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":"        for (Appointment appointment : appointmentsList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"            dateTimeList.add(appointment.getDateTime());","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"OliviaJHL"},"content":"        //Display the appointments","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"OliviaJHL"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"OliviaJHL"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"OliviaJHL"},"content":"        for (LocalDateTime dateTime : dateTimeList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"OliviaJHL"},"content":"            sb.append(dateTime.format(f));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"OliviaJHL"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"OliviaJHL"},"content":"        currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"OliviaJHL"},"content":"        boolean isExpired \u003d true;","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"OliviaJHL"},"content":"        for (LocalDateTime dateTime: dateTimeList) {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"OliviaJHL"},"content":"            if (currentTime.isBefore(dateTime)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"OliviaJHL"},"content":"                isExpired \u003d false;","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"OliviaJHL"},"content":"                break;","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"OliviaJHL"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"OliviaJHL"},"content":"        if (isExpired) {","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"OliviaJHL"},"content":"            getRoot().setStyle(\"-fx-background-color: derive(#888888, 20%); -fx-border-color: #BEBEBE;\");","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"OliviaJHL"},"content":"        String dateTimeString \u003d sb.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"OliviaJHL"},"content":"        appointments.setText(dateTimeString);","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"OliviaJHL"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"OliviaJHL"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"OliviaJHL"},"content":"        personIcon.setImage(new Image(this.getClass().getResourceAsStream(\"/images/personIcon.png\")));","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"OliviaJHL"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"OliviaJHL"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"OliviaJHL"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"OliviaJHL"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"OliviaJHL"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"OliviaJHL"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"OliviaJHL"},"content":"        if (!(other instanceof ScheduleCard)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"OliviaJHL"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"OliviaJHL"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"OliviaJHL"},"content":"        ScheduleCard card \u003d (ScheduleCard) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"OliviaJHL"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"OliviaJHL"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"OliviaJHL":108}},{"path":"src/main/java/seedu/fitbook/ui/SchedulePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"import seedu.fitbook.model.client.ClientAppointmentComparator;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"public class SchedulePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"    private static final String FXML \u003d \"SchedulePanel.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SchedulePanel.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"    private ListView\u003cClient\u003e scheduleView;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"     * Creates a {@code SchedulePanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"    public SchedulePanel(ObservableList\u003cClient\u003e scheduleList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"        FilteredList\u003cClient\u003e filteredList \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"                new FilteredList\u003c\u003e(scheduleList, client -\u003e !client.getAppointments().isEmpty());","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"        ClientAppointmentComparator comparator \u003d new ClientAppointmentComparator();","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"        SortedList\u003cClient\u003e sortedList \u003d new SortedList\u003c\u003e(filteredList, comparator);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"        scheduleView.setItems(sortedList);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"        scheduleView.setCellFactory(listView -\u003e new ScheduleViewCell());","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code ScheduleCard}.","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"    class ScheduleViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"            if (client !\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"OliviaJHL"},"content":"                System.out.println(client.getAppointments().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"            if (empty || client \u003d\u003d null || client.getAppointments().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"OliviaJHL"},"content":"                setText(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"                setGraphic(new ScheduleCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"OliviaJHL":61}},{"path":"src/main/java/seedu/fitbook/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":27}},{"path":"src/main/java/seedu/fitbook/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dfordarius":1,"-":12}},{"path":"src/main/java/seedu/fitbook/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.MainApp;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.LogsCenter;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.util.StringUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.Logic;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/FitBook.png\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dfordarius":6,"-":82}},{"path":"src/main/java/seedu/fitbook/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.MainApp;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dfordarius":2,"-":86}},{"path":"src/main/resources/view/ClientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"    \u003cHBox alignment\u003d\"TOP_LEFT\" prefWidth\u003d\"100\" \u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"      \u003cImageView fx:id\u003d\"genderList\" fitWidth\u003d\"150\" fitHeight\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"          \u003cInsets  bottom\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"      \u003cFlowPane fx:id\u003d\"appointments\"/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"        \u003cImageView fx:id\u003d\"phoneIcon\" fitWidth\u003d\"35\" fitHeight\u003d\"35\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"        \u003cImageView fx:id\u003d\"addressIcon\" fitWidth\u003d\"35\" fitHeight\u003d\"35\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"OliviaJHL"},"content":"        \u003cImageView fx:id\u003d\"emailIcon\" fitWidth\u003d\"35\" fitHeight\u003d\"35\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":"        \u003cImageView fx:id\u003d\"weightIcon\" fitWidth\u003d\"35\" fitHeight\u003d\"35\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        \u003cLabel fx:id\u003d\"weight\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weight\" /\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"        \u003cImageView fx:id\u003d\"caloriesIcon\" fitWidth\u003d\"35\" fitHeight\u003d\"35\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        \u003cLabel fx:id\u003d\"calorie\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$calorie\"/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"        \u003cImageView fx:id\u003d\"goalIcon\" fitWidth\u003d\"35\" fitHeight\u003d\"35\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        \u003cLabel fx:id\u003d\"goal\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$goal\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"OliviaJHL"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"OliviaJHL"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"OliviaJHL":28,"jundatan":3,"dfordarius":2,"-":34}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"dfordarius"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2023-02-27"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"jundatan"},"content":"#appointments {","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"jundatan"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"jundatan"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-05"},{"lineNumber":357,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":358,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":359,"author":{"gitId":"jundatan"},"content":"#appointments .label {","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"jundatan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"jundatan"},"content":"    -fx-background-color: #00A36C;","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"jundatan"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-05"},{"lineNumber":363,"author":{"gitId":"jundatan"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":364,"author":{"gitId":"jundatan"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":365,"author":{"gitId":"jundatan"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-05"},{"lineNumber":366,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jundatan":14,"dfordarius":1,"-":351}},{"path":"src/main/resources/view/ExerciseCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"                \u003cLabel fx:id\u003d\"routineName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"            \u003cLabel fx:id\u003d\"exercises\"/\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"OliviaJHL":33}},{"path":"src/main/resources/view/ExercisePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"    \u003cListView fx:id\u003d\"exerciseView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"OliviaJHL":1,"-":7}},{"path":"src/main/resources/view/FitBook.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"/*Font*/","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"@font-face {","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"    font-family: \u0027Inter\u0027;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"    font-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"    src: url(\u0027../font/Inter-VariableFont_slnt,wght.ttf\u0027);","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"@font-face {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"    font-family: \u0027La Belle Aurore\u0027;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"    font-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"    src: url(\u0027../font/LaBelleAurore-Regular.ttf\u0027);","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"@font-face {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"    font-family: \u0027Aclonica\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"    font-weight: bold;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"    src: url(\u0027../font/Aclonica-Regular.ttf\u0027);","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"@font-face {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"    font-family: \u0027Lakki Reddy\u0027;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"    font-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"    src: url(\u0027../font/LakkiReddy-Regular.ttf\u0027);","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"@font-face {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"    font-family: \u0027Leckerli One\u0027;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"    font-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"    src: url(\u0027../font/LeckerliOne-Regular.ttf\u0027);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":".Title {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \u0027Leckerli One\u0027;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 25pt;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"OliviaJHL"},"content":".subTitle {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \u0027Leckerli One\u0027;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 15pt;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"/*background color of the FitBook*/","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"#mainContainer {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 90%);","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":".text-field {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \"Leckerli One\";","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"OliviaJHL"},"content":".tab-pane {","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"OliviaJHL"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"OliviaJHL"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"OliviaJHL"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"OliviaJHL"},"content":".table-view {","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"OliviaJHL"},"content":"    -fx-base: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"OliviaJHL"},"content":"    -fx-control-inner-background: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"OliviaJHL"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"OliviaJHL"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"OliviaJHL"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"OliviaJHL"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"OliviaJHL"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"OliviaJHL"},"content":"        transparent","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"OliviaJHL"},"content":"        transparent","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"OliviaJHL"},"content":"        derive(#F88017, 20%)","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"OliviaJHL"},"content":"        transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"OliviaJHL"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"OliviaJHL"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"OliviaJHL"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"OliviaJHL"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"OliviaJHL"},"content":"/*List views*/","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"OliviaJHL"},"content":".list-view {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 20%);","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"OliviaJHL"},"content":".list-view .virtual-flow {","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 20%);","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"OliviaJHL"},"content":".list-cell {","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"OliviaJHL"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"OliviaJHL"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 20%);","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 10 10 10 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"OliviaJHL"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 40%);","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius:10;","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"OliviaJHL"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 60%);","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius:10;","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"OliviaJHL"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"OliviaJHL"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"OliviaJHL"},"content":".list-cell:filled:selected .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"OliviaJHL"},"content":".list-cell .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"OliviaJHL"},"content":".cell_big_label {","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \"Aclonica\";","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"OliviaJHL"},"content":".cell_small_label {","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"OliviaJHL"},"content":".stack-pane {","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"OliviaJHL"},"content":"     -fx-background-color: derive(#F88017, 90%);","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"OliviaJHL"},"content":".pane-with-border {","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"OliviaJHL"},"content":"     -fx-background-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"OliviaJHL"},"content":"     -fx-border-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"OliviaJHL"},"content":"     -fx-border-top-width: 0px;","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"OliviaJHL"},"content":"/*result display*/","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"OliviaJHL"},"content":".result-display {","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 90%);","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"dfordarius"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: derive(#F88017, 50%);","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"OliviaJHL"},"content":".result-display .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"OliviaJHL"},"content":"    /*-fx-text-fill: black !important;*/","lastModifiedDate":"2023-03-07"},{"lineNumber":192,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"OliviaJHL"},"content":"/*status bar*/","lastModifiedDate":"2023-03-07"},{"lineNumber":197,"author":{"gitId":"OliviaJHL"},"content":".status-bar {","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":201,"author":{"gitId":"OliviaJHL"},"content":".status-bar .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"dfordarius"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 2px;","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"OliviaJHL"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"OliviaJHL"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"OliviaJHL"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":215,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":216,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"OliviaJHL"},"content":".grid-pane {","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"OliviaJHL"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":227,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":228,"author":{"gitId":"OliviaJHL"},"content":"/*Menu bar*/","lastModifiedDate":"2023-03-07"},{"lineNumber":229,"author":{"gitId":"OliviaJHL"},"content":".menu-bar {","lastModifiedDate":"2023-03-07"},{"lineNumber":230,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 25%);","lastModifiedDate":"2023-03-07"},{"lineNumber":231,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":232,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":233,"author":{"gitId":"OliviaJHL"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":234,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-07"},{"lineNumber":235,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \"Aclonica\";","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":237,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":238,"author":{"gitId":"OliviaJHL"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":239,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":240,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":241,"author":{"gitId":"OliviaJHL"},"content":".menu-button:showing, .menu-button:hover {","lastModifiedDate":"2023-03-07"},{"lineNumber":242,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 60%);","lastModifiedDate":"2023-03-07"},{"lineNumber":243,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":245,"author":{"gitId":"OliviaJHL"},"content":".context-menu {","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":249,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":250,"author":{"gitId":"OliviaJHL"},"content":".context-menu .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":251,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":252,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":253,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":254,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":255,"author":{"gitId":"OliviaJHL"},"content":".menu-item:showing, .menu-item:hover {","lastModifiedDate":"2023-03-07"},{"lineNumber":256,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #FFEFD5;","lastModifiedDate":"2023-03-07"},{"lineNumber":257,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":258,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":259,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":260,"author":{"gitId":"OliviaJHL"},"content":".menu-item:showing .label, .menu-item:hover .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":261,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":262,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":263,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":264,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"jundatan"},"content":".menu-item:focused {","lastModifiedDate":"2023-03-11"},{"lineNumber":266,"author":{"gitId":"jundatan"},"content":"    -fx-background-color: derive(#F88017, 60%);","lastModifiedDate":"2023-03-11"},{"lineNumber":267,"author":{"gitId":"jundatan"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-11"},{"lineNumber":268,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":269,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":270,"author":{"gitId":"jundatan"},"content":".menu-item:focused .label{","lastModifiedDate":"2023-03-11"},{"lineNumber":271,"author":{"gitId":"jundatan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-11"},{"lineNumber":272,"author":{"gitId":"jundatan"},"content":"    -fx-background-color: derive(#F88017, 60%);","lastModifiedDate":"2023-03-11"},{"lineNumber":273,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":274,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":275,"author":{"gitId":"OliviaJHL"},"content":"/*","lastModifiedDate":"2023-03-07"},{"lineNumber":276,"author":{"gitId":"OliviaJHL"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-07"},{"lineNumber":277,"author":{"gitId":"OliviaJHL"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"OliviaJHL"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"OliviaJHL"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":280,"author":{"gitId":"OliviaJHL"},"content":".button {","lastModifiedDate":"2023-03-07"},{"lineNumber":281,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-07"},{"lineNumber":282,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-07"},{"lineNumber":284,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":285,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":286,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-07"},{"lineNumber":287,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-07"},{"lineNumber":288,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":289,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":291,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":292,"author":{"gitId":"OliviaJHL"},"content":".button:hover {","lastModifiedDate":"2023-03-07"},{"lineNumber":293,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-03-07"},{"lineNumber":294,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":295,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":296,"author":{"gitId":"OliviaJHL"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-07"},{"lineNumber":297,"author":{"gitId":"OliviaJHL"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":298,"author":{"gitId":"OliviaJHL"},"content":"  -fx-text-fill: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":299,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":300,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":301,"author":{"gitId":"OliviaJHL"},"content":".button:focused {","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-03-07"},{"lineNumber":303,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":304,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-07"},{"lineNumber":305,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":306,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":307,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":308,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":309,"author":{"gitId":"OliviaJHL"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-07"},{"lineNumber":310,"author":{"gitId":"OliviaJHL"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-07"},{"lineNumber":311,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":312,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":313,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":314,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":315,"author":{"gitId":"OliviaJHL"},"content":".button:default {","lastModifiedDate":"2023-03-07"},{"lineNumber":316,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":317,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-07"},{"lineNumber":318,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":319,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":320,"author":{"gitId":"OliviaJHL"},"content":".button:default:hover {","lastModifiedDate":"2023-03-07"},{"lineNumber":321,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":322,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":323,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":324,"author":{"gitId":"OliviaJHL"},"content":".dialog-pane {","lastModifiedDate":"2023-03-07"},{"lineNumber":325,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":326,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":327,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":328,"author":{"gitId":"OliviaJHL"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-07"},{"lineNumber":329,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":330,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":331,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":332,"author":{"gitId":"OliviaJHL"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-07"},{"lineNumber":333,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-07"},{"lineNumber":334,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":335,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 25%);","lastModifiedDate":"2023-03-07"},{"lineNumber":336,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":337,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":338,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":339,"author":{"gitId":"OliviaJHL"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-07"},{"lineNumber":340,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 25%);","lastModifiedDate":"2023-03-07"},{"lineNumber":341,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":342,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":343,"author":{"gitId":"OliviaJHL"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-07"},{"lineNumber":344,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-07"},{"lineNumber":345,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-07"},{"lineNumber":346,"author":{"gitId":"OliviaJHL"},"content":"    -fx-fill: derive(#F88017, 70%);","lastModifiedDate":"2023-03-07"},{"lineNumber":347,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":348,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":349,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":350,"author":{"gitId":"OliviaJHL"},"content":"/*scroll bar*/","lastModifiedDate":"2023-03-07"},{"lineNumber":351,"author":{"gitId":"OliviaJHL"},"content":".scroll-bar {","lastModifiedDate":"2023-03-07"},{"lineNumber":352,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 70%);","lastModifiedDate":"2023-03-07"},{"lineNumber":353,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":354,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":355,"author":{"gitId":"OliviaJHL"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-07"},{"lineNumber":356,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: derive(#F88017, 30%);","lastModifiedDate":"2023-03-07"},{"lineNumber":357,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-07"},{"lineNumber":358,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":359,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":360,"author":{"gitId":"OliviaJHL"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-07"},{"lineNumber":361,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":362,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":363,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":364,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":365,"author":{"gitId":"OliviaJHL"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-07"},{"lineNumber":366,"author":{"gitId":"OliviaJHL"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-07"},{"lineNumber":367,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":368,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":369,"author":{"gitId":"OliviaJHL"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-07"},{"lineNumber":370,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-07"},{"lineNumber":371,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":372,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"OliviaJHL"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-07"},{"lineNumber":374,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":375,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":376,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":377,"author":{"gitId":"OliviaJHL"},"content":"#cardPane {","lastModifiedDate":"2023-03-07"},{"lineNumber":378,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-07"},{"lineNumber":379,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":380,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":381,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: derive(#F88017, 50%);","lastModifiedDate":"2023-03-07"},{"lineNumber":383,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":384,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":385,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":386,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":387,"author":{"gitId":"OliviaJHL"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-07"},{"lineNumber":388,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-07"},{"lineNumber":389,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-07"},{"lineNumber":390,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":391,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":392,"author":{"gitId":"OliviaJHL"},"content":"#commandTextField {","lastModifiedDate":"2023-03-07"},{"lineNumber":393,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":394,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":395,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":396,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-color: derive(#F88017, 50%);","lastModifiedDate":"2023-03-07"},{"lineNumber":397,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":398,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-bottom: solid;","lastModifiedDate":"2023-03-08"},{"lineNumber":399,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-top: none;","lastModifiedDate":"2023-03-08"},{"lineNumber":400,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-left: none;","lastModifiedDate":"2023-03-08"},{"lineNumber":401,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-right: none;","lastModifiedDate":"2023-03-08"},{"lineNumber":402,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-width: 0 0 2 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":403,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-03-07"},{"lineNumber":404,"author":{"gitId":"dfordarius"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2023-03-15"},{"lineNumber":405,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":406,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":407,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":408,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":409,"author":{"gitId":"OliviaJHL"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2023-03-07"},{"lineNumber":410,"author":{"gitId":"OliviaJHL"},"content":"    -fx-effect: innershadow(gaussian, #F88017, 10, 0, 0, 0);","lastModifiedDate":"2023-03-07"},{"lineNumber":411,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #F88017;","lastModifiedDate":"2023-03-07"},{"lineNumber":412,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":413,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":414,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":415,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":416,"author":{"gitId":"OliviaJHL"},"content":"/*tag*/","lastModifiedDate":"2023-03-07"},{"lineNumber":417,"author":{"gitId":"OliviaJHL"},"content":"#tags {","lastModifiedDate":"2023-03-07"},{"lineNumber":418,"author":{"gitId":"OliviaJHL"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-07"},{"lineNumber":419,"author":{"gitId":"OliviaJHL"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-07"},{"lineNumber":420,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":421,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":422,"author":{"gitId":"OliviaJHL"},"content":"#tags .label {","lastModifiedDate":"2023-03-07"},{"lineNumber":423,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":424,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-07"},{"lineNumber":425,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 1 4 1 4;","lastModifiedDate":"2023-03-08"},{"lineNumber":426,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-08"},{"lineNumber":427,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-08"},{"lineNumber":428,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-03-08"},{"lineNumber":429,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \"Aclonica\";","lastModifiedDate":"2023-03-08"},{"lineNumber":430,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":431,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":432,"author":{"gitId":"OliviaJHL"},"content":"#appointments .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":433,"author":{"gitId":"OliviaJHL"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":434,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-color: #FF0000;","lastModifiedDate":"2023-03-08"},{"lineNumber":435,"author":{"gitId":"OliviaJHL"},"content":"    -fx-padding: 1 4 1 4;","lastModifiedDate":"2023-03-08"},{"lineNumber":436,"author":{"gitId":"OliviaJHL"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-08"},{"lineNumber":437,"author":{"gitId":"OliviaJHL"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-08"},{"lineNumber":438,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-03-08"},{"lineNumber":439,"author":{"gitId":"OliviaJHL"},"content":"    -fx-font-family: \"Aclonica\";","lastModifiedDate":"2023-03-08"},{"lineNumber":440,"author":{"gitId":"OliviaJHL"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":441,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"OliviaJHL":424,"jundatan":11,"dfordarius":6}},{"path":"src/main/resources/view/GraphPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"OliviaJHL":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"FitBook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"    \u003cImage url\u003d\"@/images/FitBook.png\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"        \u003cURL value\u003d\"@FitBook.css\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"      \u003cVBox id\u003d\"mainContainer\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"FitBook\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSchedule\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Schedule\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Exercise\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"            \u003cMenuItem fx:id\u003d\"exerciseMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExercise\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Exercise\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"OliviaJHL"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"OliviaJHL"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Statistic\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"OliviaJHL"},"content":"            \u003cMenuItem fx:id\u003d\"statisticMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleStatistics\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Statistic\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        \u003cPane fx:id\u003d\"mainTitleHolder\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"530.0\" prefWidth\u003d\"600\" style\u003d\"-fx-background-color: derive(#F88017, 50%); -fx-background-radius: 10; -fx-effect: dropshadow(three-pass-box, derive(#F88017, -20%), 10, 0, 4, 4);\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"OliviaJHL"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"OliviaJHL"},"content":"            \u003cLabel fx:id\u003d\"mainTitle\" alignment\u003d\"CENTER\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"540.0\" prefWidth\u003d\"${mainTitleHolder.parent.width}\" styleClass\u003d\"Title\" text\u003d\"FitBook\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"OliviaJHL"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"OliviaJHL"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"OliviaJHL"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/Pane\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"          \u003cVBox fx:id\u003d\"clientList\" minWidth\u003d\"340\" prefHeight\u003d\"200\" prefWidth\u003d\"600\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"            \u003cPane fx:id\u003d\"clientListPanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" style\u003d\"-fx-background-color: derive(#F88017, 20%); -fx-background-radius: 10 10 0 0; -fx-effect: dropshadow(three-pass-box, derive(#F88017, -20%), 10, 0, 4, 4);\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"OliviaJHL"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"OliviaJHL"},"content":"                \u003cLabel fx:id\u003d\"clientListPanelTitle\" alignment\u003d\"CENTER_LEFT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${clientListPanelTitleHolder.width}\" styleClass\u003d\"subTitle\" text\u003d\"Clients\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":69,"author":{"gitId":"OliviaJHL"},"content":"                    \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"OliviaJHL"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"OliviaJHL"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"OliviaJHL"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"OliviaJHL"},"content":"                \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"OliviaJHL"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/Pane\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"            \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" style\u003d\"-fx-background-radius: 10 10 0 0; -fx-effect: dropshadow(three-pass-box, derive(#F88017, -20%), 10, 0, 4, 4);\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"OliviaJHL"},"content":"            \u003cVBox fx:id\u003d\"scheduleList\" minWidth\u003d\"340\" prefHeight\u003d\"200\" prefWidth\u003d\"600\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"OliviaJHL"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"OliviaJHL"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"OliviaJHL"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"OliviaJHL"},"content":"              \u003cPane fx:id\u003d\"schedulePanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" style\u003d\"-fx-background-color: derive(#F88017, 20%); -fx-background-radius: 10 10 0 0; -fx-effect: dropshadow(three-pass-box, derive(#F88017, -20%), 10, 0, 4, 4);\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"OliviaJHL"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"OliviaJHL"},"content":"                  \u003cLabel fx:id\u003d\"subTitle\" alignment\u003d\"CENTER_LEFT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${schedulePanelTitleHolder.width}\" styleClass\u003d\"subTitle\" text\u003d\"Schedules\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"OliviaJHL"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"OliviaJHL"},"content":"                      \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"OliviaJHL"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"OliviaJHL"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"OliviaJHL"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"OliviaJHL"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"OliviaJHL"},"content":"                  \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"OliviaJHL"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"OliviaJHL"},"content":"              \u003c/Pane\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"OliviaJHL"},"content":"              \u003cStackPane fx:id\u003d\"panelPlaceholder\" style\u003d\"-fx-background-radius: 10 10 0 0; -fx-effect: dropshadow(three-pass-box, derive(#F88017, -20%), 10, 0, 4, 4);\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"OliviaJHL"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"120\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"50\" prefHeight\u003d\"100\" style\u003d\"-fx-effect: dropshadow(three-pass-box, derive(#F88017, -20%), 10, 0, 4, 4);\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"OliviaJHL"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"OliviaJHL"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\" 0.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"OliviaJHL"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"OliviaJHL"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"40.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"OliviaJHL"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"OliviaJHL"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\" 0.0\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"OliviaJHL"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"OliviaJHL"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"OliviaJHL":63,"dfordarius":11,"-":44}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"  \u003cPane maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\" StackPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"      \u003cHBox fx:id\u003d\"resultPane\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"            prefWidth\u003d\"${resultPane.parent.width}\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"          \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"                    maxHeight\u003d\"110.0\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"          \u003cImageView fitHeight\u003d\"120.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"                     HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"              \u003cImage url\u003d\"@../images/FitnessG.png\"/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"  \u003c/Pane\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"OliviaJHL":23,"-":8}},{"path":"src/main/resources/view/ScheduleCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"OliviaJHL"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"OliviaJHL"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"OliviaJHL"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"OliviaJHL"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"OliviaJHL"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"OliviaJHL"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"OliviaJHL"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"OliviaJHL"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"OliviaJHL"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"OliviaJHL"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"OliviaJHL"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"OliviaJHL"},"content":"                \u003cLabel fx:id\u003d\"appointments\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"OliviaJHL"},"content":"                \u003cImageView fx:id\u003d\"personIcon\" fitWidth\u003d\"35\" fitHeight\u003d\"35\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"OliviaJHL"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"OliviaJHL"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"OliviaJHL"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"OliviaJHL"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"OliviaJHL":37}},{"path":"src/main/resources/view/SchedulePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OliviaJHL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"OliviaJHL"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"OliviaJHL"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"OliviaJHL"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"OliviaJHL"},"content":"    \u003cListView fx:id\u003d\"scheduleView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"OliviaJHL"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"OliviaJHL":8}},{"path":"src/test/java/seedu/fitbook/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"dfordarius":1,"-":57}},{"path":"src/test/java/seedu/fitbook/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"dfordarius":1,"-":26}},{"path":"src/test/java/seedu/fitbook/commons/core/CsvConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"public class CsvConfigTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"        CsvConfig defaultCsvConfig \u003d new CsvConfig();","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        assertNotNull(defaultCsvConfig);","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"        assertTrue(defaultCsvConfig.equals(defaultCsvConfig));","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":15}},{"path":"src/test/java/seedu/fitbook/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":2,"-":133}},{"path":"src/test/java/seedu/fitbook/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.core.index;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        final Index fifthClientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        assertTrue(fifthClientIndex.equals(fifthClientIndex));","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        assertFalse(fifthClientIndex.equals(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        assertFalse(fifthClientIndex.equals(5.0f));","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        assertFalse(fifthClientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"dfordarius":9,"-":51}},{"path":"src/test/java/seedu/fitbook/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"OliviaJHL"},"content":"        assertNotNull(AppUtil.getImage(\"/images/FitBook.png\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"OliviaJHL":1,"dfordarius":2,"-":33}},{"path":"src/test/java/seedu/fitbook/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"dfordarius":3,"-":105}},{"path":"src/test/java/seedu/fitbook/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Config;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"dfordarius":4,"-":112}},{"path":"src/test/java/seedu/fitbook/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":2,"-":21}},{"path":"src/test/java/seedu/fitbook/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.testutil.TestUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":3,"-":42}},{"path":"src/test/java/seedu/fitbook/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.commons.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"    // @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"    // public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"    //     assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"    //             -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"    // }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"kalarisng"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kalarisng"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"kalarisng"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"kalarisng"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"kalarisng"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kalarisng":12,"dfordarius":2,"-":127}},{"path":"src/test/java/seedu/fitbook/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.CALORIE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GOAL_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ListClientsCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.storage.JsonFitBookStorage;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.storage.StorageManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.routine.JsonFitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        JsonFitBookStorage fitBookStorage \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"                new JsonFitBookStorage(temporaryFolder.resolve(\"fitBook.json\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        JsonFitBookExerciseRoutineStorage fitBookExerciseRoutineStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"                new JsonFitBookExerciseRoutineStorage(temporaryFolder.resolve(\"exerciseRoutine.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        StorageManager storage \u003d new StorageManager(fitBookStorage, userPrefsStorage, fitBookExerciseRoutineStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"OliviaJHL"},"content":"        String listCommand \u003d ListClientsCommand.COMMAND_WORD;","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"OliviaJHL"},"content":"        assertCommandSuccess(listCommand, ListClientsCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        // Setup LogicManager with JsonFitBookIoExceptionThrowingStub","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        JsonFitBookStorage fitBookStorage \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"                new JsonFitBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionFitBook.json\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"        JsonFitBookExerciseRoutineStorage fitBookExerciseRoutineStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"                new JsonFitBookExerciseRoutineStorage(temporaryFolder.resolve(\"ioExceptionExerciseRoutine.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"        StorageManager storage \u003d new StorageManager(fitBookStorage, userPrefsStorage, fitBookExerciseRoutineStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"                + ADDRESS_DESC_AMY + WEIGHT_DESC_AMY + GENDER_DESC_AMY + GOAL_DESC_AMY + CALORIE_DESC_AMY;","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().withAppointments().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        FitBookModelManager expectedFitBookModel \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.addClient(expectedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"     * - the internal model manager state is the same as that in {@code expectedFitBookModel} \u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"     * @see #assertCommandFailure(String, Class, String, FitBookModel)","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"            FitBookModel expectedFitBookModel) throws CommandException, ParseException {","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedFitBookModel, model);","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"dfordarius"},"content":"     * @see #assertCommandFailure(String, Class, String, FitBookModel)","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"     * @see #assertCommandFailure(String, Class, String, FitBookModel)","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"     * @see #assertCommandFailure(String, Class, String, FitBookModel)","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(model.getFitBook(),","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"                model.getFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"dfordarius"},"content":"     * - the internal model manager state is the same as that in {@code expectedFitBookModel} \u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"dfordarius"},"content":"     * @see #assertCommandSuccess(String, String, FitBookModel)","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"            String expectedMessage, FitBookModel expectedFitBookModel) {","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedFitBookModel, model);","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"dfordarius"},"content":"    private static class JsonFitBookIoExceptionThrowingStub extends JsonFitBookStorage {","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"        private JsonFitBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"dfordarius"},"content":"        public void saveFitBook(ReadOnlyFitBook fitBook, Path filePath) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"OliviaJHL":2,"jundatan":12,"dfordarius":52,"-":106}},{"path":"src/test/java/seedu/fitbook/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"                new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"                new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"jundatan":5,"-":51}},{"path":"src/test/java/seedu/fitbook/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE_NUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ROUTINE;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.RoutineNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.EditClientDescriptorBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.EditRoutineDescriptorBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    // For Client","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"    public static final String VALID_WEIGHT_AMY \u003d \"23\";","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    public static final String VALID_WEIGHT_BOB \u003d \"26\";","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    public static final String VALID_GOAL_BOB \u003d \"gain weight\";","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    public static final String VALID_GOAL_AMY \u003d \"lose weight\";","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    public static final String VALID_CALORIE_AMY \u003d \"2101\";","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"    public static final String VALID_CALORIE_BOB \u003d \"2100\";","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"OliviaJHL"},"content":"    public static final String VALID_APPOINTMENT_DATE_ONE \u003d \"13-01-2020 18:30\";","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"OliviaJHL"},"content":"    public static final String VALID_APPOINTMENT_DATE_TWO \u003d \"14-12-2021 18:30\";","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"    public static final String WEIGHT_DESC_AMY \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    public static final String WEIGHT_DESC_BOB \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"    public static final String GOAL_DESC_BOB \u003d \" \" + PREFIX_GOAL + VALID_GOAL_BOB;","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    public static final String GOAL_DESC_AMY \u003d \" \" + PREFIX_GOAL + VALID_GOAL_AMY;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"    public static final String CALORIE_DESC_AMY \u003d \" \" + PREFIX_CALORIE + VALID_CALORIE_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"    public static final String CALORIE_DESC_BOB \u003d \" \" + PREFIX_CALORIE + VALID_CALORIE_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"    public static final String APPOINTMENT_DESC_DATE_ONE \u003d \" \" + PREFIX_APPOINTMENT + VALID_APPOINTMENT_DATE_ONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"    public static final String APPOINTMENT_DESC_DATE_TWO \u003d \" \" + PREFIX_APPOINTMENT + VALID_APPOINTMENT_DATE_TWO;","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"    public static final String INVALID_CALORIE_DESC \u003d \" \" + PREFIX_CALORIE + \"Lol\";","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"    public static final String INVALID_APPOINTMENT_DESC \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"            \" \" + PREFIX_APPOINTMENT + \"11a-11-2020\"; // \u0027a\u0027 not allowed in appointment","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"g\";","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"    public static final String INVALID_WEIGHT_DESC \u003d \" \" + PREFIX_WEIGHT + \"-23\";","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"    public static final EditCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"    public static final EditCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"                .withTags(VALID_TAG_FRIEND).withAppointments(VALID_APPOINTMENT_DATE_ONE).withGoal(VALID_GOAL_AMY)","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"                .withCalorie(VALID_CALORIE_AMY).withGender(VALID_GENDER_AMY).withWeight(VALID_WEIGHT_AMY).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"                .withWeight(VALID_WEIGHT_BOB).withGender(VALID_GENDER_BOB).withGoal(VALID_GOAL_BOB)","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"                .withAppointments(VALID_APPOINTMENT_DATE_ONE, VALID_APPOINTMENT_DATE_TWO)","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withCalorie(VALID_CALORIE_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"    // For Routine","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    public static final String VALID_ROUTINE_NAME_CARDIO \u003d \"Cardio\";","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"    public static final String VALID_ROUTINE_NAME_STRENGTH \u003d \"Strength\";","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"    public static final String VALID_ROUTINE_NAME_SWIM \u003d \"Swim\";","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"    public static final String VALID_EXERCISE_PUSHUP \u003d \"3x10 Push Ups\";","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"    public static final String VALID_EXERCISE_SITUP \u003d \"4x15 Sit ups\";","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"    public static final String VALID_EXERCISE_INDEX \u003d \"1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"    public static final String NAME_DESC_ROUTINE_CARDIO \u003d \" \" + PREFIX_ROUTINE + VALID_ROUTINE_NAME_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"    public static final String NAME_DESC_ROUTINE_STRENGTH \u003d \" \" + PREFIX_ROUTINE + VALID_ROUTINE_NAME_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"    public static final String EXERCISE_DESC_PUSHUP \u003d \" \" + PREFIX_EXERCISE + VALID_EXERCISE_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"    public static final String EXERCISE_DESC_SITUP \u003d \" \" + PREFIX_EXERCISE + VALID_EXERCISE_SITUP;","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"    public static final String EXERCISE_DESC_INDEX \u003d \" \" + PREFIX_EXERCISE_NUMBER + VALID_EXERCISE_INDEX;","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"    public static final String INVALID_ROUTINE_NAME_DESC \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"            \" \" + PREFIX_ROUTINE + \"HIIT$\"; // \u0027$\u0027 not allowed in routine names.","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"    public static final String INVALID_EXERCISE_NAME_DESC \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"            \" \" + PREFIX_EXERCISE + \"Situps@\"; // \u0027@\u0027 not allowed in exercise.","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"    public static final String INVALID_EXERCISE_INDEX_DESC \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"            \" \" + PREFIX_EXERCISE_NUMBER + \"3@\"; // \u0027@\u0027 not allowed in exercise.","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"    public static final EditRoutineCommand.EditRoutineDescriptor DESC_CARDIO;","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"    public static final EditRoutineCommand.EditRoutineDescriptor DESC_STRENGTH;","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"    static {","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"        DESC_CARDIO \u003d new EditRoutineDescriptorBuilder().withExercisesIndex(VALID_EXERCISE_INDEX)","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"dfordarius"},"content":"                .withExercise(VALID_EXERCISE_PUSHUP).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"        DESC_STRENGTH \u003d new EditRoutineDescriptorBuilder().withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"     * - the {@code actualFitBookModel} matches {@code expectedFitBookModel}","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"dfordarius"},"content":"    public static void assertCommandSuccess(Command command, FitBookModel actualFitBookModel,","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"dfordarius"},"content":"                                            CommandResult expectedCommandResult, FitBookModel expectedFitBookModel) {","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"dfordarius"},"content":"            CommandResult result \u003d command.execute(actualFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"dfordarius"},"content":"            assertEquals(expectedFitBookModel, actualFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, FitBookModel, CommandResult, FitBookModel)}","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"    public static void assertCommandSuccess(Command command, FitBookModel actualFitBookModel, String expectedMessage,","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"            FitBookModel expectedFitBookModel) {","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(command, actualFitBookModel, expectedCommandResult, expectedFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"     * - the {@code actualFitBookModel} matches {@code expectedFitBookModel}","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"    public static void assertCommandSuccess(Command command, Command commandTwo,","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"                                            FitBookModel actualFitBookModel,","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"                                            CommandResult expectedCommandResult, FitBookModel expectedFitBookModel) {","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"            CommandResult result \u003d command.execute(actualFitBookModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"            commandTwo.execute(actualFitBookModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"            assertEquals(expectedFitBookModel, actualFitBookModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, FitBookModel, CommandResult, FitBookModel)}","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"    public static void assertCommandSuccess(Command command, Command commandTwo,","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"                                            FitBookModel actualFitBookModel, String expectedMessage,","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"                                            FitBookModel expectedFitBookModel) {","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"jundatan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"jundatan"},"content":"        assertCommandSuccess(command, commandTwo, actualFitBookModel, expectedCommandResult, expectedFitBookModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"dfordarius"},"content":"     * - FitBook, filtered client list and selected client in {@code actualFitBookModel} remain unchanged","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":205,"author":{"gitId":"dfordarius"},"content":"    public static void assertCommandFailure(Command command, FitBookModel actualFitBookModel, String expectedMessage) {","lastModifiedDate":"2023-02-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":208,"author":{"gitId":"dfordarius"},"content":"        FitBook expectedFitBook \u003d new FitBook(actualFitBookModel.getFitBook());","lastModifiedDate":"2023-02-27"},{"lineNumber":209,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualFitBookModel.getFilteredClientList());","lastModifiedDate":"2023-02-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":211,"author":{"gitId":"dfordarius"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualFitBookModel));","lastModifiedDate":"2023-02-27"},{"lineNumber":212,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedFitBook, actualFitBookModel.getFitBook());","lastModifiedDate":"2023-02-27"},{"lineNumber":213,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedFilteredList, actualFitBookModel.getFilteredClientList());","lastModifiedDate":"2023-02-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":216,"author":{"gitId":"dfordarius"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2023-02-27"},{"lineNumber":217,"author":{"gitId":"dfordarius"},"content":"     * {@code model}\u0027s FitBook.","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":219,"author":{"gitId":"dfordarius"},"content":"    public static void showClientAtIndex(FitBookModel model, Index targetIndex) {","lastModifiedDate":"2023-02-27"},{"lineNumber":220,"author":{"gitId":"dfordarius"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2023-02-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":222,"author":{"gitId":"dfordarius"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":223,"author":{"gitId":"dfordarius"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-02-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":226,"author":{"gitId":"dfordarius"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2023-02-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":228,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"dfordarius"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Routine at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"dfordarius"},"content":"     * {@code model}\u0027s FitBook.","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"dfordarius"},"content":"    public static void showRoutineAtIndex(FitBookModel model, Index targetIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"dfordarius"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredRoutineList().size());","lastModifiedDate":"2023-03-12"},{"lineNumber":234,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":235,"author":{"gitId":"dfordarius"},"content":"        Routine routine \u003d model.getFilteredRoutineList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":236,"author":{"gitId":"dfordarius"},"content":"        final String[] splitRoutineName \u003d routine.getRoutineName().routineName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredRoutineList(new RoutineNameContainsKeywordsPredicate(Arrays.asList(splitRoutineName[0])));","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":239,"author":{"gitId":"dfordarius"},"content":"        assertEquals(1, model.getFilteredRoutineList().size());","lastModifiedDate":"2023-03-12"},{"lineNumber":240,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kalarisng":1,"OliviaJHL":2,"jundatan":74,"dfordarius":81,"-":84}},{"path":"src/test/java/seedu/fitbook/logic/commands/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GOAL_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.testutil.client.EditClientDescriptorBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        // different weight -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withWeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        // different goal -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withGoal(VALID_GOAL_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dfordarius":32,"-":41}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) for {@code AddCommand}.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model;","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        model \u003d new FitBookModelManager(getTypicalFitBook(), getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"                new FitBookModelManager(model.getFitBook(), model.getFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.addClient(validClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        CommandTestUtil.assertCommandSuccess(new AddCommand(validClient), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validClient), expectedFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        Client clientInList \u003d model.getFitBook().getClientList().get(0);","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        assertCommandFailure(new AddCommand(clientInList), model, AddCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jundatan":9,"dfordarius":15,"-":23}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    public void execute_clientAcceptedByFitBookModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        FitBookModelStubAcceptingClientAdded modelStub \u003d new FitBookModelStubAcceptingClientAdded();","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        CommandResult commandResult \u003d new AddCommand(validClient).execute(modelStub);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        AddCommand addCommand \u003d new AddCommand(validClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        FitBookModelStub modelStub \u003d new FitBookModelStubWithClient(validClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    private class FitBookModelStub implements FitBookModel {","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"        public Path getFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"        public void setFitBookFilePath(Path fitBookFilePath) {","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"dfordarius"},"content":"        public void setFitBook(ReadOnlyFitBook newData) {","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"        public ReadOnlyFitBook getFitBook() {","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"dfordarius"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"        public void setFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine exerciseRoutine) {","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"dfordarius"},"content":"        public ReadOnlyFitBookExerciseRoutine getFitBookExerciseRoutine() {","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"        // Routine not used here.","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"dfordarius"},"content":"        public boolean hasRoutine(Routine routine) {","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"dfordarius"},"content":"        public void deleteRoutine(Routine target) {","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"dfordarius"},"content":"        public void addRoutine(Routine routine) {","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"dfordarius"},"content":"        public void setRoutine(Routine target, Routine editedRoutine) {","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"dfordarius"},"content":"        public ObservableList\u003cRoutine\u003e getFilteredRoutineList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"dfordarius"},"content":"        public void updateFilteredRoutineList(Predicate\u003cRoutine\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"dfordarius"},"content":"     * A FitBookModel stub that contains a single client.","lastModifiedDate":"2023-02-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"dfordarius"},"content":"    private class FitBookModelStubWithClient extends FitBookModelStub {","lastModifiedDate":"2023-02-27"},{"lineNumber":202,"author":{"gitId":"dfordarius"},"content":"        private final Client client;","lastModifiedDate":"2023-02-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"dfordarius"},"content":"        FitBookModelStubWithClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":205,"author":{"gitId":"dfordarius"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":206,"author":{"gitId":"dfordarius"},"content":"            this.client \u003d client;","lastModifiedDate":"2023-02-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"dfordarius"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":211,"author":{"gitId":"dfordarius"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":212,"author":{"gitId":"dfordarius"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"dfordarius"},"content":"     * A FitBookModel stub that always accept the client being added.","lastModifiedDate":"2023-02-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"dfordarius"},"content":"    private class FitBookModelStubAcceptingClientAdded extends FitBookModelStub {","lastModifiedDate":"2023-02-27"},{"lineNumber":220,"author":{"gitId":"dfordarius"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"dfordarius"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"dfordarius"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":225,"author":{"gitId":"dfordarius"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"dfordarius"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":230,"author":{"gitId":"dfordarius"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":231,"author":{"gitId":"dfordarius"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"dfordarius"},"content":"        public ReadOnlyFitBook getFitBook() {","lastModifiedDate":"2023-02-27"},{"lineNumber":236,"author":{"gitId":"dfordarius"},"content":"            return new FitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jundatan":14,"dfordarius":88,"-":138}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public void execute_emptyFitBook_success() {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        FitBookModel model \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"                expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public void execute_nonEmptyFitBook_success() {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.setFitBook(new FitBook());","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"                expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jundatan":17,"dfordarius":5,"-":16}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) and unit tests for","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, clientToDelete);","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        FitBookModelManager expectedFitBookModel \u003d new FitBookModelManager(model.getFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.deleteClient(clientToDelete);","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, clientToDelete);","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(model.getFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.deleteClient(clientToDelete);","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"        showNoClient(expectedFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        // ensures that outOfBoundIndex is still in bounds of FitBook list","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFitBook().getClientList().size());","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"    private void showNoClient(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kalarisng":7,"jundatan":10,"dfordarius":23,"-":72}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.EditClientDescriptorBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertTrue(CommandTestUtil.DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertTrue(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_AMY));","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(5));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_BOB));","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        // different weight -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"                .withWeight(CommandTestUtil.VALID_WEIGHT_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"                .withGender(CommandTestUtil.VALID_GENDER_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kalarisng":29,"jundatan":2,"dfordarius":6,"-":28}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.EditClientDescriptorBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) and unit tests for EditCommand.","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(new FitBook(model.getFitBook()),","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutine(model.getFitBookExerciseRoutine()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        Client editedClient \u003d clientInList.withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastClient, descriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(new FitBook(model.getFitBook()),","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutine(model.getFitBookExerciseRoutine()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.setClient(lastClient, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditClientDescriptor());","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(new FitBook(model.getFitBook()),","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutine(model.getFitBookExerciseRoutine()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"kalarisng"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"                new EditClientDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(new FitBook(model.getFitBook()),","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutine(model.getFitBookExerciseRoutine()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"        // edit client in filtered list into a duplicate in FitBook","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"        Client clientInList \u003d model.getFitBook().getClientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"kalarisng"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"kalarisng"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"     * but smaller than size of FitBook","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"dfordarius"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"        // ensures that outOfBoundIndex is still in bounds of FitBook list","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFitBook().getClientList().size());","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"kalarisng"},"content":"                new EditClientDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"kalarisng"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"kalarisng"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"kalarisng"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"kalarisng"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kalarisng":25,"jundatan":21,"dfordarius":37,"-":93}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel expectedFitBookModel \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jundatan":8,"dfordarius":2,"-":12}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.ExportCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"class ExportCommandTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel expectedFitBookModel \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public void execute_export_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        CommandTestUtil.assertCommandSuccess(new ExportCommand(), model, expectedCommandResult, expectedFitBookModel);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":29}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/ExportRoutineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.ExportRoutineCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ExportRoutineCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"class ExportRoutineCommandTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel expectedFitBookModel \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public void execute_exportRoutine_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        CommandTestUtil.assertCommandSuccess(new ExportRoutineCommand(),","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"                model, expectedCommandResult, expectedFitBookModel);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":31}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.CARL;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.ELLE;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.FIONA;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.FindCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) for {@code FindCommand}.","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    private FitBookModel expectedFitBookModel \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicate \u003d Arrays.asList(\"first\");","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e firstPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"        firstPredicates.add(new NameContainsKeywordsPredicate(firstPredicate));","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicate \u003d Arrays.asList(\"second\");","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e secondPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        secondPredicates.add(new NameContainsKeywordsPredicate(secondPredicate));","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"        predicates.add(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.updateFilteredClientList(predicate);","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"        predicates.add(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.updateFilteredClientList(predicate);","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"kalarisng"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kalarisng"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kalarisng":24,"jundatan":11,"dfordarius":15,"-":47}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel expectedFitBookModel \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        CommandTestUtil.assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jundatan":8,"dfordarius":2,"-":12}},{"path":"src/test/java/seedu/fitbook/logic/commands/client/ListClientsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.client;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.ListClientsCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) and unit tests for ListCommand.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"OliviaJHL"},"content":"public class ListClientsCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel expectedFitBookModel;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        expectedFitBookModel \u003d new FitBookModelManager(model.getFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"                model.getFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        CommandTestUtil.assertCommandSuccess(new ListClientsCommand(),","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"                model, ListClientsCommand.MESSAGE_SUCCESS, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        CommandTestUtil.assertCommandSuccess(new ListClientsCommand(), model, ListClientsCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"                .MESSAGE_SUCCESS, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kalarisng":3,"OliviaJHL":1,"jundatan":11,"dfordarius":7,"-":22}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/AddRoutineCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":" * Contains integration tests (interaction with the FitBookModel) for {@code AddCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"public class AddRoutineCommandIntegrationTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    private FitBookModel model;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        model \u003d new FitBookModelManager(getTypicalFitBook(), getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    public void execute_newRoutine_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        Routine validRoutine \u003d new RoutineBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"                new FitBookModelManager(model.getFitBook(), model.getFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        expectedFitBookModel.addRoutine(validRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        CommandTestUtil.assertCommandSuccess(new AddRoutineCommand(validRoutine), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"                String.format(AddRoutineCommand.MESSAGE_SUCCESS, validRoutine), expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"    public void execute_duplicateRoutine_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        Routine routineInList \u003d model.getFitBookExerciseRoutine().getRoutineList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        assertCommandFailure(new AddRoutineCommand(routineInList), model, AddRoutineCommand.MESSAGE_DUPLICATE_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":48}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/AddRoutineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"public class AddRoutineCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    public void constructor_nullRoutine_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRoutineCommand(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    public void execute_routineAcceptedByFitBookModelExerciseRoutine_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutineExerciseRoutineModelStubAcceptingRoutineAdded modelStub \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutineExerciseRoutineModelStubAcceptingRoutineAdded();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        Routine validRoutine \u003d new RoutineBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        CommandResult commandResult \u003d new AddRoutineCommand(validRoutine).execute(modelStub);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        assertEquals(String.format(AddRoutineCommand.MESSAGE_SUCCESS, validRoutine), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        assertEquals(Arrays.asList(validRoutine), modelStub.routinesAdded);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    public void execute_duplicateRoutine_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        Routine validRoutine \u003d new RoutineBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        AddRoutineCommand addRoutineCommand \u003d new AddRoutineCommand(validRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutineModelStub modelStub \u003d new FitBookExerciseRoutineModelStubWithRoutine(validRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        assertThrows(CommandException.class, AddRoutineCommand.MESSAGE_DUPLICATE_ROUTINE, () -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"                addRoutineCommand.execute(modelStub));","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        Routine cardio \u003d new RoutineBuilder().withRoutineName(\"Cardio\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        Routine strength \u003d new RoutineBuilder().withRoutineName(\"Strength\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"        AddRoutineCommand addRoutineCardioCommand \u003d new AddRoutineCommand(cardio);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        AddRoutineCommand addRoutineStrengthCommand \u003d new AddRoutineCommand(strength);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        assertTrue(addRoutineCardioCommand.equals(addRoutineCardioCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        AddRoutineCommand addRoutineCardioCommandCopy \u003d new AddRoutineCommand(cardio);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        assertTrue(addRoutineCardioCommand.equals(addRoutineCardioCommandCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        assertFalse(addRoutineCardioCommand.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        assertFalse(addRoutineCardioCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"        // different routine -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"        assertFalse(addRoutineCardioCommand.equals(addRoutineStrengthCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"    private class FitBookExerciseRoutineModelStub implements FitBookModel {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"        public Path getFitBookFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"        public void setFitBookFilePath(Path fitBookFilePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        // Client part not used in this part.","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"        public void setFitBook(ReadOnlyFitBook newData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"        public ReadOnlyFitBook getFitBook() {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"        public void setFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine exerciseRoutine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"        public ReadOnlyFitBookExerciseRoutine getFitBookExerciseRoutine() {","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"        public boolean hasRoutine(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"        public void deleteRoutine(Routine target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"        public void addRoutine(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"        public void setRoutine(Routine target, Routine editedRoutine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"        public ObservableList\u003cRoutine\u003e getFilteredRoutineList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"        public void updateFilteredRoutineList(Predicate\u003cRoutine\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"jundatan"},"content":"     * A FitBookExerciseRoutineModel stub that contains a single routine.","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"jundatan"},"content":"    private class FitBookExerciseRoutineModelStubWithRoutine extends FitBookExerciseRoutineModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"jundatan"},"content":"        private final Routine routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutineModelStubWithRoutine(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"jundatan"},"content":"            requireNonNull(routine);","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"            this.routine \u003d routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"jundatan"},"content":"        public boolean hasRoutine(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"jundatan"},"content":"            requireNonNull(routine);","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"jundatan"},"content":"            return this.routine.isSameRoutine(routine);","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"jundatan"},"content":"     * A FitBookExerciseRoutineModel stub that always accept the routine being added.","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"jundatan"},"content":"    private class FitBookExerciseRoutineExerciseRoutineModelStubAcceptingRoutineAdded","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"jundatan"},"content":"            extends FitBookExerciseRoutineModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"jundatan"},"content":"        final ArrayList\u003cRoutine\u003e routinesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"jundatan"},"content":"        public boolean hasRoutine(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"jundatan"},"content":"            requireNonNull(routine);","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"jundatan"},"content":"            return routinesAdded.stream().anyMatch(routine::isSameRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"jundatan"},"content":"        public void addRoutine(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"jundatan"},"content":"            requireNonNull(routine);","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"jundatan"},"content":"            routinesAdded.add(routine);","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"jundatan"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"jundatan"},"content":"        public ReadOnlyFitBookExerciseRoutine getFitBookExerciseRoutine() {","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"jundatan"},"content":"            return new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":242}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/ClearRoutinesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ClearRoutinesCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"public class ClearRoutinesCommandTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public void execute_emptyFitBook_success() {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        FitBookModel model \u003d new FitBookModelManager();","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearRoutinesCommand(), model, ClearRoutinesCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"                expectedFitBookModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public void execute_nonEmptyFitBook_success() {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.setFitBookExerciseRoutine(new FitBookExerciseRoutine());","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearRoutinesCommand(), model, ClearRoutinesCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"                expectedFitBookModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"dfordarius":38}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/DeleteRoutineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.showRoutineAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_SECOND_ROUTINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteRoutineCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":" * {@code DeleteRoutineCommand}.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"public class DeleteRoutineCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(), getTypicalFitBookExerciseRoutine(),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"            new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        Routine routineToDelete \u003d model.getFilteredRoutineList().get(INDEX_FIRST_ROUTINE.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        DeleteRoutineCommand deleteRoutineCommand \u003d new DeleteRoutineCommand(INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(DeleteRoutineCommand.MESSAGE_DELETE_ROUTINE_SUCCESS, routineToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        FitBookModelManager expectedFitBookModel \u003d new FitBookModelManager(model.getFitBook(),","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.deleteRoutine(routineToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(deleteRoutineCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredRoutineList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        DeleteRoutineCommand deleteRoutineCommand \u003d new DeleteRoutineCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        assertCommandFailure(deleteRoutineCommand, model, Messages.MESSAGE_INVALID_ROUTINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        showRoutineAtIndex(model, INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        Routine routineToDelete \u003d model.getFilteredRoutineList().get(INDEX_FIRST_ROUTINE.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        DeleteRoutineCommand deleteRoutineCommand \u003d new DeleteRoutineCommand(INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(DeleteRoutineCommand.MESSAGE_DELETE_ROUTINE_SUCCESS, routineToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(model.getFitBook(),","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"                getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.deleteRoutine(routineToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        showNoRoutine(expectedFitBookModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(deleteRoutineCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        showRoutineAtIndex(model, INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ROUTINE;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        // ensures that outOfBoundIndex is still in bounds of FitBook list","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFitBookExerciseRoutine().getRoutineList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        DeleteRoutineCommand deleteRoutineCommand \u003d new DeleteRoutineCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        assertCommandFailure(deleteRoutineCommand, model, Messages.MESSAGE_INVALID_ROUTINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"        DeleteRoutineCommand deleteFirstRoutineCommand \u003d new DeleteRoutineCommand(INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"        DeleteRoutineCommand deleteSecondRoutineCommand \u003d new DeleteRoutineCommand(INDEX_SECOND_ROUTINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"        assertTrue(deleteFirstRoutineCommand.equals(deleteFirstRoutineCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"        DeleteRoutineCommand deleteFirstRoutineCommandCopy \u003d new DeleteRoutineCommand(INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"        assertTrue(deleteFirstRoutineCommand.equals(deleteFirstRoutineCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        assertFalse(deleteFirstRoutineCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"        assertFalse(deleteFirstRoutineCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"        assertFalse(deleteFirstRoutineCommand.equals(deleteSecondRoutineCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"    private void showNoRoutine(FitBookModel model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"        model.updateFilteredRoutineList(p -\u003e false);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"        assertTrue(model.getFilteredRoutineList().isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"dfordarius":113}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/EditRoutineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.DESC_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.DESC_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_INDEX;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_CARDIO;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.showRoutineAtIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_SECOND_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand.EditRoutineDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.EditRoutineDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":" * Contains integration tests (interaction with the FitBookModel) and unit tests for EditRoutineCommand.","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"public class EditRoutineCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        Routine editedRoutine \u003d new RoutineBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptorRoutineName \u003d new EditRoutineDescriptorBuilder(editedRoutine).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        descriptorRoutineName.setExerciseIndexNull();","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        descriptorRoutineName.setExerciseNull();","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptorExercise \u003d new EditRoutineDescriptorBuilder(editedRoutine).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        descriptorExercise.setRoutineNameNull();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editRoutineCommandRoutine \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"                new EditRoutineCommand(INDEX_FIRST_ROUTINE, descriptorRoutineName);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editRoutineCommandExercise \u003d new EditRoutineCommand(INDEX_FIRST_ROUTINE, descriptorExercise);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d String.format(EditRoutineCommand.MESSAGE_EDIT_ROUTINE_SUCCESS, editedRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookExerciseRoutineModel \u003d new FitBookModelManager(new FitBook(model.getFitBook()),","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutine(model.getFitBookExerciseRoutine()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        editedRoutine.withExercises(\"Plank\", \"4x5 1km Run\");","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        expectedFitBookExerciseRoutineModel.setRoutine(model.getFilteredRoutineList().get(0), editedRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        assertCommandSuccess(editRoutineCommandRoutine, editRoutineCommandExercise,","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"                model, expectedMessage, expectedFitBookExerciseRoutineModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editRoutineCommand \u003d new EditRoutineCommand(INDEX_FIRST_ROUTINE,","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"                new EditRoutineDescriptor());","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        Routine editedRoutine \u003d model.getFilteredRoutineList().get(INDEX_FIRST_ROUTINE.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d String.format(EditRoutineCommand.MESSAGE_EDIT_ROUTINE_SUCCESS, editedRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(new FitBook(model.getFitBook()),","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutine(model.getFitBookExerciseRoutine()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"        assertCommandSuccess(editRoutineCommand, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"        showRoutineAtIndex(model, INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"        Routine routineInFilteredList \u003d model.getFilteredRoutineList().get(INDEX_FIRST_ROUTINE.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"        Routine editedRoutine \u003d new RoutineBuilder(routineInFilteredList).withRoutineName(VALID_ROUTINE_NAME_CARDIO)","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editRoutineCommandExercise \u003d new EditRoutineCommand(INDEX_FIRST_ROUTINE,","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"                new EditRoutineDescriptorBuilder().withExercise(\"Plank\")","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"                        .withExercisesIndex(VALID_EXERCISE_INDEX).build());","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editRoutineCommandRoutine \u003d new EditRoutineCommand(INDEX_FIRST_ROUTINE,","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"                new EditRoutineDescriptorBuilder().withRoutineName(VALID_ROUTINE_NAME_CARDIO).build());","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d String.format(EditRoutineCommand.MESSAGE_EDIT_ROUTINE_SUCCESS, editedRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"        FitBookModel expectedFitBookModel \u003d new FitBookModelManager(new FitBook(model.getFitBook()),","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutine(model.getFitBookExerciseRoutine()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        editedRoutine.withExercises(\"Plank\", \"4x5 1km Run\");","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"        expectedFitBookModel.setRoutine(model.getFilteredRoutineList().get(0), editedRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"        assertCommandSuccess(editRoutineCommandRoutine, editRoutineCommandExercise, model,","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"                expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"    public void execute_duplicateRoutineUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        Routine firstRoutine \u003d model.getFilteredRoutineList().get(INDEX_FIRST_ROUTINE.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder(firstRoutine).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editRoutineCommand \u003d new EditRoutineCommand(INDEX_SECOND_ROUTINE, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"        assertCommandFailure(editRoutineCommand, model, EditRoutineCommand.MESSAGE_DUPLICATE_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"    public void execute_duplicateRoutineFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"        showRoutineAtIndex(model, INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"        // edit routine in filtered list into a duplicate in FitBook","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        Routine routineInList \u003d model.getFitBookExerciseRoutine()","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"                .getRoutineList().get(INDEX_SECOND_ROUTINE.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editRoutineCommand \u003d new EditRoutineCommand(INDEX_FIRST_ROUTINE,","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"                new EditRoutineDescriptorBuilder(routineInList).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"        assertCommandFailure(editRoutineCommand, model, EditRoutineCommand.MESSAGE_DUPLICATE_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"    public void execute_invalidRoutineIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredRoutineList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"                .withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editCommand \u003d new EditRoutineCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ROUTINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"     * but smaller than size of FitBook","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"    public void execute_invalidRoutineIndexFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"        showRoutineAtIndex(model, INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"        // ensures that outOfBoundIndex is still in bounds of FitBook list","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFitBookExerciseRoutine().getRoutineList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand editCommand \u003d new EditRoutineCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"                new EditRoutineDescriptorBuilder().withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ROUTINE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"        final EditRoutineCommand standardCommand \u003d new EditRoutineCommand(INDEX_FIRST_ROUTINE, DESC_CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor copyDescriptor \u003d new EditRoutineDescriptor(DESC_CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand commandWithSameValues \u003d new EditRoutineCommand(INDEX_FIRST_ROUTINE, copyDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"        assertFalse(standardCommand.equals(new EditRoutineCommand(INDEX_SECOND_PERSON, DESC_CARDIO)));","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"        assertFalse(standardCommand.equals(new EditRoutineCommand(INDEX_FIRST_ROUTINE, DESC_STRENGTH)));","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":177}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/EditRoutineDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.DESC_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.DESC_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_SITUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand.EditRoutineDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.EditRoutineDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class EditRoutineDescriptorTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptorWithSameValues \u003d new EditRoutineDescriptor(DESC_CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        assertTrue(DESC_CARDIO.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        assertTrue(DESC_CARDIO.equals(DESC_CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        assertFalse(DESC_CARDIO.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        assertFalse(DESC_CARDIO.equals(5));","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        assertFalse(DESC_CARDIO.equals(DESC_STRENGTH));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor editedCardio \u003d new EditRoutineDescriptorBuilder(DESC_CARDIO)","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"                .withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        assertFalse(DESC_CARDIO.equals(editedCardio));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        // different exercises -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        editedCardio \u003d new EditRoutineDescriptorBuilder(DESC_CARDIO).withExercise(VALID_EXERCISE_SITUP).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        assertFalse(DESC_CARDIO.equals(editedCardio));","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":44}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/FindRoutineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_ROUTINES_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.JUMP;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindRoutineCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.RoutineNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) for {@code FindRoutineCommand}.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"public class FindRoutineCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel expectedFitBookModel \u003d new FitBookModelManager(getTypicalFitBook(),","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"            getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"                new RoutineNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"                new RoutineNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        FindRoutineCommand findFirstRoutineCommand \u003d new FindRoutineCommand(firstPredicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        FindRoutineCommand findSecondRoutineCommand \u003d new FindRoutineCommand(secondPredicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        assertTrue(findFirstRoutineCommand.equals(findFirstRoutineCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        FindRoutineCommand findFirstRoutineCommandCopy \u003d new FindRoutineCommand(firstPredicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"        assertTrue(findFirstRoutineCommand.equals(findFirstRoutineCommandCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        assertFalse(findFirstRoutineCommand.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        assertFalse(findFirstRoutineCommand.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        assertFalse(findFirstRoutineCommand.equals(findSecondRoutineCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    public void execute_zeroKeywords_noRoutineFound() {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ROUTINES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"        FindRoutineCommand command \u003d new FindRoutineCommand(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.updateFilteredRoutineList(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredRoutineList());","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    public void execute_multipleKeywords_multipleRoutinesFound() {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ROUTINES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Jumps Strength\");","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        FindRoutineCommand command \u003d new FindRoutineCommand(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel.updateFilteredRoutineList(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedFitBookModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        assertEquals(Arrays.asList(JUMP, STRENGTH), model.getFilteredRoutineList());","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"     * Parses {@code userInput} into a {@code RoutineNameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    private RoutineNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"        return new RoutineNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dfordarius":87}},{"path":"src/test/java/seedu/fitbook/logic/commands/routine/ListRoutinesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.commands.routine;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.showRoutineAtIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ListRoutinesCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBookModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":" * Contains integration tests (interaction with the FitBookModel) and unit tests for ListRoutineCommand.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"public class ListRoutinesCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel model;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    private FitBookModel expectedFitBookModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        model \u003d new FitBookModelManager(getTypicalFitBook(), getTypicalFitBookExerciseRoutine(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        expectedFitBookModel \u003d new FitBookModelManager(model.getFitBook(), model.getFitBookExerciseRoutine(),","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        CommandTestUtil.assertCommandSuccess(new ListRoutinesCommand(), model, ListRoutinesCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"                expectedFitBookModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        showRoutineAtIndex(model, INDEX_FIRST_ROUTINE);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        assertCommandSuccess(new ListRoutinesCommand(), model, ListRoutinesCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"                expectedFitBookModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dfordarius":45}},{"path":"src/test/java/seedu/fitbook/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.APPOINTMENT_DESC_DATE_ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.APPOINTMENT_DESC_DATE_TWO;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.CALORIE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.CALORIE_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GOAL_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GOAL_DESC_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_CALORIE_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_WEIGHT_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_TWO;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_CALORIE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.WEIGHT_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"                .withAppointments(VALID_APPOINTMENT_DATE_ONE).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"                + ADDRESS_DESC_BOB + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB + GOAL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + CALORIE_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"                + ADDRESS_DESC_BOB + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB + GOAL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + CALORIE_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"                + ADDRESS_DESC_BOB + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB + GOAL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + CALORIE_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"                + ADDRESS_DESC_BOB + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB + GOAL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + CALORIE_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"                + ADDRESS_DESC_BOB + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB + GOAL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + CALORIE_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"        // multiple calorie - last calorie accepted","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + CALORIE_DESC_AMY + CALORIE_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"                        + WEIGHT_DESC_BOB + GENDER_DESC_BOB + APPOINTMENT_DESC_DATE_ONE + GOAL_DESC_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"                new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"        // multiple gender - last gender accepted","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + CALORIE_DESC_BOB + APPOINTMENT_DESC_DATE_ONE","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"                        + WEIGHT_DESC_BOB + GENDER_DESC_AMY + GENDER_DESC_BOB + GOAL_DESC_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"                new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"        // multiple weight - last weight accepted","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + CALORIE_DESC_AMY + CALORIE_DESC_BOB","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"                        + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_AMY + WEIGHT_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"                        + GOAL_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"        // multiple goal - last goal accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + CALORIE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"                + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"                + GOAL_DESC_AMY + GOAL_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"                .withAppointments(VALID_APPOINTMENT_DATE_ONE).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"dfordarius"},"content":"                        + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB + GOAL_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + CALORIE_DESC_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"                new AddCommand(expectedClientMultipleTags));","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"        // multiple appointments - all accepted","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"        Client expectedClientMultipleAppointments \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"                .withAppointments(VALID_APPOINTMENT_DATE_ONE, VALID_APPOINTMENT_DATE_TWO).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"                        + GENDER_DESC_BOB + WEIGHT_DESC_BOB + APPOINTMENT_DESC_DATE_ONE + APPOINTMENT_DESC_DATE_TWO","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"                        + GOAL_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + CALORIE_DESC_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"                new AddCommand(expectedClientMultipleAppointments));","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withAppointments().withCalorie(\"0000\").withTags().build();","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"dfordarius"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"                + WEIGHT_DESC_AMY + GENDER_DESC_AMY + GOAL_DESC_AMY, new AddCommand(expectedClient));","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"                        + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_CALORIE_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"dfordarius"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"                        + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_CALORIE_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"dfordarius"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"dfordarius"},"content":"                + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_CALORIE_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"                        + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_CALORIE_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":192,"author":{"gitId":"dfordarius"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"dfordarius"},"content":"        // invalid gender","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"dfordarius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"dfordarius"},"content":"                + APPOINTMENT_DESC_DATE_ONE + WEIGHT_DESC_BOB + INVALID_GENDER_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + VALID_CALORIE_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"dfordarius"},"content":"        // invalid weight","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"dfordarius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"dfordarius"},"content":"                + APPOINTMENT_DESC_DATE_ONE + INVALID_WEIGHT_DESC + GENDER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + VALID_CALORIE_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":206,"author":{"gitId":"jundatan"},"content":"                        + WEIGHT_DESC_BOB + GENDER_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + VALID_CALORIE_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"jundatan"},"content":"        // invalid calorie","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"jundatan"},"content":"                + VALID_TAG_HUSBAND + VALID_TAG_FRIEND + INVALID_CALORIE_DESC","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"jundatan"},"content":"                + WEIGHT_DESC_BOB + GENDER_DESC_BOB, Calorie.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"jundatan"},"content":"        // invalid appointment","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-02-26"},{"lineNumber":216,"author":{"gitId":"dfordarius"},"content":"                        + WEIGHT_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND + INVALID_APPOINTMENT_DESC","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"dfordarius"},"content":"                        + VALID_CALORIE_BOB, Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"dfordarius"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-02-26"},{"lineNumber":221,"author":{"gitId":"dfordarius"},"content":"                + WEIGHT_DESC_BOB + GENDER_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":225,"author":{"gitId":"jundatan"},"content":"                        + ADDRESS_DESC_BOB + WEIGHT_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"jundatan"},"content":"                        + TAG_DESC_FRIEND + VALID_CALORIE_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jundatan":52,"dfordarius":92,"-":85}},{"path":"src/test/java/seedu/fitbook/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"dfordarius":1,"-":149}},{"path":"src/test/java/seedu/fitbook/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"dfordarius":3,"-":36}},{"path":"src/test/java/seedu/fitbook/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"dfordarius":6,"-":26}},{"path":"src/test/java/seedu/fitbook/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.APPOINTMENT_DESC_DATE_ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.CALORIE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.GOAL_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_CALORIE_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GOAL_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.EditClientDescriptorBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    private static final String APPOINTMENT_EMPTY \u003d \" \" + PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Client} being edited,","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"                + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"                + VALID_ADDRESS_AMY + VALID_PHONE_AMY + VALID_CALORIE_AMY","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"                + VALID_GENDER_AMY + VALID_WEIGHT_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"                + TAG_DESC_FRIEND + WEIGHT_DESC_AMY + GENDER_DESC_AMY;","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"                .withWeight(VALID_WEIGHT_AMY).withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"        // calorie","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"        userInput \u003d targetIndex.getOneBased() + CALORIE_DESC_AMY;","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withCalorie(VALID_CALORIE_AMY).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"        // appointments","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"        userInput \u003d targetIndex.getOneBased() + APPOINTMENT_DESC_DATE_ONE;","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withAppointments(VALID_APPOINTMENT_DATE_ONE).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"        // weight","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"jundatan"},"content":"        userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"jundatan"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withWeight(VALID_WEIGHT_AMY).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"jundatan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-07"},{"lineNumber":201,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"jundatan"},"content":"        // gender","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"jundatan"},"content":"        userInput \u003d targetIndex.getOneBased() + GENDER_DESC_AMY;","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"jundatan"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"jundatan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"dfordarius"},"content":"        // goal","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"dfordarius"},"content":"        userInput \u003d targetIndex.getOneBased() + GOAL_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withGoal(VALID_GOAL_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":236,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":243,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":260,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":261,"author":{"gitId":"jundatan"},"content":"    public void parse_resetAppointments_success() {","lastModifiedDate":"2023-03-07"},{"lineNumber":262,"author":{"gitId":"jundatan"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-07"},{"lineNumber":263,"author":{"gitId":"jundatan"},"content":"        String userInput \u003d targetIndex.getOneBased() + APPOINTMENT_EMPTY;","lastModifiedDate":"2023-03-07"},{"lineNumber":264,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"jundatan"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withAppointments().build();","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jundatan":43,"dfordarius":66,"-":161}},{"path":"src/test/java/seedu/fitbook/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_PREFIX;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_NO_KEYWORD;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_NO_PREFIX;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.CalorieContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.GenderContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.predicate.GoalContainsKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.WeightContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        assertParseFailure(parser, \" n/\",","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"                String.format(MESSAGE_NO_KEYWORD, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        assertParseFailure(parser, \" alex yeoh\",","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"                String.format(MESSAGE_NO_PREFIX, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"        assertParseFailure(parser, \" b/911\",","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"                String.format(MESSAGE_INVALID_PREFIX, FindCommand.PREFIX_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"Alice\");","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e namePredicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        namePredicate.add(new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindNameCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(namePredicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" n/Alice\", expectedFindNameCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e phoneKeywords \u003d Arrays.asList(\"91234567\");","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e phonePredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        phonePredicates.add(new PhoneContainsKeywordsPredicate(phoneKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindPhoneCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(phonePredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" p/91234567\", expectedFindPhoneCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e emailKeywords \u003d Arrays.asList(\"aliceb@example.com\");","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e emailPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"        emailPredicates.add(new EmailContainsKeywordsPredicate(emailKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindEmailCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(emailPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" e/aliceb@example.com\", expectedFindEmailCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e addressKeywords \u003d Arrays.asList(\"30 Winchester Avenue\");","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e addressPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"        addressPredicates.add(new AddressContainsKeywordsPredicate(addressKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindAddressCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(addressPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" a/30 Winchester Avenue\", expectedFindAddressCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"friends\");","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e tagPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"        tagPredicates.add(new TagContainsKeywordsPredicate(tagKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindTagCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(tagPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" t/friends\", expectedFindTagCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e weightKeywords \u003d Arrays.asList(\"40\");","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e weightPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"kalarisng"},"content":"        weightPredicates.add(new WeightContainsKeywordsPredicate(weightKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindWeightCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(weightPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" w/40\", expectedFindWeightCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e genderKeywords \u003d Arrays.asList(\"M\");","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e genderPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"kalarisng"},"content":"        genderPredicates.add(new GenderContainsKeywordsPredicate(genderKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindGenderCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(genderPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" g/M\", expectedFindGenderCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e calorieKeywords \u003d Arrays.asList(\"1000\");","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e caloriePredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"kalarisng"},"content":"        caloriePredicates.add(new CalorieContainsKeywordsPredicate(calorieKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindCalorieCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(caloriePredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" cal/1000\", expectedFindCalorieCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"        List\u003cString\u003e goalKeywords \u003d Arrays.asList(\"lose weight\");","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e goalPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"        goalPredicates.add(new GoalContainsKeywordsPredicate(goalKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"        FindCommand expectedFindGoalCommand \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"                new FindCommand(goalPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"        assertParseSuccess(parser, \" gl/lose weight\", expectedFindGoalCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e appointmentKeywords \u003d Arrays.asList(\"12-12-2020\");","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e appointmentPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"kalarisng"},"content":"        appointmentPredicates.add(new AppointmentContainsKeywordsPredicate(appointmentKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"kalarisng"},"content":"        FindCommand expectedFindAppointmentCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"kalarisng"},"content":"                new FindCommand(appointmentPredicates);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"kalarisng"},"content":"        assertParseSuccess(parser, \" app/12-12-2020\", expectedFindAppointmentCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kalarisng":88,"dfordarius":11,"-":20}},{"path":"src/test/java/seedu/fitbook/logic/parser/FitBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand.EditRoutineDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.ListClientsCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.EditClientDescriptorBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.EditRoutineDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"public class FitBookParserTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    private final FitBookParser parser \u003d new FitBookParser();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        assertEquals(new AddCommand(client), command);","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD) instanceof ExportCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD + \" 3\") instanceof ExportCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"alex\");","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e phoneKeywords \u003d Arrays.asList(\"123\");","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"kalarisng"},"content":"        List\u003cPredicate\u003cClient\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"kalarisng"},"content":"        predicates.add(new NameContainsKeywordsPredicate(nameKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"kalarisng"},"content":"        predicates.add(new PhoneContainsKeywordsPredicate(phoneKeywords));","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"kalarisng"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + nameKeywords.stream().collect(Collectors.joining(\" \"))","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"kalarisng"},"content":"                        + \" p/\" + phoneKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"kalarisng"},"content":"        assertEquals(new FindCommand(predicates), command);","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"OliviaJHL"},"content":"        assertTrue(parser.parseCommand(ListClientsCommand.COMMAND_WORD) instanceof ListClientsCommand);","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"OliviaJHL"},"content":"        assertTrue(parser.parseCommand(ListClientsCommand.COMMAND_WORD + \" 3\") instanceof ListClientsCommand);","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"    public void parseCommand_editRoutineForExercise() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"        Routine routine \u003d new RoutineBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder(routine).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        descriptor.setRoutineNameNull();","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand command \u003d (EditRoutineCommand) parser.parseCommand(EditRoutineCommand.COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"                + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"                + INDEX_FIRST_ROUTINE.getOneBased()","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"                + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"                + RoutineUtil.getEditRoutineDescriptorDetailsForExercise(descriptor));","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"        assertEquals(new EditRoutineCommand(INDEX_FIRST_ROUTINE, descriptor), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"    public void parseCommand_editRoutineForRoutineName() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"        Routine routine \u003d new RoutineBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder(routine).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"        descriptor.setExerciseNull();","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"        descriptor.setExerciseIndexNull();","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand command \u003d (EditRoutineCommand) parser.parseCommand(EditRoutineCommand.COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"                + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"                + INDEX_FIRST_ROUTINE.getOneBased()","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"                + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"                + RoutineUtil.getEditRoutineDescriptorDetailsForRoutineName(descriptor));","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"        assertEquals(new EditRoutineCommand(INDEX_FIRST_ROUTINE, descriptor), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"    public void parseCommand_addRoutine() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"        Routine routine \u003d new RoutineBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"        AddRoutineCommand command \u003d (AddRoutineCommand) parser.parseCommand(RoutineUtil.getAddRoutineCommand(routine));","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"        assertEquals(new AddRoutineCommand(routine), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kalarisng":12,"OliviaJHL":2,"jundatan":45,"dfordarius":31,"-":68}},{"path":"src/test/java/seedu/fitbook/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    //Client","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_CALORIE \u003d \"012\";","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    private static final String INVALID_WEIGHT \u003d \"-23\";","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    private static final String INVALID_GENDER \u003d \"H\";","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    private static final String INVALID_GOAL \u003d \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_APPOINTMENT \u003d \"235236\";","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    private static final String VALID_CALORIE \u003d \"2000\";","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_WEIGHT \u003d \"23\";","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_GENDER \u003d \"m\";","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_GOAL \u003d \"lose weight\";","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_APPOINTMENT_1 \u003d \"10-10-2023 18:00\";","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_APPOINTMENT_2 \u003d \"11-12-2020 18:00\";","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    //Routine","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_ROUTINE \u003d \"@$!%%@\";","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_EXERCISE \u003d \"%@!%#%\";","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    private static final String VALID_ROUTINE \u003d \"Cardio\";","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"    private static final String VALID_EXERCISE_1 \u003d \"3x5 Jumping jacks\";","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    private static final String VALID_EXERCISE_2 \u003d \"4x5 Dumbbell curls\";","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"    //Client","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"    public void parseCalorie_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCalorie((String) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"    public void parseCalorie_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCalorie(INVALID_CALORIE));","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"    public void parseCalorie_validValueWithoutWhitespace_returnsCalorie() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"        Calorie expectedCalorie \u003d new Calorie(VALID_CALORIE);","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedCalorie, ParserUtil.parseCalorie(VALID_CALORIE));","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"    public void parseCalorie_validValueWithWhitespace_returnsTrimmedCalorie() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"        String calorieWithWhitespace \u003d WHITESPACE + VALID_CALORIE + WHITESPACE;","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"        Calorie expectedCalorie \u003d new Calorie(VALID_CALORIE);","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedCalorie, ParserUtil.parseCalorie(calorieWithWhitespace));","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":208,"author":{"gitId":"dfordarius"},"content":"    public void parseWeight_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":209,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWeight((String) null));","lastModifiedDate":"2023-03-02"},{"lineNumber":210,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":211,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":212,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":213,"author":{"gitId":"dfordarius"},"content":"    public void parseWeight_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":214,"author":{"gitId":"dfordarius"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeight(INVALID_WEIGHT));","lastModifiedDate":"2023-03-02"},{"lineNumber":215,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":216,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":217,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":218,"author":{"gitId":"dfordarius"},"content":"    public void parseWeight_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":219,"author":{"gitId":"dfordarius"},"content":"        Weight expectedWeight \u003d new Weight(VALID_WEIGHT);","lastModifiedDate":"2023-03-02"},{"lineNumber":220,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedWeight, ParserUtil.parseWeight(VALID_WEIGHT));","lastModifiedDate":"2023-03-02"},{"lineNumber":221,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":222,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":223,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":224,"author":{"gitId":"dfordarius"},"content":"    public void parseWeight_validValueWithWhitespace_returnsTrimmedWeight() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":225,"author":{"gitId":"dfordarius"},"content":"        String weightWithWhitespace \u003d WHITESPACE + VALID_WEIGHT + WHITESPACE;","lastModifiedDate":"2023-03-02"},{"lineNumber":226,"author":{"gitId":"dfordarius"},"content":"        Weight expectedWeight \u003d new Weight(VALID_WEIGHT);","lastModifiedDate":"2023-03-02"},{"lineNumber":227,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedWeight, ParserUtil.parseWeight(weightWithWhitespace));","lastModifiedDate":"2023-03-02"},{"lineNumber":228,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":229,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":230,"author":{"gitId":"dfordarius"},"content":"    public void parseGender_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":231,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGender((String) null));","lastModifiedDate":"2023-03-02"},{"lineNumber":232,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":233,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":234,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":235,"author":{"gitId":"dfordarius"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":236,"author":{"gitId":"dfordarius"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2023-03-02"},{"lineNumber":237,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":238,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":239,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":240,"author":{"gitId":"dfordarius"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":241,"author":{"gitId":"dfordarius"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2023-03-02"},{"lineNumber":242,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2023-03-02"},{"lineNumber":243,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":244,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":245,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":246,"author":{"gitId":"dfordarius"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":247,"author":{"gitId":"dfordarius"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2023-03-02"},{"lineNumber":248,"author":{"gitId":"dfordarius"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2023-03-02"},{"lineNumber":249,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2023-03-02"},{"lineNumber":250,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":251,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":252,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"dfordarius"},"content":"    public void parseGoal_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGoal((String) null));","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"dfordarius"},"content":"    public void parseGoal_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"dfordarius"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGoal(INVALID_GOAL));","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"dfordarius"},"content":"    public void parseGoal_validValueWithoutWhitespace_returnsGoal() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"dfordarius"},"content":"        Goal expectedGoal \u003d new Goal(VALID_GOAL);","lastModifiedDate":"2023-03-08"},{"lineNumber":265,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedGoal, ParserUtil.parseGoal(VALID_GOAL));","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":313,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":314,"author":{"gitId":"jundatan"},"content":"    public void parseAppointment_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":315,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":316,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":317,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":318,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":319,"author":{"gitId":"jundatan"},"content":"    public void parseAppointment_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":320,"author":{"gitId":"jundatan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointment(INVALID_APPOINTMENT));","lastModifiedDate":"2023-03-05"},{"lineNumber":321,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":322,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":323,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":324,"author":{"gitId":"jundatan"},"content":"    public void parseAppointment_validValueWithoutWhitespace_returnsAppointment() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":325,"author":{"gitId":"jundatan"},"content":"        Appointment expectedAppointment \u003d new Appointment(VALID_APPOINTMENT_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":326,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedAppointment, ParserUtil.parseAppointment(VALID_APPOINTMENT_1));","lastModifiedDate":"2023-03-05"},{"lineNumber":327,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":328,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":329,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":330,"author":{"gitId":"jundatan"},"content":"    public void parseAppointment_validValueWithWhitespace_returnsTrimmedAppointment() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":331,"author":{"gitId":"jundatan"},"content":"        String appointmentWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT_1 + WHITESPACE;","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"jundatan"},"content":"        Appointment expectedAppointment \u003d new Appointment(VALID_APPOINTMENT_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedAppointment, ParserUtil.parseAppointment(appointmentWithWhitespace));","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"jundatan"},"content":"    public void parseAppointments_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAppointments(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":340,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":341,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":342,"author":{"gitId":"jundatan"},"content":"    public void parseAppointments_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":343,"author":{"gitId":"jundatan"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"jundatan"},"content":"                ParserUtil.parseAppointments(Arrays.asList(VALID_APPOINTMENT_1, INVALID_APPOINTMENT)));","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":346,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":347,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":348,"author":{"gitId":"jundatan"},"content":"    public void parseAppointments_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":349,"author":{"gitId":"jundatan"},"content":"        assertTrue(ParserUtil.parseAppointments(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-05"},{"lineNumber":350,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":351,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":352,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":353,"author":{"gitId":"jundatan"},"content":"    public void parseAppointments_collectionWithValidTags_returnsAppointmentSet() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"jundatan"},"content":"        Set\u003cAppointment\u003e actualAppointmentSet \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"jundatan"},"content":"                ParserUtil.parseAppointments(Arrays.asList(VALID_APPOINTMENT_1, VALID_APPOINTMENT_2));","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"jundatan"},"content":"        Set\u003cAppointment\u003e expectedAppointmentSet \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":357,"author":{"gitId":"jundatan"},"content":"                new HashSet\u003cAppointment\u003e(Arrays.asList(new Appointment(VALID_APPOINTMENT_1),","lastModifiedDate":"2023-03-05"},{"lineNumber":358,"author":{"gitId":"jundatan"},"content":"                        new Appointment(VALID_APPOINTMENT_2)));","lastModifiedDate":"2023-03-05"},{"lineNumber":359,"author":{"gitId":"jundatan"},"content":"        assertEquals(actualAppointmentSet, expectedAppointmentSet);","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"jundatan"},"content":"    //Routine","lastModifiedDate":"2023-03-14"},{"lineNumber":363,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":364,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":365,"author":{"gitId":"jundatan"},"content":"    public void parseRoutineName_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":366,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRoutineName((String) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":367,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":368,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":369,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":370,"author":{"gitId":"jundatan"},"content":"    public void parseRoutineName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":371,"author":{"gitId":"jundatan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRoutineName(INVALID_ROUTINE));","lastModifiedDate":"2023-03-14"},{"lineNumber":372,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":373,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":374,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":375,"author":{"gitId":"jundatan"},"content":"    public void parseRoutineName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":376,"author":{"gitId":"jundatan"},"content":"        RoutineName expectedRoutineName \u003d new RoutineName(VALID_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":377,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedRoutineName, ParserUtil.parseRoutineName(VALID_ROUTINE));","lastModifiedDate":"2023-03-14"},{"lineNumber":378,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":379,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":380,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":381,"author":{"gitId":"jundatan"},"content":"    public void parseRoutineName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":382,"author":{"gitId":"jundatan"},"content":"        String routineNameWithWhitespace \u003d WHITESPACE + VALID_ROUTINE + WHITESPACE;","lastModifiedDate":"2023-03-14"},{"lineNumber":383,"author":{"gitId":"jundatan"},"content":"        RoutineName expectedRoutineName \u003d new RoutineName(VALID_ROUTINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":384,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedRoutineName, ParserUtil.parseRoutineName(routineNameWithWhitespace));","lastModifiedDate":"2023-03-14"},{"lineNumber":385,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":386,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":387,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":388,"author":{"gitId":"jundatan"},"content":"    public void parseExercise_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":389,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExercise(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":390,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":391,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":392,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":393,"author":{"gitId":"jundatan"},"content":"    public void parseExercise_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":394,"author":{"gitId":"jundatan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExercise(INVALID_EXERCISE));","lastModifiedDate":"2023-03-14"},{"lineNumber":395,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":396,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":397,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":398,"author":{"gitId":"jundatan"},"content":"    public void parseExercise_validValueWithoutWhitespace_returnsAppointment() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":399,"author":{"gitId":"jundatan"},"content":"        Exercise expectedExercise \u003d new Exercise(VALID_EXERCISE_1);","lastModifiedDate":"2023-03-14"},{"lineNumber":400,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedExercise, ParserUtil.parseExercise(VALID_EXERCISE_1));","lastModifiedDate":"2023-03-14"},{"lineNumber":401,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":402,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":403,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":404,"author":{"gitId":"jundatan"},"content":"    public void parseExercise_validValueWithWhitespace_returnsTrimmedAppointment() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":405,"author":{"gitId":"jundatan"},"content":"        String exerciseWithWhitespace \u003d WHITESPACE + VALID_EXERCISE_1 + WHITESPACE;","lastModifiedDate":"2023-03-14"},{"lineNumber":406,"author":{"gitId":"jundatan"},"content":"        Exercise expectedExercise \u003d new Exercise(VALID_EXERCISE_1);","lastModifiedDate":"2023-03-14"},{"lineNumber":407,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedExercise, ParserUtil.parseExercise(exerciseWithWhitespace));","lastModifiedDate":"2023-03-14"},{"lineNumber":408,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":409,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":410,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":411,"author":{"gitId":"jundatan"},"content":"    public void parseExercises_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":412,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExercises(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":413,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":414,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":415,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":416,"author":{"gitId":"jundatan"},"content":"    public void parseExercises_collectionWithInvalidExercises_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":417,"author":{"gitId":"jundatan"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":418,"author":{"gitId":"jundatan"},"content":"                ParserUtil.parseExercises(Arrays.asList(VALID_EXERCISE_1, INVALID_EXERCISE)));","lastModifiedDate":"2023-03-14"},{"lineNumber":419,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":420,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":421,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":422,"author":{"gitId":"jundatan"},"content":"    public void parseExercises_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":423,"author":{"gitId":"jundatan"},"content":"        assertTrue(ParserUtil.parseExercises(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":424,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":425,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":426,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":427,"author":{"gitId":"jundatan"},"content":"    public void parseExercises_collectionWithValidExercises_returnsExerciseList() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":428,"author":{"gitId":"jundatan"},"content":"        List\u003cExercise\u003e actualExerciseList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":429,"author":{"gitId":"jundatan"},"content":"                ParserUtil.parseExercises(Arrays.asList(VALID_EXERCISE_1, VALID_EXERCISE_2));","lastModifiedDate":"2023-03-14"},{"lineNumber":430,"author":{"gitId":"jundatan"},"content":"        List\u003cExercise\u003e expectedExerciseList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":431,"author":{"gitId":"jundatan"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(new Exercise(VALID_EXERCISE_1),","lastModifiedDate":"2023-03-14"},{"lineNumber":432,"author":{"gitId":"jundatan"},"content":"                        new Exercise(VALID_EXERCISE_2)));","lastModifiedDate":"2023-03-14"},{"lineNumber":433,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":434,"author":{"gitId":"jundatan"},"content":"        assertEquals(actualExerciseList, expectedExerciseList);","lastModifiedDate":"2023-03-14"},{"lineNumber":435,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":436,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jundatan":164,"dfordarius":84,"-":188}},{"path":"src/test/java/seedu/fitbook/logic/parser/routine/AddRoutineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.parser.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EXERCISE_DESC_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EXERCISE_DESC_SITUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_EXERCISE_NAME_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_ROUTINE_NAME_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_ROUTINE_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_ROUTINE_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_SITUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.parser.AddRoutineCommandParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"public class AddRoutineCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    private AddRoutineCommandParser parser \u003d new AddRoutineCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        Routine expectedRoutine \u003d new RoutineBuilder(CARDIO).withExercises(VALID_EXERCISE_PUSHUP).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_ROUTINE_CARDIO + EXERCISE_DESC_PUSHUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"                new AddRoutineCommand(expectedRoutine));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        // multiple routine name - last routine name accepted","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, NAME_DESC_ROUTINE_STRENGTH + NAME_DESC_ROUTINE_CARDIO + EXERCISE_DESC_PUSHUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"                new AddRoutineCommand(expectedRoutine));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        // multiple exercises - all accepted","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        Routine expectedRoutineMultipleRoutines \u003d new RoutineBuilder(CARDIO).withExercises(VALID_EXERCISE_PUSHUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"                VALID_EXERCISE_SITUP).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, NAME_DESC_ROUTINE_CARDIO + EXERCISE_DESC_PUSHUP + EXERCISE_DESC_SITUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"                new AddRoutineCommand(expectedRoutineMultipleRoutines));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRoutineCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        // missing routine name prefix","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, EXERCISE_DESC_PUSHUP + EXERCISE_DESC_SITUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        // invalid routine name","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, INVALID_ROUTINE_NAME_DESC + EXERCISE_DESC_SITUP + EXERCISE_DESC_PUSHUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"                RoutineName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        // invalid exercise","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, NAME_DESC_ROUTINE_STRENGTH + INVALID_EXERCISE_NAME_DESC,","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"                Exercise.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, NAME_DESC_ROUTINE_STRENGTH + INVALID_EXERCISE_NAME_DESC","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"                + EXERCISE_DESC_SITUP, Exercise.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        // non-empty preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_ROUTINE_CARDIO","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"                        + EXERCISE_DESC_PUSHUP + EXERCISE_DESC_SITUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRoutineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":79}},{"path":"src/test/java/seedu/fitbook/logic/parser/routine/DeleteRoutineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser.routine;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.DeleteRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.DeleteRoutineCommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":" * outside of the DeleteRoutineCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":" * same path through the DeleteRoutineCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"public class DeleteRoutineCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    private DeleteRoutineCommandParser parser \u003d new DeleteRoutineCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        assertParseSuccess(parser, \"1\", new DeleteRoutineCommand(INDEX_FIRST_ROUTINE));","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"                DeleteRoutineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"dfordarius":34}},{"path":"src/test/java/seedu/fitbook/logic/parser/routine/EditRoutineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.logic.parser.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_EXERCISE_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EXERCISE_DESC_INDEX;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.EXERCISE_DESC_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_EXERCISE_INDEX_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_EXERCISE_NAME_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.INVALID_ROUTINE_NAME_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_ROUTINE_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.NAME_DESC_ROUTINE_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_INDEX;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.TypicalIndexes.INDEX_THIRD_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand.EditRoutineDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.parser.EditRoutineCommandParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.EditRoutineDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"public class EditRoutineCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditRoutineCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    private EditRoutineCommandParser parser \u003d new EditRoutineCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        // no index specified","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, VALID_ROUTINE_NAME_CARDIO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        // no field specified","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\", EditRoutineCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        // negative index","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_ROUTINE_CARDIO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        // zero index","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_ROUTINE_CARDIO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"        // invalid routine name","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROUTINE_NAME_DESC, RoutineName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        // invalid exercise name followed by valid exercise index","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXERCISE_NAME_DESC + EXERCISE_DESC_INDEX,","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"                Exercise.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        // invalid exercise index followed by valid exercise name","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXERCISE_INDEX_DESC + EXERCISE_DESC_PUSHUP,","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"                MESSAGE_INVALID_EXERCISE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"        Index targetIndex \u003d INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"        String userInput \u003d targetIndex.getOneBased() + EXERCISE_DESC_INDEX + EXERCISE_DESC_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"                .withExercise(VALID_EXERCISE_PUSHUP).withExercisesIndex(VALID_EXERCISE_INDEX).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand expectedCommand \u003d new EditRoutineCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        Index targetIndex \u003d INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ROUTINE_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"                .withRoutineName(VALID_ROUTINE_NAME_CARDIO).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand expectedCommand \u003d new EditRoutineCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        // routine name","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"        Index targetIndex \u003d INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ROUTINE_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"                .withRoutineName(VALID_ROUTINE_NAME_CARDIO).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand expectedCommand \u003d new EditRoutineCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"        // exercises","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"        userInput \u003d targetIndex.getOneBased() + EXERCISE_DESC_INDEX + EXERCISE_DESC_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        descriptor \u003d new EditRoutineDescriptorBuilder().withExercise(VALID_EXERCISE_PUSHUP)","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"                .withExercisesIndex(VALID_EXERCISE_INDEX).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        expectedCommand \u003d new EditRoutineCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"        Index targetIndex \u003d INDEX_FIRST_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ROUTINE_CARDIO + NAME_DESC_ROUTINE_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"                .withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand expectedCommand \u003d new EditRoutineCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"    public void parse_changeExercise_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"        Index targetIndex \u003d INDEX_THIRD_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"        String userInput \u003d targetIndex.getOneBased() + EXERCISE_DESC_INDEX + EXERCISE_DESC_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"                .withExercise(VALID_EXERCISE_PUSHUP).withExercisesIndex(VALID_EXERCISE_INDEX).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand expectedCommand \u003d new EditRoutineCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"    public void parse_changeRoutineName_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"        Index targetIndex \u003d INDEX_THIRD_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ROUTINE_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"        EditRoutineDescriptor descriptor \u003d new EditRoutineDescriptorBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"                .withRoutineName(VALID_ROUTINE_NAME_CARDIO).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"        EditRoutineCommand expectedCommand \u003d new EditRoutineCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":156}},{"path":"src/test/java/seedu/fitbook/logic/parser/routine/FindRoutineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.logic.parser.routine;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.FindRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.parser.FindRoutineCommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.RoutineNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"public class FindRoutineCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    private FindRoutineCommandParser parser \u003d new FindRoutineCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"                FindRoutineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        FindRoutineCommand expectedFindRoutineCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"                new FindRoutineCommand(new RoutineNameContainsKeywordsPredicate(Arrays.asList(\"Jumps\", \"Strength\")));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        assertParseSuccess(parser, \"Jumps Strength\", expectedFindRoutineCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertParseSuccess(parser, \" \\n Jumps \\n \\t Strength  \\t\", expectedFindRoutineCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"dfordarius":36}},{"path":"src/test/java/seedu/fitbook/model/FitBookModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.model.FitBookModel.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.ALICE;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.BENSON;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.JUMP;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.model.client.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.FitBookBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.FitBookExerciseRoutineBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"public class FitBookModelManagerTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    private FitBookModelManager modelManager \u003d new FitBookModelManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        assertEquals(new FitBook(), new FitBook(modelManager.getFitBook()));","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        userPrefs.setFitBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        userPrefs.setFitBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"    public void setFitBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setFitBookFilePath(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"    public void setFitBookFilePath_validPath_setsFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        modelManager.setFitBookFilePath(path);","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        assertEquals(path, modelManager.getFitBookFilePath());","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    public void hasClient_clientNotInFitBook_returnsFalse() {","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"    public void hasClient_clientInFitBook_returnsTrue() {","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        FitBook fitBook \u003d new FitBookBuilder().withClient(ALICE).withClient(BENSON).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"        FitBook differentFitBook \u003d new FitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine differentFitBookExerciseRoutine \u003d new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine fitBookExerciseRoutine \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"                new FitBookExerciseRoutineBuilder().withRoutine(JUMP).withRoutine(STRENGTH).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"        modelManager \u003d new FitBookModelManager(fitBook, fitBookExerciseRoutine, userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        FitBookModelManager modelManagerCopy \u003d new FitBookModelManager(fitBook, fitBookExerciseRoutine, userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"        // different fitBook -\u003e returns false","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"        assertFalse(modelManager.equals(new FitBookModelManager(differentFitBook, fitBookExerciseRoutine, userPrefs)));","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"        // different fitBook exercise routine-\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"        assertFalse(modelManager.equals(new FitBookModelManager(fitBook, differentFitBookExerciseRoutine, userPrefs)));","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":130,"author":{"gitId":"kalarisng"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"        assertFalse(modelManager.equals(new FitBookModelManager(fitBook, fitBookExerciseRoutine, userPrefs)));","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"        //TODO Add filteredList for ExerciseRoutine","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"dfordarius"},"content":"        differentUserPrefs.setFitBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"        assertFalse(modelManager.equals(new FitBookModelManager(fitBook, fitBookExerciseRoutine, differentUserPrefs)));","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kalarisng":2,"jundatan":19,"dfordarius":28,"-":94}},{"path":"src/test/java/seedu/fitbook/model/FitBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.ALICE;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"public class FitBookTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    private final FitBook fitBook \u003d new FitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public void constructor() {","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        assertEquals(Collections.emptyList(), fitBook.getClientList());","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e fitBook.resetData(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    public void resetData_withValidReadOnlyFitBook_replacesData() {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        FitBook newData \u003d getTypicalFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        fitBook.resetData(newData);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        assertEquals(newData, fitBook);","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    public void resetData_withDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"                .build();","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        FitBookStub newData \u003d new FitBookStub(newClients);","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e fitBook.resetData(newData));","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e fitBook.hasClient(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    public void hasClient_clientNotInFitBook_returnsFalse() {","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"        assertFalse(fitBook.hasClient(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"    public void hasClient_clientInFitBook_returnsTrue() {","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"        fitBook.addClient(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        assertTrue(fitBook.hasClient(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"    public void hasClient_clientWithSameIdentityFieldsInFitBook_returnsTrue() {","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        fitBook.addClient(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"                .build();","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        assertTrue(fitBook.hasClient(editedAlice));","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e fitBook.getClientList().remove(0));","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"     * A stub ReadOnlyFitBook whose clients list can violate interface constraints.","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"    private static class FitBookStub implements ReadOnlyFitBook {","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"        FitBookStub(Collection\u003cClient\u003e clients) {","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"            return clients;","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jundatan":9,"dfordarius":93}},{"path":"src/test/java/seedu/fitbook/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public void setFitBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFitBookFilePath(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"dfordarius":4,"-":17}},{"path":"src/test/java/seedu/fitbook/model/client/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        Address addressA \u003d new Address(\"Blk 456, Den Road, #01-355\");","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        Address addressB \u003d new Address(\"Blk 456, Den Road, #01-355\");","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        assertTrue(addressA.equals(addressB) \u0026\u0026 addressB.equals(addressA));","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        assertTrue(addressA.hashCode() \u003d\u003d addressB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"dfordarius":10,"-":34}},{"path":"src/test/java/seedu/fitbook/model/client/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"public class AppointmentTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public void constructor_invalidAppointment_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        String invalidAppointment \u003d \"1999-23-30\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Appointment(invalidAppointment));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    public void isValidAppointment() {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e Appointment.isValidAppointment(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        Appointment appointmentA \u003d new Appointment(\"13-12-2200 18:00\");","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        Appointment appointmentB \u003d new Appointment(\"13-12-2200 18:00\");","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        assertTrue(appointmentA.equals(appointmentB) \u0026\u0026 appointmentB.equals(appointmentA));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        assertTrue(appointmentA.hashCode() \u003d\u003d appointmentB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"dfordarius":34}},{"path":"src/test/java/seedu/fitbook/model/client/CalorieTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"public class CalorieTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Calorie(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    public void constructor_invalidCalorie_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"        String invalidCalorie \u003d \"\";","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Calorie(invalidCalorie));","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    public void isValidCalorie() {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        // null calorie number","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Calorie.isValidCalorie(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        // invalid calorie numbers","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        assertFalse(Calorie.isValidCalorie(\"\")); // empty string","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        assertFalse(Calorie.isValidCalorie(\" \")); // spaces only","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        assertFalse(Calorie.isValidCalorie(\"91\")); // less than 4 numbers","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        assertFalse(Calorie.isValidCalorie(\"phone\")); // non-numeric","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        assertFalse(Calorie.isValidCalorie(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        assertFalse(Calorie.isValidCalorie(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        // valid phone numbers","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        assertTrue(Calorie.isValidCalorie(\"2500\")); // exactly 4 numbers","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        assertTrue(Calorie.isValidCalorie(\"124293842033123\")); // long calorie numbers","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        Calorie calorieA \u003d new Calorie(\"1300\");","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        Calorie calorieB \u003d new Calorie(\"1300\");","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        assertTrue(calorieA.equals(calorieB) \u0026\u0026 calorieB.equals(calorieA));","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        assertTrue(calorieA.hashCode() \u003d\u003d calorieB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"jundatan":37,"dfordarius":10}},{"path":"src/test/java/seedu/fitbook/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_ONE;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_TWO;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_CALORIE_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.ALICE;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"public class ClientTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    public void isSameClient() {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"                .withAppointments(VALID_APPOINTMENT_DATE_ONE).withCalorie(VALID_CALORIE_BOB).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"        // different calorie -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withCalorie(VALID_CALORIE_BOB).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        //different weight -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withWeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"        //different gender -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withGender(\"f\").build();","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"        // different appointments -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAppointments(VALID_APPOINTMENT_DATE_TWO).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"        Client clientA \u003d ALICE;","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"        Client clientB \u003d ALICE;","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"        assertTrue(clientA.equals(clientB) \u0026\u0026 clientB.equals(clientA));","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"        assertTrue(clientA.hashCode() \u003d\u003d clientB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jundatan":23,"dfordarius":37,"-":59}},{"path":"src/test/java/seedu/fitbook/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        Email emailA \u003d new Email(\"PeterJack.1190@example.com\");","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        Email emailB \u003d new Email(\"PeterJack.1190@example.com\");","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        assertTrue(emailA.equals(emailB) \u0026\u0026 emailB.equals(emailA));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        assertTrue(emailA.hashCode() \u003d\u003d emailB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"dfordarius":10,"-":66}},{"path":"src/test/java/seedu/fitbook/model/client/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"class GenderTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    public void isValidGender() {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        // null gender","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        // invalid genders","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        assertFalse(Gender.isValidGender(\"y\")); // not recognised abbreviation","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        // valid genders","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Gender.isValidGender(\"m\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Gender.isValidGender(\"f\")); // small character \u0027f\u0027","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Gender.isValidGender(\"F\")); // big character \u0027F\u0027","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        Gender genderA \u003d new Gender(\"m\");","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        Gender genderB \u003d new Gender(\"m\");","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        assertTrue(genderA.equals(genderB) \u0026\u0026 genderB.equals(genderA));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        assertTrue(genderA.hashCode() \u003d\u003d genderB.hashCode());","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"dfordarius":42}},{"path":"src/test/java/seedu/fitbook/model/client/GoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"class GoalTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Goal(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public void constructor_invalidGoal_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        String invalidGoal \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Goal(invalidGoal));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    public void isValidGoal() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        // null goal","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e Goal.isValidGoal(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        // invalid goals","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        assertFalse(Goal.isValidGoal(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        assertFalse(Goal.isValidGoal(\"  \")); // empty whitespace","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        // valid goals","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Goal.isValidGoal(\"gain\")); // one word","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Goal.isValidGoal(\"lose weight\")); // two words","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Goal.isValidGoal(\"i want to be strong like my friend jacob\")); // a sentence","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        Goal goalA \u003d new Goal(\"lose weight\");","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        Goal goalB \u003d new Goal(\"lose weight\");","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        assertTrue(goalA.equals(goalB) \u0026\u0026 goalB.equals(goalA));","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        assertTrue(goalA.hashCode() \u003d\u003d goalB.hashCode());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"dfordarius":42}},{"path":"src/test/java/seedu/fitbook/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        Name nameA \u003d new Name(\"Alice\");","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        Name nameB \u003d new Name(\"Alice\");","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        assertTrue(nameA.equals(nameB) \u0026\u0026 nameB.equals(nameA));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        assertTrue(nameA.hashCode() \u003d\u003d nameB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"dfordarius":10,"-":38}},{"path":"src/test/java/seedu/fitbook/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        Phone phoneA \u003d new Phone(\"98763723\");","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        Phone phoneB \u003d new Phone(\"98763723\");","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        assertTrue(phoneA.equals(phoneB) \u0026\u0026 phoneB.equals(phoneA));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        assertTrue(phoneA.hashCode() \u003d\u003d phoneB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"dfordarius":10,"-":38}},{"path":"src/test/java/seedu/fitbook/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.ALICE;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"                .build();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    public void add_duplicateClient_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"    public void setClient_targetClientNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"    public void setClient_editedClientIsSameClient_success() {","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"    public void setClient_editedClientHasSameIdentity_success() {","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"                .build();","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"    public void setClient_editedClientHasNonUniqueIdentity_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(BOB);","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ALICE, BOB));","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"    public void remove_clientDoesNotExist_throwsClientNotFoundException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"dfordarius"},"content":"    public void remove_existingClient_removesClient() {","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"dfordarius"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"dfordarius"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"dfordarius"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"    public void setClients_listWithDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"dfordarius"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"dfordarius"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"dfordarius"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"dfordarius"},"content":"            -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-02-27"},{"lineNumber":169,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jundatan":9,"dfordarius":161}},{"path":"src/test/java/seedu/fitbook/model/client/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"class WeightTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weight(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public void constructor_invalidWeight_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        String invalidWeight \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Weight(invalidWeight));","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    public void isValidWeight() {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        // null gender","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e Weight.isValidWeight(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        // invalid genders","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        assertFalse(Weight.isValidWeight(\"\")); // empty string","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        assertFalse(Weight.isValidWeight(\"-23\")); // negative weight","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        // valid genders","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Weight.isValidWeight(\"23\")); // whole number weight","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Weight.isValidWeight(\"233.0\")); // weight to 1 decimal","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertTrue(Weight.isValidWeight(\"23.00\")); // weight to 2 decimal","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        Weight weightA \u003d new Weight(\"23\");","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        Weight weightB \u003d new Weight(\"23\");","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        assertTrue(weightA.equals(weightB) \u0026\u0026 weightB.equals(weightA));","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        assertTrue(weightA.hashCode() \u003d\u003d weightB.hashCode());","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"dfordarius":43}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/AddressContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class AddressContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        AddressContainsKeywordsPredicate firstPredicateCopy \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"                .singletonList(\"30 Winchester Avenue\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withAddress(\"30 Winchester Avenue\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"30 wiNchester aveNuE\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withAddress(\"30 Winchester Avenue\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withAddress(\"30 Winchester Avenue\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"30 Winchester Avenue\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withAddress(\"10 Little Collins Street\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":66}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/AppointmentContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class AppointmentContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        AppointmentContainsKeywordsPredicate firstPredicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        AppointmentContainsKeywordsPredicate secondPredicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        AppointmentContainsKeywordsPredicate firstPredicateCopy \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"    public void test_appointmentContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"                Collections.singletonList(\"12-12-2020\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"OliviaJHL"},"content":"        assertTrue(predicate.test(new ClientBuilder().withAppointments(\"12-12-2020 18:30\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"OliviaJHL"},"content":"        predicate \u003d new AppointmentContainsKeywordsPredicate(Arrays.asList(\"12-12-2020 18:30\", \"11-12-2020 18:30\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"OliviaJHL"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"OliviaJHL"},"content":"                new ClientBuilder().withAppointments(\"12-12-2020 18:30\", \"11-12-2020 18:30\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"    public void test_appointmentDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"OliviaJHL"},"content":"        assertFalse(predicate.test(new ClientBuilder().withAppointments(\"12-12-2020 18:30\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"OliviaJHL"},"content":"        predicate \u003d new AppointmentContainsKeywordsPredicate(Collections.singletonList(\"12-12-2020 18:30\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"OliviaJHL"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"OliviaJHL"},"content":"                new ClientBuilder().withAppointments(\"10-12-2020 18:30\", \"11-12-2020 18:30\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":60,"OliviaJHL":8}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/CalorieContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class CalorieContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        CalorieContainsKeywordsPredicate firstPredicate \u003d new CalorieContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        CalorieContainsKeywordsPredicate secondPredicate \u003d new CalorieContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        CalorieContainsKeywordsPredicate firstPredicateCopy \u003d new CalorieContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"    public void test_calorieContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        CalorieContainsKeywordsPredicate predicate \u003d new CalorieContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"                .singletonList(\"1000\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withCalorie(\"1000\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"    public void test_calorieDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"        CalorieContainsKeywordsPredicate predicate \u003d new CalorieContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withCalorie(\"1000\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new CalorieContainsKeywordsPredicate(Arrays.asList(\"1200\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"1000\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":62}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"                .singletonList(\"alicet@example.com\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withEmail(\"alicet@example.com\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIceT@example.com\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withEmail(\"alicet@example.com\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withEmail(\"alicet@example.com\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"carolp@example.com\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withEmail(\"alicet@example.com\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":64}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/GenderContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class GenderContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        GenderContainsKeywordsPredicate firstPredicate \u003d new GenderContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        GenderContainsKeywordsPredicate secondPredicate \u003d new GenderContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        GenderContainsKeywordsPredicate firstPredicateCopy \u003d new GenderContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"    public void test_genderContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        GenderContainsKeywordsPredicate predicate \u003d new GenderContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"                .singletonList(\"F\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withAddress(\"F\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new GenderContainsKeywordsPredicate(Arrays.asList(\"f\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withAddress(\"F\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"    public void test_genderDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        GenderContainsKeywordsPredicate predicate \u003d new GenderContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withGender(\"F\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new GenderContainsKeywordsPredicate(Arrays.asList(\"F\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withGender(\"M\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":66}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/GoalContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"public class GoalContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    public void equals() {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        GoalContainsKeywordsPredicate firstPredicate \u003d new GoalContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        GoalContainsKeywordsPredicate secondPredicate \u003d new GoalContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        GoalContainsKeywordsPredicate firstPredicateCopy \u003d new GoalContainsKeywordsPredicate(","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    public void test_goalContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        // One keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        GoalContainsKeywordsPredicate predicate \u003d new GoalContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"                .singletonList(\"lose weight\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new ClientBuilder().withGoal(\"lose weight\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        predicate \u003d new GoalContainsKeywordsPredicate(Arrays.asList(\"LoSe WEIght\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new ClientBuilder().withGoal(\"lose weight\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    public void test_goalDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        GoalContainsKeywordsPredicate predicate \u003d new GoalContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        assertFalse(predicate.test(new ClientBuilder().withGoal(\"lose weight\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        predicate \u003d new GoalContainsKeywordsPredicate(Arrays.asList(\"gain weight\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        assertFalse(predicate.test(new ClientBuilder().withGoal(\"be fitter\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":64}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce bOB\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        // Keywords match phone, email, calorie and address, but does not match name","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice 91234567\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kalarisng":4,"jundatan":2,"dfordarius":5,"-":55}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"                .singletonList(\"91234567\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"92345678\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withPhone(\"91234567\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":60}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"friends\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"colleagues\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withTags(\"friends\", \"colleagues\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withTags(\"1000\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"1200\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withTags(\"1000\", \"1100\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":61}},{"path":"src/test/java/seedu/fitbook/model/client/predicate/WeightContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package seedu.fitbook.model.client.predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import seedu.fitbook.testutil.client.ClientBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class WeightContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        WeightContainsKeywordsPredicate firstPredicate \u003d new WeightContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        WeightContainsKeywordsPredicate secondPredicate \u003d new WeightContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        WeightContainsKeywordsPredicate firstPredicateCopy \u003d new WeightContainsKeywordsPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    public void test_weightContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"        // One keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        WeightContainsKeywordsPredicate predicate \u003d new WeightContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"                .singletonList(\"30\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        assertTrue(predicate.test(new ClientBuilder().withWeight(\"30\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"    public void test_weightDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withWeight(\"30\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"30\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        assertFalse(predicate.test(new ClientBuilder().withAddress(\"20\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kalarisng":61}},{"path":"src/test/java/seedu/fitbook/model/routine/ExerciseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"public class ExerciseTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Exercise(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    public void constructor_invalidExerciseName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"        String invalidExerciseName \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Exercise(invalidExerciseName));","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    public void isValidExerciseName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        // null exercise name","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Exercise.isValidExerciseName(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        Exercise exerciseA \u003d new Exercise(\"push up\");","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        Exercise exerciseB \u003d new Exercise(\"push up\");","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        assertTrue(exerciseA.equals(exerciseB) \u0026\u0026 exerciseB.equals(exerciseA));","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        assertTrue(exerciseA.hashCode() \u003d\u003d exerciseB.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":28,"dfordarius":8}},{"path":"src/test/java/seedu/fitbook/model/routine/RoutineNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.routine;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.routines.RoutineNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"public class RoutineNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    public void equals() {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"                new RoutineNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"                new RoutineNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"                new RoutineNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        // different routine -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    public void test_routineNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"        // One keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        RoutineNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"                new RoutineNameContainsKeywordsPredicate(Collections.singletonList(\"Jumps\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new RoutineBuilder().withRoutineName(\"Jumps\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        predicate \u003d new RoutineNameContainsKeywordsPredicate(Arrays.asList(\"Jumps\", \"Strength\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new RoutineBuilder().withRoutineName(\"Jumps Strength\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"        predicate \u003d new RoutineNameContainsKeywordsPredicate(Arrays.asList(\"Jumps\", \"Carol\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new RoutineBuilder().withRoutineName(\"Jumps Strength\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        predicate \u003d new RoutineNameContainsKeywordsPredicate(Arrays.asList(\"JUmps\", \"StRENGTH\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        assertTrue(predicate.test(new RoutineBuilder().withRoutineName(\"Jumps Strength\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dfordarius":66}},{"path":"src/test/java/seedu/fitbook/model/routine/RoutineNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"public class RoutineNameTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RoutineName(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    public void constructor_invalidRoutineName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        String invalidRoutineName \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RoutineName(invalidRoutineName));","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    public void isValidRoutineName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        // null routine name","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e RoutineName.isValidRoutineName(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        // invalid routine name","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        assertFalse(RoutineName.isValidRoutineName(\"\")); // empty string","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        assertFalse(RoutineName.isValidRoutineName(\" \")); // spaces only","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        assertFalse(RoutineName.isValidRoutineName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        assertFalse(RoutineName.isValidRoutineName(\"cardio*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        // valid routine name","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        assertTrue(RoutineName.isValidRoutineName(\"high intense\")); // alphabets only","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        assertTrue(RoutineName.isValidRoutineName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        assertTrue(RoutineName.isValidRoutineName(\"cardio the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        assertTrue(RoutineName.isValidRoutineName(\"Cardio Routine\")); // with capital letters","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        assertTrue(RoutineName.isValidRoutineName(\"High Intensity Interval Training Part 2\")); // long names","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":42,"dfordarius":1}},{"path":"src/test/java/seedu/fitbook/model/routine/RoutineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_SITUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"public class RoutineTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public void isSameRoutine() {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        assertTrue(CARDIO.isSameRoutine(CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        assertFalse(CARDIO.isSameRoutine(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        // same routine name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        Routine editedCardio \u003d new RoutineBuilder(CARDIO).withExercises(VALID_EXERCISE_PUSHUP).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        assertTrue(CARDIO.isSameRoutine(editedCardio));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        // different routine name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        editedCardio \u003d new RoutineBuilder(CARDIO).withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        assertFalse(CARDIO.isSameRoutine(editedCardio));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        // routine name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        Routine editedStrength \u003d new RoutineBuilder(STRENGTH).withRoutineName(VALID_ROUTINE_NAME_STRENGTH.toLowerCase())","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        assertFalse(STRENGTH.isSameRoutine(editedStrength));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        // routine name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        String routineNameWithTrailingSpaces \u003d VALID_ROUTINE_NAME_STRENGTH + \" \";","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        editedStrength \u003d new RoutineBuilder(STRENGTH).withRoutineName(routineNameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        assertFalse(STRENGTH.isSameRoutine(editedStrength));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        Routine cardioCopy \u003d new RoutineBuilder(CARDIO).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        assertTrue(CARDIO.equals(cardioCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        assertTrue(CARDIO.equals(CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        assertFalse(CARDIO.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        assertFalse(CARDIO.equals(5));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        // different routine -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        assertFalse(CARDIO.equals(STRENGTH));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        // different routine name -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        Routine editedCardio \u003d new RoutineBuilder(CARDIO).withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"        assertFalse(CARDIO.equals(editedCardio));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"        // different exercises -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        editedCardio \u003d new RoutineBuilder().withRoutineName(VALID_ROUTINE_NAME_CARDIO)","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"                .withExercises(VALID_EXERCISE_SITUP).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        assertFalse(CARDIO.equals(editedCardio));","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"    public void test_equalsSymmetric() {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        Routine routineA \u003d new RoutineBuilder(CARDIO).withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        Routine routineCopyA \u003d new RoutineBuilder(CARDIO).withRoutineName(VALID_ROUTINE_NAME_STRENGTH).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        assertTrue(routineA.equals(routineCopyA) \u0026\u0026 routineCopyA.equals(routineA));","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        assertTrue(routineA.hashCode() \u003d\u003d routineCopyA.hashCode());","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":73,"dfordarius":7}},{"path":"src/test/java/seedu/fitbook/model/routine/UniqueRoutineListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_SITUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.UniqueRoutineList;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.exceptions.DuplicateRoutineException;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.exceptions.RoutineNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.RoutineBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"public class UniqueRoutineListTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    private final UniqueRoutineList uniqueRoutineList \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public void contains_nullRoutine_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRoutineList.contains(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    public void contains_routineNotInList_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        assertFalse(uniqueRoutineList.contains(CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    public void contains_routineInList_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        assertTrue(uniqueRoutineList.contains(CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public void contains_routineWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        Routine editedCardio \u003d new RoutineBuilder(CARDIO).withExercises(VALID_EXERCISE_SITUP)","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        assertTrue(uniqueRoutineList.contains(editedCardio));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    public void add_nullRoutine_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRoutineList.add(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    public void add_duplicateRoutine_throwsDuplicateRoutineException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        assertThrows(DuplicateRoutineException.class, () -\u003e uniqueRoutineList.add(CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    public void setRoutine_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRoutineList.setRoutine(null, CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"    public void setRoutine_nullEditedRoutine_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRoutineList.setRoutine(CARDIO, null));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"    public void setRoutine_targetRoutineNotInList_throwsRoutineNotFoundException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        assertThrows(RoutineNotFoundException.class, () -\u003e uniqueRoutineList.setRoutine(CARDIO, CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"    public void setRoutine_editedRoutineIsSameRoutine_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.setRoutine(CARDIO, CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"        UniqueRoutineList expectedUniqueRoutineList \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"        expectedUniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedUniqueRoutineList, uniqueRoutineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"    public void setRoutine_editedClientHasSameIdentity_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"        Routine editedRoutine \u003d new RoutineBuilder(CARDIO).withExercises(VALID_EXERCISE_SITUP)","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.setRoutine(CARDIO, editedRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"        UniqueRoutineList expectedUniqueRoutineList \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        expectedUniqueRoutineList.add(editedRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedUniqueRoutineList, uniqueRoutineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"    public void setRoutine_editedRoutineHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.setRoutine(CARDIO, STRENGTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"        UniqueRoutineList expectedUniqueRoutineList \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"        expectedUniqueRoutineList.add(STRENGTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedUniqueRoutineList, uniqueRoutineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"    public void setRoutine_editedRoutineHasNonUniqueIdentity_throwsDuplicateRoutineException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(STRENGTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        assertThrows(DuplicateRoutineException.class, () -\u003e uniqueRoutineList.setRoutine(CARDIO, STRENGTH));","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    public void remove_nullRoutine_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRoutineList.remove(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"    public void remove_routineDoesNotExist_throwsRoutineNotFoundException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"        assertThrows(RoutineNotFoundException.class, () -\u003e uniqueRoutineList.remove(CARDIO));","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"    public void remove_existingRoutine_removesRoutine() {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.remove(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"        UniqueRoutineList expectedUniqueRoutineList \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedUniqueRoutineList, uniqueRoutineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"    public void setRoutines_nullUniqueRoutineList_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRoutineList.setRoutines((UniqueRoutineList) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"    public void setRoutines_uniqueRoutineList_replacesOwnListWithProvidedUniqueRoutineList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"        UniqueRoutineList expectedUniqueRoutineList \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"        expectedUniqueRoutineList.add(STRENGTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.setRoutines(expectedUniqueRoutineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedUniqueRoutineList, uniqueRoutineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"    public void setRoutines_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRoutineList.setRoutines((List\u003cRoutine\u003e) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"    public void setRoutines_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.add(CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"        List\u003cRoutine\u003e routineList \u003d Collections.singletonList(STRENGTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"        uniqueRoutineList.setRoutines(routineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"        UniqueRoutineList expectedUniqueRoutineList \u003d new UniqueRoutineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"        expectedUniqueRoutineList.add(STRENGTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"        assertEquals(expectedUniqueRoutineList, uniqueRoutineList);","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"    public void setRoutines_listWithDuplicateRoutines_throwsDuplicateRoutineException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"        List\u003cRoutine\u003e listWithDuplicateRoutines \u003d Arrays.asList(CARDIO, CARDIO);","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"        assertThrows(DuplicateRoutineException.class, () -\u003e uniqueRoutineList.setRoutines(listWithDuplicateRoutines));","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"            -\u003e uniqueRoutineList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":171}},{"path":"src/test/java/seedu/fitbook/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"dfordarius":2,"-":24}},{"path":"src/test/java/seedu/fitbook/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.model.util;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.model.util.SampleDataUtil.getAppointmentSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertArrayNotEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    public void getSampleClients() {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        Client[] testClient \u003d new Client[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"20\"), new Gender(\"M\"), new Calorie(\"1200\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"20\"), new Gender(\"M\"), new Calorie(\"1200\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"30\"), new Gender(\"M\"), new Calorie(\"1100\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"                    getAppointmentSet(\"12-12-2019 18:30\"), new Weight(\"40\"), new Gender(\"M\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"                    new Calorie(\"1200\"), new Goal(\"lose weight\"), getTagSet(\"family\")),","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"50\"), new Gender(\"M\"), new Calorie(\"1202\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"OliviaJHL"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getAppointmentSet(\"12-12-2019 18:30\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"                new Weight(\"60\"), new Gender(\"M\"), new Calorie(\"2356\"), new Goal(\"lose weight\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        };","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        int clientNumber \u003d SampleDataUtil.getSampleClients().length;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        Client[] nullTestClient \u003d new Client[clientNumber];","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        // Sample Data is the equal to the sample data of test.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        assertArrayEquals(SampleDataUtil.getSampleClients(), testClient);","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        // Sample Data is non null.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        assertArrayNotEquals(nullTestClient, SampleDataUtil.getSampleClients());","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"OliviaJHL":5,"jundatan":29,"dfordarius":26}},{"path":"src/test/java/seedu/fitbook/model/util/SampleExerciseRoutineDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.model.util;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.model.util.SampleExerciseRoutineDataUtil.getExerciseList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertArrayNotEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"public class SampleExerciseRoutineDataUtilTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public void getSampleRoutines() {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"        Routine[] testRoutine \u003d new Routine[] {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"            new Routine(new RoutineName(\"OPM\"), getExerciseList(\"100 Push ups\", \"100 Sit ups\", \"10km run\")),","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"            new Routine(new RoutineName(\"Cardio\"), getExerciseList(\"10 Berpes\", \"100 crunches\")),","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"            new Routine(new RoutineName(\"Strength\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"                    getExerciseList(\"4x15 Dumbbell curls\", \"3x15 Bench Press\", \"5 reps of Deadlift\"))","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        };","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        int routineNumber \u003d SampleExerciseRoutineDataUtil.getSampleRoutines().length;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        Routine[] nullTestRoutine \u003d new Routine[routineNumber];","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        // Sample Exercise Routine Data is the equal to the sample data of test.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        assertArrayEquals(SampleExerciseRoutineDataUtil.getSampleRoutines(), testRoutine);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        // Sample Exercise Routine Data is non null.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        assertArrayNotEquals(nullTestRoutine, SampleExerciseRoutineDataUtil.getSampleRoutines());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":32}},{"path":"src/test/java/seedu/fitbook/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.BENSON;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_CALORIE \u003d \" \";","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    private static final String INVALID_WEIGHT \u003d \"0\";","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    private static final String INVALID_GENDER \u003d \" \";","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    private static final String INVALID_GOAL \u003d \" \";","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_APPOINTMENT \u003d \"af-15-2142\";","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_WEIGHT \u003d BENSON.getWeight().toString();","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    private static final String VALID_GOAL \u003d BENSON.getGoal().toString();","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    private static final List\u003cJsonAdaptedAppointment\u003e VALID_APPOINTMENTS \u003d BENSON.getAppointments().stream()","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"            .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    private static final String VALID_CALORIE \u003d BENSON.getCalorie().toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        assertEquals(BENSON, client.toFitBookModelType());","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_CALORIE, VALID_GOAL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"                VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_APPOINTMENTS,","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"                        VALID_WEIGHT, VALID_GENDER, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"                VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_CALORIE, VALID_GOAL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_CALORIE, VALID_GOAL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"                VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_CALORIE, VALID_GOAL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_CALORIE, VALID_GOAL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"                VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidWeight_throwsIllegalValueException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, INVALID_WEIGHT, VALID_GENDER, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_nullWeight_throwsIllegalValueException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"                VALID_APPOINTMENTS, null, VALID_GENDER, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName());","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, INVALID_GENDER, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"                VALID_APPOINTMENTS, VALID_WEIGHT, null, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_GOAL, VALID_CALORIE, invalidTags);","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, client::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"    public void toFitBookModelType_invalidCalorie_throwsIllegalValueException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_GOAL, INVALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d Calorie.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"    public void toFitBookModelType_nullCalorie_throwsIllegalValueException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, VALID_GOAL, null, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Calorie.class.getSimpleName());","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"    public void toFitBookModelType_invalidAppointments_throwsIllegalValueException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"        List\u003cJsonAdaptedAppointment\u003e invalidAppointments \u003d new ArrayList\u003c\u003e(VALID_APPOINTMENTS);","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"        invalidAppointments.add(new JsonAdaptedAppointment(INVALID_APPOINTMENT));","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"dfordarius"},"content":"                        invalidAppointments, VALID_WEIGHT, VALID_GENDER, VALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalValueException.class, client::toFitBookModelType);","lastModifiedDate":"2023-02-28"},{"lineNumber":195,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidGoals_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, INVALID_GOAL, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d Goal.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_nullGoals_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"dfordarius"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"dfordarius"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"dfordarius"},"content":"                        VALID_APPOINTMENTS, VALID_WEIGHT, VALID_GENDER, null, VALID_CALORIE, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"dfordarius"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Goal.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toFitBookModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jundatan":28,"dfordarius":120,"-":65}},{"path":"src/test/java/seedu/fitbook/storage/JsonFitBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.ALICE;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.HOON;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.IDA;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"public class JsonFitBookStorageTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonFitBookStorageTest\");","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    @TempDir","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public Path testFolder;","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    public void readFitBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFitBook(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    private java.util.Optional\u003cReadOnlyFitBook\u003e readFitBook(String filePath) throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        return new JsonFitBookStorage(Paths.get(filePath)).readFitBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"                : null;","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        assertFalse(readFitBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFitBook(\"notJsonFormatFitBook.json\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    public void readFitBook_invalidClientFitBook_throwDataConversionException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFitBook(\"invalidClientFitBook.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    public void readFitBook_invalidAndValidClientFitBook_throwDataConversionException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFitBook(\"invalidAndValidClientFitBook.json\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    public void readAndSaveFitBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        Path filePath \u003d testFolder.resolve(\"TempFitBook.json\");","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        FitBook original \u003d getTypicalFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        JsonFitBookStorage jsonFitBookStorage \u003d new JsonFitBookStorage(filePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        jsonFitBookStorage.saveFitBook(original, filePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        ReadOnlyFitBook readBack \u003d jsonFitBookStorage.readFitBook(filePath).get();","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        assertEquals(original, new FitBook(readBack));","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        original.addClient(HOON);","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        jsonFitBookStorage.saveFitBook(original, filePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"        readBack \u003d jsonFitBookStorage.readFitBook(filePath).get();","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        assertEquals(original, new FitBook(readBack));","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"        original.addClient(IDA);","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"        jsonFitBookStorage.saveFitBook(original); // file path not specified","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"        readBack \u003d jsonFitBookStorage.readFitBook().get(); // file path not specified","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"        assertEquals(original, new FitBook(readBack));","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"    public void saveFitBook_nullFitBook_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFitBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"     * Saves {@code fitBook} at the specified {@code filePath}.","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"    private void saveFitBook(ReadOnlyFitBook fitBook, String filePath) {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"            new JsonFitBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"                    .saveFitBook(fitBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"    public void saveFitBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFitBook(new FitBook(), null));","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jundatan":10,"dfordarius":100}},{"path":"src/test/java/seedu/fitbook/storage/JsonSerializableFitBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.JsonUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.client.TypicalClients;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"public class JsonSerializableFitBookTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableFitBookTest\");","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsFitBook.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientFitBook.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientFitBook.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        JsonSerializableFitBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"                JsonSerializableFitBook.class).get();","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        FitBook fitBookFromFile \u003d dataFromFile.toFitBookModelType();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        FitBook typicalClientsFitBook \u003d TypicalClients.getTypicalFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        assertEquals(fitBookFromFile, typicalClientsFitBook);","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        JsonSerializableFitBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"                JsonSerializableFitBook.class).get();","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    public void toFitBookModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        JsonSerializableFitBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"                JsonSerializableFitBook.class).get();","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFitBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                dataFromFile::toFitBookModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jundatan":13,"dfordarius":34}},{"path":"src/test/java/seedu/fitbook/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"        userPrefs.setFitBookFilePath(Paths.get(\"fitbook.json\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        userPrefs.setFitBookExerciseRoutineFilePath(Paths.get(\"exerciseroutine.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jundatan":6,"dfordarius":1,"-":117}},{"path":"src/test/java/seedu/fitbook/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.client.TypicalClients.getTypicalFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.GuiSettings;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.storage.routine.JsonFitBookExerciseRoutineStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        JsonFitBookStorage fitBookStorage \u003d new JsonFitBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        JsonFitBookExerciseRoutineStorage fitBookExerciseRoutineStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"                new JsonFitBookExerciseRoutineStorage(getTempFilePath(\"er\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        storageManager \u003d new StorageManager(fitBookStorage, userPrefsStorage, fitBookExerciseRoutineStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    public void fitBookReadSave() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"         * {@link JsonFitBookStorage} class.","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonFitBookStorageTest} class.","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        FitBook original \u003d getTypicalFitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        storageManager.saveFitBook(original);","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        ReadOnlyFitBook retrieved \u003d storageManager.readFitBook().get();","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        assertEquals(original, new FitBook(retrieved));","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"    public void getFitBookFilePath() {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"        assertNotNull(storageManager.getFitBookFilePath());","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jundatan":10,"dfordarius":10,"-":51}},{"path":"src/test/java/seedu/fitbook/storage/routine/JsonAdaptedRoutineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.storage.routine.JsonAdaptedRoutine.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"public class JsonAdaptedRoutineTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_ROUTINE_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    private static final String INVALID_EXERCISE \u003d \"af-15-2142\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    private static final String VALID_ROUTINE_NAME \u003d STRENGTH.getRoutineName().toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    private static final List\u003cJsonAdaptedExercise\u003e VALID_EXERCISES \u003d STRENGTH.getExercises().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"            .map(JsonAdaptedExercise::new)","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public void toFitBookModelType_validRoutineDetails_returnsRoutine() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        JsonAdaptedRoutine routine \u003d new JsonAdaptedRoutine(STRENGTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"        assertEquals(STRENGTH, routine.toFitBookExerciseRoutineModelType());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    public void toFitBookExerciseRoutineModelType_invalidRoutineName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        JsonAdaptedRoutine routine \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"                new JsonAdaptedRoutine(INVALID_ROUTINE_NAME, VALID_EXERCISES);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d RoutineName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, routine::toFitBookExerciseRoutineModelType);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    public void toFitBookExerciseRoutineModelType_nullRoutineName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        JsonAdaptedRoutine routine \u003d new JsonAdaptedRoutine(null, VALID_EXERCISES);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, RoutineName.class.getSimpleName());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, routine::toFitBookExerciseRoutineModelType);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    public void toFitBookExerciseRoutineModelType_invalidExercises_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        List\u003cJsonAdaptedExercise\u003e invalidAppointments \u003d new ArrayList\u003c\u003e(VALID_EXERCISES);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        invalidAppointments.add(new JsonAdaptedExercise(INVALID_EXERCISE));","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        JsonAdaptedRoutine routine \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"                new JsonAdaptedRoutine(VALID_ROUTINE_NAME, invalidAppointments);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalValueException.class, routine::toFitBookExerciseRoutineModelType);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":56}},{"path":"src/test/java/seedu/fitbook/storage/routine/JsonFitBookExerciseRoutineStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.ARMS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.HIIT;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.JUMP;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.getTypicalFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.ReadOnlyFitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"public class JsonFitBookExerciseRoutineStorageTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"            \"JsonFitBookExerciseRoutineStorageTest\");","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    @TempDir","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    public void readFitBookExerciseRoutine_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFitBookExerciseRoutine(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    private Optional\u003cReadOnlyFitBookExerciseRoutine\u003e readFitBookExerciseRoutine(String filePath) throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        return new JsonFitBookExerciseRoutineStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"                .readFitBookExerciseRoutine(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"                : null;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        assertFalse(readFitBookExerciseRoutine(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"                readFitBookExerciseRoutine(\"notJsonFormatFitBookExerciseRoutine.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"    public void readFitBookExerciseRoutine_invalidExerciseRoutineFitBook_throwDataConversionException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"                readFitBookExerciseRoutine(\"invalidRoutineFitBookExerciseRoutine.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"    public void readFitBookExerciseRoutine_invalidAndValidExerciseRoutineFitBook_throwDataConversionException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"                readFitBookExerciseRoutine(\"invalidAndValidRoutineFitBookExerciseRoutine.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"    public void readAndSaveFitBookExerciseRoutine_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        Path filePath \u003d testFolder.resolve(\"TempFitBook.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine original \u003d getTypicalFitBookExerciseRoutine();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"        JsonFitBookExerciseRoutineStorage jsonFitBookExerciseRoutineStorage \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"                new JsonFitBookExerciseRoutineStorage(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        jsonFitBookExerciseRoutineStorage.saveFitBookExerciseRoutine(original, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"        ReadOnlyFitBookExerciseRoutine readBack \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"                jsonFitBookExerciseRoutineStorage.readFitBookExerciseRoutine(filePath).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"        assertEquals(original, new FitBookExerciseRoutine(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"        original.addRoutine(HIIT);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"        original.removeRoutine(JUMP);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"        jsonFitBookExerciseRoutineStorage.saveFitBookExerciseRoutine(original, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        readBack \u003d jsonFitBookExerciseRoutineStorage.readFitBookExerciseRoutine(filePath).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"        assertEquals(original, new FitBookExerciseRoutine(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"        original.addRoutine(ARMS);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"        jsonFitBookExerciseRoutineStorage.saveFitBookExerciseRoutine(original); // file path not specified","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"        readBack \u003d jsonFitBookExerciseRoutineStorage.readFitBookExerciseRoutine().get(); // file path not specified","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"        assertEquals(original, new FitBookExerciseRoutine(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"    public void saveFitBookExerciseRoutine_nullFitBook_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFitBookExerciseRoutine(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"     * Saves {@code fitBookExerciseRoutine} at the specified {@code filePath}.","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"    private void saveFitBookExerciseRoutine(ReadOnlyFitBookExerciseRoutine fitBookExerciseRoutine, String filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"            new JsonFitBookExerciseRoutineStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"                    .saveFitBookExerciseRoutine(fitBookExerciseRoutine, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"    public void saveFitBookExerciseRoutine_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFitBookExerciseRoutine(new FitBookExerciseRoutine(),","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"                null));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":119}},{"path":"src/test/java/seedu/fitbook/storage/routine/JsonSerializableFitBookExerciseRoutineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.storage.routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.JUMP;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.LEGS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.testutil.routine.TypicalRoutines.STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.util.JsonUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.testutil.routine.TypicalRoutines;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"public class JsonSerializableFitBookExerciseRoutineTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"            \"JsonSerializableFitBookExerciseRoutineTest\");","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    private static final Path TYPICAL_ROUTINES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalRoutinesFitBook.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    private static final Path INVALID_ROUTINE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidRoutineFitBook.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    private static final Path DUPLICATE_ROUTINE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateRoutineFitBook.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    //TODO Something switching causing error.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public void toFitBookExerciseRoutineModelType_typicalRoutinesFile_success() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        JUMP.withExercises(\"3x10 Jumping Jacks\", \"4x5 1km Run\");","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        STRENGTH.withExercises(\"3x10 Dumbbell Curls\", \"4x5 Bench Press\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        LEGS.withExercises(\"3x10 Squats\", \"4x5 Deadlift\", \"5x10 10kg forward lunges\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        JsonSerializableFitBookExerciseRoutine dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ROUTINES_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"                JsonSerializableFitBookExerciseRoutine.class).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine fitBookExerciseRoutineFromFile \u003d dataFromFile.toFitBookExerciseRoutineModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine typicalRoutinesFitBook \u003d TypicalRoutines.getTypicalFitBookExerciseRoutine();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        assertEquals(fitBookExerciseRoutineFromFile, typicalRoutinesFitBook);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    public void toFitBookExerciseRoutineModelType_invalidRoutineFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        JsonSerializableFitBookExerciseRoutine dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ROUTINE_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"                JsonSerializableFitBookExerciseRoutine.class).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toFitBookExerciseRoutineModelType);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    public void toFitBookModelExerciseRoutineType_duplicateRoutines_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        JsonSerializableFitBookExerciseRoutine dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ROUTINE_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"                JsonSerializableFitBookExerciseRoutine.class).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFitBookExerciseRoutine.MESSAGE_DUPLICATE_ROUTINE,","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"                dataFromFile::toFitBookExerciseRoutineModelType);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jundatan":56}},{"path":"src/test/java/seedu/fitbook/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     * Asserts that the {@code executable} is not equal with the {@code expectedArray}.","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"     * @param expectedArray The expected array to compare.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * @param executable The array executable.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public static void assertArrayNotEquals(Client[] expectedArray, Client[] executable) {","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        Assertions.assertFalse(expectedArray.equals(executable));","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     * Asserts that the {@code executable} is not equal with the {@code expectedArray}.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"     * @param expectedArray The expected array to compare.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"     * @param executable The array executable.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    public static void assertArrayNotEquals(Routine[] expectedArray, Routine[] executable) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        Assertions.assertFalse(expectedArray.equals(executable));","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"jundatan":23,"-":34}},{"path":"src/test/java/seedu/fitbook/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dfordarius":1,"-":71}},{"path":"src/test/java/seedu/fitbook/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    public static Index getMidIndex(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    public static Index getLastIndex(FitBookModel model) {","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    public static Client getClient(FitBookModel model, Index index) {","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"     * Returns the routine in the {@code model}\u0027s routine list at {@code index}.","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    public static Routine getRoutine(FitBookModel model, Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        return model.getFilteredRoutineList().get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jundatan":12,"dfordarius":9,"-":42}},{"path":"src/test/java/seedu/fitbook/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    public static final Index INDEX_FIRST_ROUTINE \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    public static final Index INDEX_SECOND_ROUTINE \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    public static final Index INDEX_THIRD_ROUTINE \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jundatan":5,"-":10}},{"path":"src/test/java/seedu/fitbook/testutil/client/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.client;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"public class ClientBuilder {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public static final String DEFAULT_CALORIE \u003d \"2000\";","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    public static final String DEFAULT_WEIGHT \u003d \"50.00\";","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    public static final String DEFAULT_GOAL \u003d \"lose weight\";","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    private Calorie calorie;","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    private Set\u003cAppointment\u003e appointments;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    private Weight weight;","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    private Gender gender;","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    private Goal goal;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder() {","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        calorie \u003d new Calorie(DEFAULT_CALORIE);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"        weight \u003d new Weight(DEFAULT_WEIGHT);","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        goal \u003d new Goal(DEFAULT_GOAL);","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        appointments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"        calorie \u003d clientToCopy.getCalorie();","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"        weight \u003d clientToCopy.getWeight();","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        gender \u003d clientToCopy.getGender();","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        goal \u003d clientToCopy.getGoal();","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"        appointments \u003d new HashSet\u003c\u003e(clientToCopy.getAppointments());","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"     * Parses the {@code appointments} into a {@code Set\u003cAppointment\u003e}","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"     * and set it to the {@code Client} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"    public ClientBuilder withAppointments(String ... appointments) {","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"        this.appointments \u003d SampleDataUtil.getAppointmentSet(appointments);","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Weight} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withWeight(String weight) {","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"dfordarius"},"content":"        this.weight \u003d new Weight(weight);","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"        return this;","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Gender} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withGender(String gender) {","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"dfordarius"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"        return this;","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":139,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Goal} of the {@code Client} that we are building.","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"dfordarius"},"content":"    public ClientBuilder withGoal(String goal) {","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"        this.goal \u003d new Goal(goal);","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"     * Sets the {@code Calorie} of the {@code Client} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"    public ClientBuilder withCalorie(String calorie) {","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"        this.calorie \u003d new Calorie(calorie);","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"dfordarius"},"content":"    public Client build() {","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"dfordarius"},"content":"        return new Client(name, phone, email, address, appointments, weight, gender, calorie, goal, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jundatan":25,"dfordarius":68,"-":65}},{"path":"src/test/java/seedu/fitbook/testutil/client/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.client;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":" * A utility class for Client.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"public class ClientUtil {","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        sb.append(PREFIX_ADDRESS + client.getAddress().value + \" \");","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        sb.append(PREFIX_CALORIE + client.getCalorie().value + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        sb.append(PREFIX_WEIGHT + client.getWeight().value + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        sb.append(PREFIX_GENDER + client.getGender().value + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        sb.append(PREFIX_GOAL + client.getGoal().value + \" \");","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        client.getAppointments().stream().forEach(","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"                s -\u003e sb.append(PREFIX_APPOINTMENT + s.appointmentTime + \" \")","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        );","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    public static String getEditClientDescriptorDetails(EditClientDescriptor descriptor) {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"        descriptor.getWeight().ifPresent(weight -\u003e sb.append(PREFIX_WEIGHT).append(weight.value).append(\" \"));","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        descriptor.getGoal().ifPresent(goal -\u003e sb.append(PREFIX_GOAL).append(goal.value).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"        descriptor.getCalorie().ifPresent(address -\u003e sb.append(PREFIX_CALORIE).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        if (descriptor.getAppointments().isPresent()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"            Set\u003cAppointment\u003e appointments \u003d descriptor.getAppointments().get();","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"            if (appointments.isEmpty()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"                sb.append(PREFIX_APPOINTMENT).append(\" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"            } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"                appointments.forEach(s -\u003e sb.append(PREFIX_APPOINTMENT).append(s.appointmentTime).append(\" \"));","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jundatan":13,"dfordarius":36,"-":38}},{"path":"src/test/java/seedu/fitbook/testutil/client/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.client;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Address;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Calorie;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Goal;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Name;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Weight;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    private EditClientDescriptor descriptor;","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        descriptor.setCalorie(client.getCalorie());","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"        descriptor.setWeight(client.getWeight());","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        descriptor.setGender(client.getGender());","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        descriptor.setGoal(client.getGoal());","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        descriptor.setAppointments(client.getAppointments());","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code Address} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code weight} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withWeight(String weight) {","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"        descriptor.setWeight(new Weight(weight));","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"        return this;","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code gender} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"        return this;","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"     * Sets the {@code goal} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withGoal(String goal) {","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"        descriptor.setGoal(new Goal(goal));","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"     * Sets the {@code Calorie} of the {@code EditClientDescriptorBuilder} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"    public EditClientDescriptorBuilder withCalorie(String calorie) {","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"        descriptor.setCalorie(new Calorie(calorie));","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"     * Parses the {@code appointments} into a {@code Set\u003cAppointment\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"     * that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"    public EditClientDescriptorBuilder withAppointments(String... appointments) {","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"        Set\u003cAppointment\u003e appointmentSet \u003d Stream.of(appointments).map(Appointment::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"        descriptor.setAppointments(appointmentSet);","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"dfordarius"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jundatan":21,"dfordarius":65,"-":52}},{"path":"src/test/java/seedu/fitbook/testutil/client/FitBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.client;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" * A utility class to help with building FitBook objects.","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":" *     {@code FitBook ab \u003d new FitBookBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"public class FitBookBuilder {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    private FitBook fitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public FitBookBuilder() {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"        fitBook \u003d new FitBook();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    public FitBookBuilder(FitBook fitBook) {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        this.fitBook \u003d fitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * Adds a new {@code Client} to the {@code FitBook} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public FitBookBuilder withClient(Client client) {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        fitBook.addClient(client);","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    public FitBook build() {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        return fitBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jundatan":34}},{"path":"src/test/java/seedu/fitbook/testutil/client/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.client;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_TWO;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_CALORIE_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_CALORIE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GOAL_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_GOAL_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.FitBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"public class TypicalClients {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"OliviaJHL"},"content":"            .withPhone(\"94351253\").withAppointments(\"13-02-1999 18:30\").withWeight(\"50.0\").withGender(\"M\")","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"            .withGoal(\"lose-weight\").withTags(\"friends\").withCalorie(\"2310\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withWeight(\"50.0\").withGender(\"M\")","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"            .withGoal(\"lose-weight\").withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"            .withAppointments(\"13-02-2020 18:30\", \"14-01-2021 18:30\").withCalorie(\"2424\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"            .withWeight(\"50.0\").withGender(\"M\").withGoal(\"lose-weight\").withCalorie(\"2111\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"OliviaJHL"},"content":"            .withWeight(\"50.0\").withGender(\"M\").withAppointments(\"12-12-2020 18:30\")","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"            .withGoal(\"lose-weight\").withTags(\"friends\").withCalorie(\"2103\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"            .withWeight(\"50.0\").withGender(\"M\").withGoal(\"lose-weight\").withCalorie(\"0000\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"            .withWeight(\"50.0\").withGender(\"M\").withGoal(\"lose-weight\").withCalorie(\"2154\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"            .withWeight(\"50.0\").withGender(\"M\").withGoal(\"lose-weight\").withCalorie(\"3432\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withWeight(\"20.0\")","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"            .withGender(\"M\").withGoal(\"lose-weight\").withCalorie(\"2134\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"            .withWeight(\"20.0\").withGender(\"M\").withGoal(\"lose-weight\").withCalorie(\"2657\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"            .withWeight(VALID_WEIGHT_AMY).withGender(VALID_GENDER_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"            .withTags(VALID_TAG_FRIEND).withAppointments(VALID_APPOINTMENT_DATE_ONE)","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"            .withGoal(VALID_GOAL_AMY).withCalorie(VALID_CALORIE_AMY).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"            .withWeight(VALID_WEIGHT_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"            .withAppointments(VALID_APPOINTMENT_DATE_ONE, VALID_APPOINTMENT_DATE_TWO).withGoal(VALID_GOAL_BOB)","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"            .withTags(VALID_TAG_FRIEND).withCalorie(VALID_CALORIE_BOB).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"     * Returns an {@code FitBook} with all the typical clients.","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"    public static FitBook getTypicalFitBook() {","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"        FitBook ab \u003d new FitBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"            ab.addClient(client);","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"OliviaJHL":2,"jundatan":3,"dfordarius":68,"-":27}},{"path":"src/test/java/seedu/fitbook/testutil/routine/EditRoutineDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand.EditRoutineDescriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":" * A utility class to help with building EditRoutineDescriptor objects.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"public class EditRoutineDescriptorBuilder {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    private static final String DEFAULT_EXERCISE \u003d \"Plank\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    private static final int DEFAULT_EXERCISE_INDEX \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    private EditRoutineDescriptor descriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    public EditRoutineDescriptorBuilder() {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        descriptor \u003d new EditRoutineDescriptor();","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    public EditRoutineDescriptorBuilder(EditRoutineDescriptor descriptor) {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        this.descriptor \u003d new EditRoutineDescriptor(descriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     * Returns an {@code EditRoutineDescriptor} with fields containing {@code routine}\u0027s details","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public EditRoutineDescriptorBuilder(Routine routine) {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        descriptor \u003d new EditRoutineDescriptor();","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        descriptor.setRoutineName(routine.getRoutineName());","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        descriptor.setExerciseIndex(Index.fromOneBased(DEFAULT_EXERCISE_INDEX));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        descriptor.setExercise(new Exercise(DEFAULT_EXERCISE));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     * Sets the {@code RoutineName} of the {@code EditRoutineDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    public EditRoutineDescriptorBuilder withRoutineName(String routineName) {","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        descriptor.setRoutineName(new RoutineName(routineName));","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"     * Sets the {@code Index} of the {@code EditRoutineDescriptor} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    public EditRoutineDescriptorBuilder withExercisesIndex(String index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        Index currIndex \u003d Index.fromOneBased(Integer.parseInt(index));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        descriptor.setExerciseIndex(currIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     * Sets the {@code Exercise} of the {@code EditRoutineDescriptor} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    public EditRoutineDescriptorBuilder withExercise(String exercise) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        Exercise newExercise \u003d new Exercise(exercise);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        descriptor.setExercise(newExercise);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    public EditRoutineDescriptor build() {","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        return descriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jundatan":66}},{"path":"src/test/java/seedu/fitbook/testutil/routine/FitBookExerciseRoutineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" * A utility class to help with building FitBookExerciseRoutine objects.","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":" *     {@code FitBookExerciseRoutine ab \u003d new FitBookExerciseRoutineBuilder()","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":" *     .withRoutine(\"Strength\", \"training\").build();}","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"public class FitBookExerciseRoutineBuilder {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    private FitBookExerciseRoutine fitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    public FitBookExerciseRoutineBuilder() {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"        fitBookExerciseRoutine \u003d new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public FitBookExerciseRoutineBuilder(FitBookExerciseRoutine fitBookExerciseRoutine) {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        this.fitBookExerciseRoutine \u003d fitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     * Adds a new {@code Routine} to the {@code FitBookExerciseRoutine} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    public FitBookExerciseRoutineBuilder withRoutine(Routine routine) {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        fitBookExerciseRoutine.addRoutine(routine);","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    public FitBookExerciseRoutine build() {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        return fitBookExerciseRoutine;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jundatan":35}},{"path":"src/test/java/seedu/fitbook/testutil/routine/RoutineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Exercise;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.RoutineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.util.SampleExerciseRoutineDataUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * A utility class to help with building Routine objects.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"public class RoutineBuilder {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    public static final String DEFAULT_ROUTINE_NAME \u003d \"Cardio\";","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    private RoutineName routineName;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    private List\u003cExercise\u003e exercises;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     * Creates a {@code RoutineBuilder} with the default details.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    public RoutineBuilder() {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        routineName \u003d new RoutineName(DEFAULT_ROUTINE_NAME);","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"     * Initializes the RoutineBuilder with the data of {@code routineToCopy}.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    public RoutineBuilder(Routine routineToCopy) {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        routineName \u003d routineToCopy.getRoutineName();","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        exercises \u003d new ArrayList\u003c\u003e(routineToCopy.getExercises());","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     * Sets the {@code RoutineName} of the {@code Routine} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    public RoutineBuilder withRoutineName(String routineName) {","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        this.routineName \u003d new RoutineName(routineName);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"     * Parses the {@code exercises} into a {@code Set\u003cExercise\u003e}","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"     * and set it to the {@code Routine} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    public RoutineBuilder withExercises(String ... exercises) {","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        this.exercises \u003d SampleExerciseRoutineDataUtil.getExerciseList(exercises);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"    public Routine build() {","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        return new Routine(routineName, exercises);","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jundatan":59}},{"path":"src/test/java/seedu/fitbook/testutil/routine/RoutineUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_EXERCISE_NUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.parser.CliSyntax.PREFIX_ROUTINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.AddRoutineCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.logic.commands.EditRoutineCommand.EditRoutineDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * A utility class for Routine.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"public class RoutineUtil {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     * Returns an add routine command string for adding the {@code routine}.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    public static String getAddRoutineCommand(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"        return AddRoutineCommand.COMMAND_WORD + \" \" + getRoutineDetails(routine);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * Returns the part of command string for the given {@code routine}\u0027s details.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public static String getRoutineDetails(Routine routine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        sb.append(PREFIX_ROUTINE + routine.getRoutineName().routineName + \" \");","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        routine.getExercises().stream().forEach(","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"                s -\u003e sb.append(PREFIX_EXERCISE + s.exerciseName + \" \")","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        );","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     * Returns the part of command string for the given {@code EditRoutineDescriptor}\u0027s details for exercise change.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    public static String getEditRoutineDescriptorDetailsForExercise(EditRoutineDescriptor descriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        descriptor.getExercise()","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"                .ifPresent(routineName -\u003e sb.append(PREFIX_EXERCISE).append(routineName.exerciseName).append(\" \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        descriptor.getExerciseIndex()","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"                .ifPresent(routineName -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"                        sb.append(PREFIX_EXERCISE_NUMBER).append(routineName.getOneBased()));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     * Returns the part of command string for the given {@code EditRoutineDescriptor}\u0027s details for Routine name change.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    public static String getEditRoutineDescriptorDetailsForRoutineName(EditRoutineDescriptor descriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        descriptor.getRoutineName()","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"                .ifPresent(routineName -\u003e sb.append(PREFIX_ROUTINE).append(routineName.routineName).append(\" \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jundatan":57}},{"path":"src/test/java/seedu/fitbook/testutil/routine/TypicalRoutines.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"package seedu.fitbook.testutil.routine;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_PUSHUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_EXERCISE_SITUP;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_CARDIO;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"import static seedu.fitbook.logic.commands.CommandTestUtil.VALID_ROUTINE_NAME_STRENGTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.FitBookExerciseRoutine;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.fitbook.model.routines.Routine;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":" * A utility class containing a list of {@code Routine} objects to be used in tests.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"public class TypicalRoutines {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public static final Routine JUMP \u003d new RoutineBuilder().withRoutineName(\"Jumps\")","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"            .withExercises(\"3x10 Jumping Jacks\", \"4x5 1km Run\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    public static final Routine STRENGTH \u003d new RoutineBuilder().withRoutineName(\"Strength\")","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"            .withExercises(\"3x10 Dumbbell Curls\", \"4x5 Bench Press\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    public static final Routine LEGS \u003d new RoutineBuilder().withRoutineName(\"Legs Exercises\")","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"            .withExercises(\"3x10 Squats\", \"4x5 Deadlift\", \"5x10 10kg forward lunges\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    // Manually added","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    public static final Routine HIIT \u003d new RoutineBuilder().withRoutineName(\"High intensity interval training\")","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"            .withExercises(\"3x10mins leg raise\", \"4x5mins plank\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public static final Routine ARMS \u003d new RoutineBuilder().withRoutineName(\"Arms training\")","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"            .withExercises(\"3x10 Push ups\", \"4x5 Dumbbell curls\", \"2x100 Pull ups\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    // Manually added - Routine\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    public static final Routine CARDIO \u003d new RoutineBuilder().withRoutineName(VALID_ROUTINE_NAME_CARDIO)","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"            .withExercises(VALID_EXERCISE_PUSHUP).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    public static final Routine STR \u003d new RoutineBuilder().withRoutineName(VALID_ROUTINE_NAME_STRENGTH)","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"            .withExercises(VALID_EXERCISE_PUSHUP, VALID_EXERCISE_SITUP).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    private TypicalRoutines() {} // prevents instantiation","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * Returns an {@code FitBookExerciseRoutine} with all the typical routines.","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public static FitBookExerciseRoutine getTypicalFitBookExerciseRoutine() {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        FitBookExerciseRoutine er \u003d new FitBookExerciseRoutine();","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"        for (Routine routine : getTypicalRoutines()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"            er.addRoutine(routine);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        return er;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    public static List\u003cRoutine\u003e getTypicalRoutines() {","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(JUMP, STRENGTH, LEGS));","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jundatan":55}},{"path":"src/test/java/seedu/fitbook/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"dfordarius":1,"-":34}},{"path":"src/test/java/seedu/fitbook/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package seedu.fitbook.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import static seedu.fitbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"import seedu.fitbook.MainApp;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"dfordarius":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"\u003c?import seedu.fitbook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"dfordarius":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"\u003cfx:root type\u003d\"seedu.fitbook.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"dfordarius":1,"-":5}}]
