[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W13-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W13-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"* TutorPro is an application designed specifically for private tutors to help them manage their student information effectively. The app offers a Graphical User Interface (GUI) with easy-to-use menus and buttons, as well as a Command Line Interface (CLI) for faster access. ","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"* With TutorPro, tutors can keep track of student details, lesson schedules, homework assignments, and progress all in one central location. The app streamlines workflow, making tutoring experiences more efficient, whether for a few or many students. ","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"* The [TutorPro product website](https://ay2223s2-cs2103t-w13-4.github.io/tp/) provides detailed documentation, and the project is part of the se-education.org initiative, based on the AddressBook-Level3 project.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yufannnn":4,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"run {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    archiveFileName \u003d \u0027TutorPro.jar\u0027","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yufannnn":5,"-":71}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"Yufannnn"},"content":"      \u003c!-- Checks that the non-homework type operator is at the next line in a line wrap.","lastModifiedDate":"2023-02-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"Yufannnn"},"content":"      \u003c!-- Checks that the homework type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2023-02-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":2,"-":432}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"You can reach us at these emails :","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"* `e0773591@u.nus.edu` - Zhu Yufan","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"* `e0774823@u.nus.edu` - Niu Boqian","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"* `e0727234@u.nus.edu` - Sze Jian Cheng","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"* `@u.nus.edu`","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"### Zhu Yufan","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"\u003cimg src\u003d\"images/yufannnn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"[[homepage](https://blog.zyf.ninja/)]","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"[[github](https://github.com/Yufannnn)]","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"[[portfolio](team/yufannnn.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"* Role: UI Design, Task Manager","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"* Responsibilities: manage and distribute tasks, design UI,  implementation, Developer Guide, UML Diagrams","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"### Niu Boqian","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"\u003cimg src\u003d\"images/nbqian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"[[github](https://github.com/NBQian)]","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"[[portfolio](team/nbqian.md)]","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"* Role: coder","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"* Responsibilities: code","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"### Sze Jian Cheng","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"\u003cimg src\u003d\"images/szejiancheng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"[[github](http://github.com/szejiancheng)] [[portfolio](https://github.com/szejiancheng?tab\u003drepositories)]","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"* Role: coder","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"* Responsibilities: UML diagrams, implementation, and providing snacks","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"fahim-tazz"},"content":"### Muhammad Fahim Tajwar","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"fahim-tazz"},"content":"\u003cimg src\u003d\"images/fahim-tazz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"fahim-tazz"},"content":"[[github](http://github.com/fahim-tazz)]","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"fahim-tazz"},"content":"[[portfolio](team/fahim-tazz.md)]","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"fahim-tazz"},"content":"* Role: coder","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"fahim-tazz"},"content":"* Responsibilities: Developer Guide, software design, implementation","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"fahim-tazz":6,"szejiancheng":5,"NBQian":6,"Yufannnn":12,"-":25}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"1. Tag the repo with the version number. e.g. `v1.2`","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"NBQian":2,"-":77}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-W13-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"szejiancheng"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"szejiancheng"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"the \u003c/div\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"szejiancheng"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"szejiancheng"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"szejiancheng"},"content":"* stores the address book data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"szejiancheng"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"szejiancheng"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-W13-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Yufannnn"},"content":"### Quick Access Buttons on Each Student Card","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"Yufannnn"},"content":"#### Motivation for Quick Access Buttons","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"When a `tutor` wants to view a `student\u0027s` profile, homework, lessons, or exams, they need to use the commandbax. However, the current ResultDisplay is purely text-based, making it difficult and time-consuming for `tutors` to access and digest the relevant information.","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"Yufannnn"},"content":"To address this issue, we propose the implementation of Quick Access Buttons on each `Student Card`. These buttons will provide tutors with easy and quick access to the relevant `student` information. By simply clicking on the appropriate button, tutors can view the `student\u0027s` profile, homework, lessons, or exams in a more informative and visually appealing way, complete with multiple diagrams or charts.","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"Yufannnn"},"content":"The inclusion of these Quick Access Buttons will not only improve the user experience for `tutors` but also save them valuable time that can be better spent on other aspects of their teaching. With the information at their fingertips, `tutors` will be better equipped to make informed decisions and provide personalized guidance to each student.","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"Yufannnn"},"content":"#### Implementation of Quick Access Buttons","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"Yufannnn"},"content":"Given below is the partial class diagram of `Ui` component related to Quick Access Buttons on the Student Card.","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"Yufannnn"},"content":"\u003cimg src\u003d\"images/UiQuickAccessButton.png\" width\u003d\"600\" height\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"Yufannnn"},"content":"Each `Student Card` contains exactly four buttons `Profile`, `Homework`, `Lessons`, and `Exams`. Each of the buttons can generate a Special `DetailedContent`, which will be displayed in the `DetialedInfoSection` on the `MainWindow`","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"Yufannnn"},"content":"Given below is the partial class diagram of `Ui` component related to Detailed Information Section on the Student Card.","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"Yufannnn"},"content":"\u003cimg src\u003d\"images/UiDetailedInfoSectionDiagram.png\" width\u003d\"1000\" height\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"Yufannnn"},"content":"The `DetailedInfoSection` is made up of a `HeaderBar`, displaying the type of the current `DetailedInfoSection` and the name of the `Student` to which the information belongs. `DetailedContent`component has five subclasses extending it, namely `WelcomeContent`, `ProfileContent`,  `GeneralHomeworkContent`,  `GeneralLessonsContent`, `GeneralExamsContent`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"Yufannnn"},"content":"Given below is the partial class diagram of `Ui` component related to Profile Content.","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"Yufannnn"},"content":"\u003cimg src\u003d\"images/UiProfileContent.png\" width\u003d\"600\" height\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"Yufannnn"},"content":"Given below is the sequence diagram showing how the action of clicking the `ProfileButton` of a `Student` creates a new `ProfileContent` for that particular student","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"Yufannnn"},"content":"\u003cimg src\u003d\"images/ProfileClickSequenceDiagram.png\" width\u003d\"1200\" height\u003d\"600\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"Yufannnn"},"content":"**How the Profile Section is created when Profile Button is Clicked**","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"Yufannnn"},"content":"1. Based on the graph above, after the user clicks the view profile button, `StudentCard` calls `Student#getFullName()`, which then calls `Name#getFirstName()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"Yufannnn"},"content":"2. `StudentCard` then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, which then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, with the `FirstName` returned from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"Yufannnn"},"content":"3. `DetailedInfoSection` creates a new `HeaderBar` and sets it to be the new `DetailedHeaderBar` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"Yufannnn"},"content":"4. `StudentCard` will create a new `ProfileContent` with the `Student`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"Yufannnn"},"content":"5. The `ProfileContent` constructor calls `Student#getName()`, `Student#getPhone()`, `Student#getEmail()`, `Student#getAddress()` which returns the name, phone, email, and address of the student.","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"Yufannnn"},"content":"6. `StudentCard` then calls `DetailedInfoSection#SetDeatiledContent()`, which then calls `DetailedInfoSection#SetDeatiledContent()`, with the `ProfileContent` created from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":"7. `DetailedInfoSection` sets it to be the new `DetailedContent` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"`GeneralHomeworkContent`,  `GeneralLessonsContent`, `GeneralExamsContent` are further extended by subclasses:","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"Yufannnn"},"content":"* `EmptyHomeworkContent` and `FilledHomeworkContent` extend `GeneralHomeworkContent`, representing the situation where the `Student` has `Homework` and where the `Student` has no `Homework` respectively. ","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"  Specifically, `FilledHomeworkContent` has `HomeworkListPanel` with `HomeworkCard` on it, showing all homework of a `Student` and a `HomeworkPieChart`, reflecting the ratio of completed and pending `Homework` of  a `Student.`","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"   Given below is the partial class diagram of `Ui` component related to Filled Homework Content.","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"  \u003cimg src\u003d\"images/UiFilledHomeworkContent.png\" width\u003d\"600\" height\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"Yufannnn"},"content":"  Given below is the sequence diagram showing how the action of clicking the `HomeworkButton` of a `Student` creates a new `HomeworkContent` for that particular student","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"Yufannnn"},"content":"  \u003cimg src\u003d\"images/HomeworkClickSequenceDiagram.png\" width\u003d\"1200\" height\u003d\"600\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"Yufannnn"},"content":"  **How the Filled Homework Section is created when Homework Button is Clicked**","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"Yufannnn"},"content":"  1. Based on the graph above, after the user clicks the view homework button, `StudentCard` calls `Student#getFullName()`, which then calls `Name#getFirstName()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"Yufannnn"},"content":"  2. `StudentCard` then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, which then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, with the `FirstName` returned from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"Yufannnn"},"content":"  3. `DetailedInfoSection` creates a new `HeaderBar` and sets it to be the new `DetailedHeaderBar` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"Yufannnn"},"content":"  4. If `Student` does not have `Homework`, `StudentCard` will create a new `EmptyHomeorkContent` with the `Student`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"Yufannnn"},"content":"  5. If `Student` have `Homework`, `StudentCard` will create a new `FilledHomeorkContent` with the `Student`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"Yufannnn"},"content":"  6. The `FilledHomeworkContent` constructor calls `Student#getName()`, `Student#getHomeworkPiechartData()`, `Student#HomeworkList()`, which returns the name, Pie Chart Data, and Homework List.","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"Yufannnn"},"content":"  7. `StudentCard` then calls `DetailedInfoSection#SetDeatiledContent()`, which then calls `DetailedInfoSection#SetDeatiledContent()`, with the `EmptyHomeworkContent`  or `FilledHomeworkContent`created from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"Yufannnn"},"content":"  8. `DetailedInfoSection` sets it to be the new `DetailedContent` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"Yufannnn"},"content":"* `EmptyLessonsContent` and `FilledLessonsContent` extend `GeneralLessonsContent`, representing the situation where the `Student` has `Lessons` and where the `Student` has no `Lessons` respectively. ","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"Yufannnn"},"content":"  Specifically, `FilledLessonsContent` has `PastLessonsListPanel` with `LessonCard` on it, showing all past `Lessons` of a `Student` and `UpcomingLessonsListPanel` with `LessonCard` on it, showing all upcoming `Lessons` of a `Student`.","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"Yufannnn"},"content":"   Given below is the partial class diagram of `Ui` component related to Filled Lessons Content.","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"Yufannnn"},"content":"  \u003cimg src\u003d\"images/UiFilledLessonsContent.png\" width\u003d\"600\" height\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"Yufannnn"},"content":"  Given below is the sequence diagram showing how the action of clicking the `LessonsButton` of a `Student` creates a new `LessonsContent` for that particular student","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"Yufannnn"},"content":"  \u003cimg src\u003d\"images/LessonsClickSequenceDiagram.png\" width\u003d\"1200\" height\u003d\"600\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"Yufannnn"},"content":"  **How the Filled Lessons Section is created when Lessons Button is Clicked**","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"Yufannnn"},"content":"  1. Based on the graph above, after the user clicks the view lessons button, `StudentCard` calls `Student#getFullName()`, which then calls `Name#getFirstName()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"Yufannnn"},"content":"  2. `StudentCard` then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, which then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, with the `FirstName` returned from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"Yufannnn"},"content":"  3. `DetailedInfoSection` creates a new `HeaderBar` and sets it to be the new `DetailedHeaderBar` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"Yufannnn"},"content":"  4. If `Student` does not have `Lessons`, `StudentCard` will create a new `EmptyLessonsContent` with the `Student`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"Yufannnn"},"content":"  5. If `Student` have `Lessons`, `StudentCard` will create a new `FilledLessonsContent` with the `Student`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"Yufannnn"},"content":"  6. The `FilledLessonsContent` constructor calls `Student#getName()`, `Student#getPastLessonsList()`, `Student#UpcomingLessonsList()`, which returns the name, Past Lessons List, and Upcoming Lessons List.","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"Yufannnn"},"content":"  7. `StudentCard` then calls `DetailedInfoSection#SetDeatiledContent()`, which then calls `DetailedInfoSection#SetDeatiledContent()`, with the `EmptyLessonsContent`  or `FilledLessonsContent`created from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"Yufannnn"},"content":"  8. `DetailedInfoSection` sets it to be the new `DetailedContent` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"Yufannnn"},"content":"* `EmptyExamsContent` and `FilledExamsContent` extend `GeneralExamsContent`, representing the situation where the `Student` has `Exams` and where the `Student` has no `Exams` respectively. ","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"Yufannnn"},"content":"  Specifically, `FilledExamsContent` has `AllExamsListPanel` with `ExamCard` on it, showing all past `Exams` of a `Student` and `UpcomingLessonsListPanel` with `ExamCard` on it, showing the most recent three upcoming `Exams` of a `Student`","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"Yufannnn"},"content":"  Given below is the partial class diagram of `Ui` component related to Filled Exams Content","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"Yufannnn"},"content":"  \u003cimg src\u003d\"images/UiFilledExamsContent.png\" width\u003d\"600\" height\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"Yufannnn"},"content":"  Given below is the sequence diagram showing how the action of clicking the `ExamsButton` of a `Student` creates a new `ExamsContent` for that particular student","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"Yufannnn"},"content":"  \u003cimg src\u003d\"images/ExamsClickSequenceDiagram.png\" width\u003d\"1200\" height\u003d\"600\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"Yufannnn"},"content":"  **How the Filled Exams Section is created when Exams Button is Clicked**","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"Yufannnn"},"content":"  1. Based on the graph above, after the user clicks the view exams button, `StudentCard` calls `Student#getFullName()`, which then calls `Name#getFirstName()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"Yufannnn"},"content":"  2. `StudentCard` then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, which then calls `DetailedInfoSection#SetDeatiledHeaderBar()`, with the `FirstName` returned from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"Yufannnn"},"content":"  3. `DetailedInfoSection` creates a new `HeaderBar` and sets it to be the new `DetailedHeaderBar` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"Yufannnn"},"content":"  4. If `Student` does not have `Exams`, `StudentCard` will create a new `EmptyExamsContent` with the `Student`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"Yufannnn"},"content":"  5. If `Student` have `Exams`, `StudentCard` will create a new `FilledExamsContent` with the `Student`. ","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"Yufannnn"},"content":"  6. The `FilledExamssContent` constructor calls `Student#getName()`, `Student#ExamsList()`, `Student#UpcomingExamsList()`, which returns the name, All Exams List, Upcoming Exams List.","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"Yufannnn"},"content":"  7. `StudentCard` then calls `DetailedInfoSection#SetDeatiledContent()`, which then calls `DetailedInfoSection#SetDeatiledContent()`, with the `EmptyExamsContent`  or `FilledExamsContent`created from the previous calls. ","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"Yufannnn"},"content":"  8. `DetailedInfoSection` sets it to be the new `DetailedContent` to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"Yufannnn"},"content":"The following activity diagram summarises how the UI responds to an click button command.","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"Yufannnn"},"content":"\u003cimg src\u003d\"images/ClickButtonActivityDiagram.png\" height\u003d\"600\" width\u003d\"1000\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"Yufannnn"},"content":"####  Alternatives considered for Quick Access Buttons","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"Yufannnn"},"content":"While designing the Quick Access Buttons on the Student Card, several alternatives were considered to ensure an optimal user experience.","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"Yufannnn"},"content":"* **Alternative 1 :** One alternative that was considered was to have a pop-up window for each button click event. However, this alternative was ultimately rejected due to its potential drawbacks.","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"Yufannnn"},"content":"  * Pros: ","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"Yufannnn"},"content":"    * Provides a clear and separate window to display the detailed information for each button.","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"Yufannnn"},"content":"    * Can be designed to provide a consistent layout and structure for displaying the detailed information.","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"Yufannnn"},"content":"    * Can be a good choice if there is a need to provide a lot of detailed information for each button click.","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"Yufannnn"},"content":"    * Can be helpful in providing a larger viewing area for the detailed information.","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"Yufannnn"},"content":"  * Cons: ","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"Yufannnn"},"content":"    * Requires additional user interaction to close the pop-up window, which can be cumbersome and time-consuming.","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"Yufannnn"},"content":"    * Can be less optimized for a command-line interface (CLI), where users prefer quick and direct access to information.","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"Yufannnn"},"content":"    * Can lead to a cluttered user interface if multiple pop-up windows are open at the same time.","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"Yufannnn"},"content":"    * Can require additional resources and time to design and implement compared to other alternatives.","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"NBQian"},"content":"### Create Lesson feature","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"NBQian"},"content":"the `new-lesson` command adds a Lesson (specified with student name, lesson name, start time, and end time) to a particular Student. Given below is an example usage scenario and how the command works:","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"NBQian"},"content":"Step1. The user inputs a `new-lesson` command with parameters name/John, lesson/Math lesson, start/2023-05-01 1200, and end/2023-05-01 1400. When Logic is called upon to execute a command, it uses the AddressBookParser class to parse the user command. The parser recognises the command words and calls the CreateLessonCommandParser.","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"NBQian"},"content":"Step2. The `CreateLessonCommandParser` recognises each parameter passed in.","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"NBQian"},"content":"Step3. `CreateLessonCommandParser` creates a new `CreateLessonCommand` with appropriate parameters.","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"NBQian"},"content":"Step4. `CreateLessonCommand` is executed by LogicManager, creating a new Lesson object and then calls the `addLesson` method in Student","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"NBQian"},"content":"Step5. The Student calls the `addLesson` method in the UniqueLessonList, adding the Lesson to his list of Lessons.","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"NBQian"},"content":"Step6. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"NBQian"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute(\"new-lesson name/John lesson/Math lesson start/2023-05-01 1200 end/2023-05-01 1400\") API call.","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"NBQian"},"content":"\u003cimg src\u003d\"images/CreateLessonSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"NBQian"},"content":"The following activity diagram summarizes what happens when a user executes a CreateLessonCommand:","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"NBQian"},"content":"\u003cimg src\u003d\"images/CreateLessonAD.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"fahim-tazz"},"content":"### School and GradeLevel Fields","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"fahim-tazz"},"content":"#### v1.2 Implementation of School and GradeLevel Fields","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"fahim-tazz"},"content":"As of v1.2, School and GradeLevel fields are parsed via the `AddCommandParser` class. `AddCommandParser#parse` method ","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"fahim-tazz"},"content":"checks whether the prefixes for school and/or gradelevel are present, and if present, then adds it to ","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"fahim-tazz"},"content":"the new student as `Tags`. They are then treated throughout the program the same as other `Tags`.","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"fahim-tazz"},"content":"It has been implemented this way for its ease of implementation, and because it shows the School and GradeLevel ","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"fahim-tazz"},"content":"in the Students list view, without having to open up the student\u0027s profile.","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"fahim-tazz"},"content":"#### New Implementation of School and GradeLevel Fields in v1.3","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"fahim-tazz"},"content":"In v1.3, we are adding School and GradeLevel as separate fields in the Student\u0027s profile, instead of `Tags`. These will ","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"fahim-tazz"},"content":"show up in the Student Profile view.","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"fahim-tazz"},"content":"This is to reduce the number of Tags placed under each Student\u0027s name in the Students list view, making it look less ","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"fahim-tazz"},"content":"cluttered.","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":327,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"fahim-tazz"},"content":"Our users:","lastModifiedDate":"2023-03-14"},{"lineNumber":432,"author":{"gitId":"fahim-tazz"},"content":"* have a need to manage any number of students","lastModifiedDate":"2023-03-14"},{"lineNumber":433,"author":{"gitId":"fahim-tazz"},"content":"* prefer offline desktop apps over other types","lastModifiedDate":"2023-03-14"},{"lineNumber":434,"author":{"gitId":"fahim-tazz"},"content":"* can type commands fast","lastModifiedDate":"2023-03-14"},{"lineNumber":435,"author":{"gitId":"fahim-tazz"},"content":"* prefer typing, with some mouse control","lastModifiedDate":"2023-03-14"},{"lineNumber":436,"author":{"gitId":"fahim-tazz"},"content":"* prefer a more robust, aesthetic GUI, as opposed to a verbose list of students on a command line","lastModifiedDate":"2023-03-14"},{"lineNumber":437,"author":{"gitId":"fahim-tazz"},"content":"* are reasonably comfortable using CLI","lastModifiedDate":"2023-03-14"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"fahim-tazz"},"content":"**Value proposition**: Manage students\u0027 academic progress faster and more conveniently than a typical mouse/GUI driven app","lastModifiedDate":"2023-03-14"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"fahim-tazz"},"content":"Priorities: ","lastModifiedDate":"2023-03-14"},{"lineNumber":445,"author":{"gitId":"fahim-tazz"},"content":"- High (must have) - `* * *`","lastModifiedDate":"2023-03-14"},{"lineNumber":446,"author":{"gitId":"fahim-tazz"},"content":"- Medium (nice to have) - `* *` ","lastModifiedDate":"2023-03-14"},{"lineNumber":447,"author":{"gitId":"fahim-tazz"},"content":"- Low (unlikely to have) - `*`","lastModifiedDate":"2023-03-14"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":449,"author":{"gitId":"fahim-tazz"},"content":"| Category                                                                   | Priority | As a …​ | I want to …​                                                                                          | So that I can…​                                                                                                                                                                                 |","lastModifiedDate":"2023-03-14"},{"lineNumber":450,"author":{"gitId":"fahim-tazz"},"content":"|:---------------------------------------------------------------------------|----------|---------|-------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-14"},{"lineNumber":451,"author":{"gitId":"fahim-tazz"},"content":"| Track Student Homework                                                     | `* * *`  | tutor   | Mark homework as completed/uncompleted/half-completed.                                                | I can track what needs to be done in order to give reminders to student.                                                                                                                        |","lastModifiedDate":"2023-03-14"},{"lineNumber":452,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* * *`  | tutor   | Assign tutor homework deadlines.                                                                      | I can track what homework I have assigned to the tutee and when it needs to be done by to follow the lesson plan                                                                                |","lastModifiedDate":"2023-03-14"},{"lineNumber":453,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* * *`  | tutor   | Assign school homework deadlines                                                                      | I can track what homework the school has assigned my students, to help them finish and when.                                                                                                    |","lastModifiedDate":"2023-03-14"},{"lineNumber":454,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* * *`  | tutor   | View completed and uncompleted homework                                                               | I can separately track pending homework.                                                                                                                                                        |","lastModifiedDate":"2023-03-14"},{"lineNumber":455,"author":{"gitId":"fahim-tazz"},"content":"| Store and access students’ personal info (addresses, personal particulars) | `* *`    | tutor   | Click open a “view profile” button beside a Student to look at his/her home address and phone number. | I can have easy access to the students’ information.                                                                                                                                            |","lastModifiedDate":"2023-03-14"},{"lineNumber":456,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* *`    | tutor   | Update my students\u0027 personal information as needed                                                    | I can keep my records accurate and up-to-date                                                                                                                                                   |","lastModifiedDate":"2023-03-14"},{"lineNumber":457,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* * *`  | tutor   | Click a button with a student’s name to view his/her upcoming school exams/assignments                | Change my lesson plans accordingly to prepare the student for such tasks. For example, change all sessions of a week to Chemistry lessons to prepare the student for an upcoming Chemistry exam |","lastModifiedDate":"2023-03-14"},{"lineNumber":458,"author":{"gitId":"fahim-tazz"},"content":"| Lesson Plan Management                                                     | `* * *`  | tutor   | Create lesson plans for future classes                                                                | I can always plan ahead of my lessons                                                                                                                                                           |","lastModifiedDate":"2023-03-14"},{"lineNumber":459,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* *`    | tutor   | View my students’ lesson history                                                                      | I can recap past lessons with my student.                                                                                                                                                       |","lastModifiedDate":"2023-03-14"},{"lineNumber":460,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* *`    | tutor   | View the date and time of a past lesson                                                               | I can see how many lessons I’ve had over a period of time                                                                                                                                       |","lastModifiedDate":"2023-03-14"},{"lineNumber":461,"author":{"gitId":"fahim-tazz"},"content":"| Track Student Exams                                                        | `* *`    | tutor   | Assign and view school exam dates to my students                                                      | I can keep track of how long my student has to prepare for an exam.                                                                                                                             |","lastModifiedDate":"2023-03-16"},{"lineNumber":462,"author":{"gitId":"fahim-tazz"},"content":"|                                                                            | `* *`    | tutor   | View all my students\u0027 exams at a glance                                                               | I can provide extra instruction to students that have exams coming up.                                                                                                                          |","lastModifiedDate":"2023-03-16"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":465,"author":{"gitId":"fahim-tazz"},"content":"*{As at v1.2, more to be added}*","lastModifiedDate":"2023-03-14"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"fahim-tazz"},"content":"## Use cases","lastModifiedDate":"2023-03-16"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"fahim-tazz"},"content":"### Add a new student","lastModifiedDate":"2023-03-16"},{"lineNumber":471,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":472,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":473,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":474,"author":{"gitId":"fahim-tazz"},"content":"1.  User enters new-student command with NAME, ADDRESS, PHONE, EMAIL and (optionally) School, Grade Level.","lastModifiedDate":"2023-03-16"},{"lineNumber":475,"author":{"gitId":"fahim-tazz"},"content":"2.  TutorPro adds the new student to the student list.","lastModifiedDate":"2023-03-16"},{"lineNumber":476,"author":{"gitId":"fahim-tazz"},"content":"    ","lastModifiedDate":"2023-03-16"},{"lineNumber":477,"author":{"gitId":"fahim-tazz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":479,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":481,"author":{"gitId":"fahim-tazz"},"content":"* 2a. A student with the same name already exists.","lastModifiedDate":"2023-03-16"},{"lineNumber":482,"author":{"gitId":"fahim-tazz"},"content":"    * 2a1. TutorPro notifies the user of a duplicate.","lastModifiedDate":"2023-03-16"},{"lineNumber":483,"author":{"gitId":"fahim-tazz"},"content":"    * 2a2. TutorPro continues to take input.","lastModifiedDate":"2023-03-16"},{"lineNumber":484,"author":{"gitId":"fahim-tazz"},"content":"      ","lastModifiedDate":"2023-03-16"},{"lineNumber":485,"author":{"gitId":"Yufannnn"},"content":"    ","lastModifiedDate":"2023-03-23"},{"lineNumber":486,"author":{"gitId":"fahim-tazz"},"content":"    Use case continues at step 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":487,"author":{"gitId":"fahim-tazz"},"content":"    ","lastModifiedDate":"2023-03-16"},{"lineNumber":488,"author":{"gitId":"fahim-tazz"},"content":"* 2b. The wrong formatting was used.","lastModifiedDate":"2023-03-16"},{"lineNumber":489,"author":{"gitId":"fahim-tazz"},"content":"    * 2b1. TutorPro notifies the user of wrong formatting.","lastModifiedDate":"2023-03-16"},{"lineNumber":490,"author":{"gitId":"fahim-tazz"},"content":"    * 2b2. TutorPro continues to take input.","lastModifiedDate":"2023-03-16"},{"lineNumber":491,"author":{"gitId":"fahim-tazz"},"content":"      ","lastModifiedDate":"2023-03-16"},{"lineNumber":492,"author":{"gitId":"Yufannnn"},"content":"    ","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"fahim-tazz"},"content":"    Use case continues at step 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":494,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":495,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":496,"author":{"gitId":"fahim-tazz"},"content":"### Delete a student","lastModifiedDate":"2023-03-16"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"fahim-tazz"},"content":"2.  TutorPro shows a list of persons","lastModifiedDate":"2023-03-16"},{"lineNumber":502,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"Yufannnn"},"content":"    ","lastModifiedDate":"2023-03-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":521,"author":{"gitId":"fahim-tazz"},"content":"### Update a student\u0027s particulars","lastModifiedDate":"2023-03-16"},{"lineNumber":522,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":523,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":524,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":525,"author":{"gitId":"fahim-tazz"},"content":"1.  User enters new-student command with NAME, ADDRESS, PHONE, EMAIL and (optionally) School, Grade Level.","lastModifiedDate":"2023-03-16"},{"lineNumber":526,"author":{"gitId":"fahim-tazz"},"content":"2.  TutorPro adds the new student to the student list.","lastModifiedDate":"2023-03-16"},{"lineNumber":527,"author":{"gitId":"fahim-tazz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":528,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":529,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":530,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":531,"author":{"gitId":"fahim-tazz"},"content":"* 2a. The wrong formatting was used.","lastModifiedDate":"2023-03-16"},{"lineNumber":532,"author":{"gitId":"fahim-tazz"},"content":"    * 2b1. TutorPro notifies the user of wrong formatting.","lastModifiedDate":"2023-03-16"},{"lineNumber":533,"author":{"gitId":"fahim-tazz"},"content":"    * 2b2. TutorPro continues to take input.","lastModifiedDate":"2023-03-16"},{"lineNumber":534,"author":{"gitId":"fahim-tazz"},"content":"      Use case continues at step 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":535,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":536,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":537,"author":{"gitId":"fahim-tazz"},"content":"### View a student\u0027s profile","lastModifiedDate":"2023-03-16"},{"lineNumber":538,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":539,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":540,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":541,"author":{"gitId":"fahim-tazz"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-03-16"},{"lineNumber":542,"author":{"gitId":"fahim-tazz"},"content":"2.  TutorPro shows a list of persons","lastModifiedDate":"2023-03-16"},{"lineNumber":543,"author":{"gitId":"fahim-tazz"},"content":"3.  User clicks on **Profile** button of a particular student","lastModifiedDate":"2023-03-16"},{"lineNumber":544,"author":{"gitId":"fahim-tazz"},"content":"4.  TutorPro displays the profile of that student.","lastModifiedDate":"2023-03-16"},{"lineNumber":545,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":546,"author":{"gitId":"fahim-tazz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":547,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":548,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":549,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":550,"author":{"gitId":"fahim-tazz"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":551,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":552,"author":{"gitId":"fahim-tazz"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":553,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":554,"author":{"gitId":"fahim-tazz"},"content":"### Assign homework for a student","lastModifiedDate":"2023-03-16"},{"lineNumber":555,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":556,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":557,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":558,"author":{"gitId":"fahim-tazz"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-03-16"},{"lineNumber":559,"author":{"gitId":"fahim-tazz"},"content":"2.  TutorPro shows a list of persons","lastModifiedDate":"2023-03-16"},{"lineNumber":560,"author":{"gitId":"fahim-tazz"},"content":"3.  User enters assign-homework command with student name and homework title.","lastModifiedDate":"2023-03-16"},{"lineNumber":561,"author":{"gitId":"fahim-tazz"},"content":"4.  TutorPro assigns the homework to that particular student.","lastModifiedDate":"2023-03-16"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":565,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":567,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":569,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":571,"author":{"gitId":"fahim-tazz"},"content":"* 3a. The given name does not exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":572,"author":{"gitId":"fahim-tazz"},"content":"* 3b. The user used invalid command format.","lastModifiedDate":"2023-03-16"},{"lineNumber":573,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":574,"author":{"gitId":"fahim-tazz"},"content":"    * 3*1. TutorPro shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":575,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":576,"author":{"gitId":"fahim-tazz"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2023-03-16"},{"lineNumber":577,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":578,"author":{"gitId":"fahim-tazz"},"content":"### View a Student\u0027s Homework","lastModifiedDate":"2023-03-16"},{"lineNumber":579,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":580,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":581,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":582,"author":{"gitId":"fahim-tazz"},"content":"1.  User enters view-homework command with a student\u0027s name.","lastModifiedDate":"2023-03-16"},{"lineNumber":583,"author":{"gitId":"fahim-tazz"},"content":"2.  TutorPro shows all the completed/incomplete homework of that student.","lastModifiedDate":"2023-03-16"},{"lineNumber":584,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":585,"author":{"gitId":"fahim-tazz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":586,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":587,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":588,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":589,"author":{"gitId":"fahim-tazz"},"content":"* 1a. Alternatively, the user clicks on the **Homework** button next to the student name.","lastModifiedDate":"2023-03-16"},{"lineNumber":590,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":591,"author":{"gitId":"fahim-tazz"},"content":"  Use case resumes at 2.","lastModifiedDate":"2023-03-16"},{"lineNumber":592,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":593,"author":{"gitId":"fahim-tazz"},"content":"### Mark a Homework as DONE","lastModifiedDate":"2023-03-16"},{"lineNumber":594,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":595,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":596,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":597,"author":{"gitId":"fahim-tazz"},"content":"1. User clicks on **Homeworks** button of a student.","lastModifiedDate":"2023-03-16"},{"lineNumber":598,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro shows that student\u0027s homeworks.","lastModifiedDate":"2023-03-16"},{"lineNumber":599,"author":{"gitId":"fahim-tazz"},"content":"3. User enters mark-homework with student name, and homework index.","lastModifiedDate":"2023-03-16"},{"lineNumber":600,"author":{"gitId":"fahim-tazz"},"content":"4. TutorPro updates the status of that homework as DONE.","lastModifiedDate":"2023-03-16"},{"lineNumber":601,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":602,"author":{"gitId":"fahim-tazz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":603,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":604,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":605,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":606,"author":{"gitId":"fahim-tazz"},"content":"* 2a. The student\u0027s homework list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":607,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":608,"author":{"gitId":"fahim-tazz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":609,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":610,"author":{"gitId":"fahim-tazz"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":611,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":612,"author":{"gitId":"fahim-tazz"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":613,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":614,"author":{"gitId":"fahim-tazz"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2023-03-16"},{"lineNumber":615,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":616,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":617,"author":{"gitId":"fahim-tazz"},"content":"### Mark a Homework as NOT DONE","lastModifiedDate":"2023-03-16"},{"lineNumber":618,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":619,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":620,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":621,"author":{"gitId":"fahim-tazz"},"content":"1. User clicks on **Homeworks** button of a student.","lastModifiedDate":"2023-03-16"},{"lineNumber":622,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro shows that student\u0027s homeworks.","lastModifiedDate":"2023-03-16"},{"lineNumber":623,"author":{"gitId":"fahim-tazz"},"content":"3. User enters unmark-homework with student name, and homework index.","lastModifiedDate":"2023-03-16"},{"lineNumber":624,"author":{"gitId":"fahim-tazz"},"content":"4. TutorPro updates the status of that homework as NOT DONE.","lastModifiedDate":"2023-03-16"},{"lineNumber":625,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":626,"author":{"gitId":"fahim-tazz"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":627,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":628,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":629,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":630,"author":{"gitId":"fahim-tazz"},"content":"* 2a. The student\u0027s homework list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":631,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":632,"author":{"gitId":"fahim-tazz"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":633,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":634,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":638,"author":{"gitId":"fahim-tazz"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2023-03-16"},{"lineNumber":639,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":640,"author":{"gitId":"fahim-tazz"},"content":"### View a particular Student\u0027s Lessons ","lastModifiedDate":"2023-03-16"},{"lineNumber":641,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":642,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":643,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":644,"author":{"gitId":"fahim-tazz"},"content":"1. User clicks on **Lessons** button of a student.","lastModifiedDate":"2023-03-16"},{"lineNumber":645,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro shows that student\u0027s past and upcoming Lessons.","lastModifiedDate":"2023-03-16"},{"lineNumber":646,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":647,"author":{"gitId":"fahim-tazz"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":648,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":649,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":650,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":651,"author":{"gitId":"fahim-tazz"},"content":"* 2a. The student\u0027s lesson list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":652,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":653,"author":{"gitId":"fahim-tazz"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":654,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":655,"author":{"gitId":"fahim-tazz"},"content":"### View all Students\u0027 Lesson history","lastModifiedDate":"2023-03-16"},{"lineNumber":656,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":657,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":658,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":659,"author":{"gitId":"fahim-tazz"},"content":"1. User enters view-lesson command without any arguments.","lastModifiedDate":"2023-03-16"},{"lineNumber":660,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro shows all students\u0027 past and upcoming Lessons.","lastModifiedDate":"2023-03-16"},{"lineNumber":661,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":662,"author":{"gitId":"fahim-tazz"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":663,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":664,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":665,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":666,"author":{"gitId":"fahim-tazz"},"content":"* 2a. None of the students have any lessons.","lastModifiedDate":"2023-03-16"},{"lineNumber":667,"author":{"gitId":"fahim-tazz"},"content":"  * 2a1. TutorPro shows an empty Lesson list.","lastModifiedDate":"2023-03-16"},{"lineNumber":668,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":669,"author":{"gitId":"fahim-tazz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":670,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":671,"author":{"gitId":"fahim-tazz"},"content":"### Add Lesson","lastModifiedDate":"2023-03-16"},{"lineNumber":672,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":673,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":674,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":675,"author":{"gitId":"fahim-tazz"},"content":"1. User enters new-lesson command with student name, lesson title and start and end times.","lastModifiedDate":"2023-03-16"},{"lineNumber":676,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro adds the lesson to that student\u0027s Lesson list..","lastModifiedDate":"2023-03-16"},{"lineNumber":677,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":678,"author":{"gitId":"fahim-tazz"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":679,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":680,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":681,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":682,"author":{"gitId":"fahim-tazz"},"content":"* 1a. The named student does not exist","lastModifiedDate":"2023-03-16"},{"lineNumber":683,"author":{"gitId":"fahim-tazz"},"content":"  * 1a1. TutorPro returns an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":684,"author":{"gitId":"fahim-tazz"},"content":"  ","lastModifiedDate":"2023-03-16"},{"lineNumber":685,"author":{"gitId":"fahim-tazz"},"content":"    Use case resumes at 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":686,"author":{"gitId":"fahim-tazz"},"content":"  ","lastModifiedDate":"2023-03-16"},{"lineNumber":687,"author":{"gitId":"fahim-tazz"},"content":"* 1b. The start/end time is in the past.","lastModifiedDate":"2023-03-16"},{"lineNumber":688,"author":{"gitId":"fahim-tazz"},"content":"  * 1b1. TutorPro returns an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":689,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":690,"author":{"gitId":"fahim-tazz"},"content":"    Use case resumes at 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":691,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":692,"author":{"gitId":"fahim-tazz"},"content":"* 1c. The start/end time format is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":693,"author":{"gitId":"fahim-tazz"},"content":"    * 1c1. TutorPro returns an error message showing the accepted time formats.","lastModifiedDate":"2023-03-16"},{"lineNumber":694,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":695,"author":{"gitId":"fahim-tazz"},"content":"      Use case resumes at 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":696,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":697,"author":{"gitId":"fahim-tazz"},"content":"### Add Exam","lastModifiedDate":"2023-03-16"},{"lineNumber":698,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":699,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":700,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":701,"author":{"gitId":"fahim-tazz"},"content":"1. User enters new-exam command with student name, exam title and start and end times.","lastModifiedDate":"2023-03-16"},{"lineNumber":702,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro adds the exam to that student\u0027s exam list..","lastModifiedDate":"2023-03-16"},{"lineNumber":703,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":704,"author":{"gitId":"fahim-tazz"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":705,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":706,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":707,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":708,"author":{"gitId":"fahim-tazz"},"content":"* 1a. The named student does not exist","lastModifiedDate":"2023-03-16"},{"lineNumber":709,"author":{"gitId":"fahim-tazz"},"content":"    * 1a1. TutorPro returns an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":710,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":711,"author":{"gitId":"fahim-tazz"},"content":"      Use case resumes at 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":712,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":713,"author":{"gitId":"fahim-tazz"},"content":"* 1b. The start/end time is in the past.","lastModifiedDate":"2023-03-16"},{"lineNumber":714,"author":{"gitId":"fahim-tazz"},"content":"    * 1b1. TutorPro returns an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":715,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":716,"author":{"gitId":"fahim-tazz"},"content":"      Use case resumes at 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":717,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":718,"author":{"gitId":"fahim-tazz"},"content":"* 1c. The start/end time format is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":719,"author":{"gitId":"fahim-tazz"},"content":"    * 1c1. TutorPro returns an error message showing the accepted time formats.","lastModifiedDate":"2023-03-16"},{"lineNumber":720,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":721,"author":{"gitId":"fahim-tazz"},"content":"      Use case resumes at 1.","lastModifiedDate":"2023-03-16"},{"lineNumber":722,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":723,"author":{"gitId":"fahim-tazz"},"content":"### View a particular Student\u0027s Exams","lastModifiedDate":"2023-03-16"},{"lineNumber":724,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":725,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":726,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":727,"author":{"gitId":"fahim-tazz"},"content":"1. User clicks on **Exams** button of a student.","lastModifiedDate":"2023-03-16"},{"lineNumber":728,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro shows that student\u0027s past and upcoming Exams.","lastModifiedDate":"2023-03-16"},{"lineNumber":729,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":730,"author":{"gitId":"fahim-tazz"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":731,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":732,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":733,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":734,"author":{"gitId":"fahim-tazz"},"content":"* 2a. The student\u0027s exam list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":735,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":736,"author":{"gitId":"fahim-tazz"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":738,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"fahim-tazz"},"content":"### View all Students\u0027 Exams","lastModifiedDate":"2023-03-16"},{"lineNumber":741,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":742,"author":{"gitId":"fahim-tazz"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":743,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":744,"author":{"gitId":"fahim-tazz"},"content":"1. User enters view-exam command without any arguments.","lastModifiedDate":"2023-03-16"},{"lineNumber":745,"author":{"gitId":"fahim-tazz"},"content":"2. TutorPro shows all students\u0027 past and upcoming exams.","lastModifiedDate":"2023-03-16"},{"lineNumber":746,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":747,"author":{"gitId":"fahim-tazz"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":748,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":749,"author":{"gitId":"fahim-tazz"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":750,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":751,"author":{"gitId":"fahim-tazz"},"content":"* 2a. None of the students have any lessons.","lastModifiedDate":"2023-03-16"},{"lineNumber":752,"author":{"gitId":"fahim-tazz"},"content":"    * 2a1. TutorPro shows an empty Lesson list.","lastModifiedDate":"2023-03-16"},{"lineNumber":753,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":754,"author":{"gitId":"fahim-tazz"},"content":"      Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":755,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":756,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":757,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"fahim-tazz"},"content":"4.  Commands should be easy to remember(close to English words) and not cryptic for non-tech users to remember.","lastModifiedDate":"2023-03-16"},{"lineNumber":763,"author":{"gitId":"fahim-tazz"},"content":"5.  Commands should not be verbose.","lastModifiedDate":"2023-03-16"},{"lineNumber":764,"author":{"gitId":"fahim-tazz"},"content":"6.  Results should be easy to read for non-tech users (e.g. should not look like long, cluttered log files).","lastModifiedDate":"2023-03-16"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":766,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fahim-tazz":294,"szejiancheng":10,"NBQian":25,"Yufannnn":138,"-":356}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"TutorPro is a **desktop app designed to help private tutors manage their student information effectively**. With TutorPro, tutors can easily keep track of their students\u0027 addresses, contact details, lessons, homework, and progress, all in one place. This app is optimized for use via a Graphical User Interface (GUI), allowing tutors to interact with the app using easy-to-understand buttons and menus. However, TutorPro also provides a Command Line Interface (CLI) for those who prefer a faster way of getting things done. Whether you\u0027re managing a handful of students or hundreds, TutorPro can help you streamline your workflow and make your tutoring experience more efficient.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"## Table of Contents","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"- [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"  * [Glossary](#glossary)","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"- [GUI](#gui)","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"  * [Quick Access Buttons and Detailed Information Section](#quick-access-buttons-and-detailed-information-section)","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    + [Profile Page](#profile-page)","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    + [Homework Page](#homework-page)","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    + [Lessons Page](#lessons-page)","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    + [Exams Page](#exams-page)","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"- [Main Entities](#main-entities)","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"  * [Homework](#homework)","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"  * [Lesson](#lesson)","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"  * [Exam](#exam)","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"- [Commands](#commands)","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"  * [How to interpret the Command format](#how-to-interpret-the-command-format)","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"  * [Profile Commands](#profile-commands)","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    + [Create a new Student Profile](#create-a-new-student-profile)","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    + [View a Student Profile](#view-a-student-profile)","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    + [Update Student Information](#update-student-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    + [Delete a Student Profile](#delete-a-student-profile)","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"  * [Homework Commands](#homework-commands)","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    + [Assign Homework to a Student](#assign-homework-to-a-student)","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    + [View the Homework of Students](#view-the-homework-of-students)","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    + [Delete Homework from a Student](#delete-homework-from-a-student)","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    + [Mark the Homework of a Student as Done](#mark-the-homework-of-a-student-as-done)","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    + [Unmark Homework of a Student as Undone](#unmark-homework-of-a-student-as-undone)","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    + [Update Homework of a Student](#update-homework-of-a-student)","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"  * [Lessons Commands](#lessons-commands)","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    + [Create a New Lesson Plan for the Upcoming Lesson](#create-a-new-lesson-plan-for-the-upcoming-lesson)","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    + [View Lessons](#view-lessons)","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    + [Delete a Lesson from a student](#delete-a-lesson-from-a-student)","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    + [Update a Lesson](#update-a-lesson)","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"  * [Exam Commands](#exam-commands)","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    + [Add an Exam to be tracked](#add-an-exam-to-be-tracked)","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    + [Remove an exam](#remove-an-exam)","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    + [View exams tracked by TutorPro](#view-exams-tracked-by-tutorpro)","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    + [Edit exam details](#edit-exam-details)","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"- [Unique Mechanisms](#unique-mechanisms)","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"  * [Search by Name Mechanism](#search-by-name-mechanism)","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"  * [Schedule Clash Detection Mechanism](#schedule-clash-detection-mechanism)","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    + [Schedule Clash Detection Mechanism when Adding a New Lesson](#schedule-clash-detection-mechanism-when-adding-a-new-lesson)","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"      - [With respect to existing lessons](#with-respect-to-existing-lessons)","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"      - [With respect to existing exams](#with-respect-to-existing-exams)","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    + [Schedule Clash Detection Mechanism when Adding a New Exam](#schedule-clash-detection-mechanism-when-adding-a-new-exam)","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"      - [With respect to existing lessons](#with-respect-to-existing-lessons-1)","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"      - [With respect to existing exams](#with-respect-to-existing-exams-1)","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"  * [Duplicate Detection Mechanism](#duplicate-detection-mechanism)","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    + [Duplicate Homework Detection Mechanism](#duplicate-homework-detection-mechanism)","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    + [Duplicate Lesson Detection Mechanism](#duplicate-lesson-detection-mechanism)","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    + [Duplicate Exam Detection Mechanism](#duplicate-exam-detection-mechanism)","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"- [Summary](#summary)","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"  * [List of Commands](#list-of-commands)","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"  * [List of Prefixes](#list-of-prefixes)","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"  * [Supported date-time formats](#supported-date-time-formats)","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"\u003csmall\u003e\u003ci\u003e\u003ca href\u003d\u0027http://ecotrust-canada.github.io/markdown-toc/\u0027\u003eTable of contents generated with markdown-toc\u003c/a\u003e\u003c/i\u003e\u003c/small\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"1. Ensure you have Java `11` or above installed on your Computer.","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"2. Download the latest `TutorPro.jar` from [here](https://github.com/AY2223S2-CS2103T-W13-4/tp/releases).","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"4. Open a command terminal, `cd` into the folder in which you put the jar file, and use the `java -jar TutorPro.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"   A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"fahim-tazz"},"content":"6. Refer to the [Commands](#commands) below for details of each command.","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"### Glossary","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"You may come across some terms you don\u0027t understand in the user guide.","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"The following table provides clarification of the terms commonly used in TutorPro.","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"|       Term       | Description                                                                                                                                                                                                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"|:----------------:|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"| **Alphanumeric** | Digits and letters only. For example, `AB3`, `TutorPro`, `coco123`, and `2103` are alphanumeric. `#01-04`, `email@domain.com`, and `white    spaces` are not.                                                       |","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"|  **Attribute**   | Words that follow prefixes to describe properties, states, characteristics, and traits. Examples are price, weight, name, and order status.                                                                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"|   **Command**    | A command is a specific instruction you can give to TutorPro to perform an action. You can view the list of commands available [here](#list-of-commands).                                                           |","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"|     **CLI**      | Command-Line Interface (CLI) receives commands from a user in the form of lines of text. It refers to the input text box in this context.                                                                           |","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"|     **GUI**      | GUI stands for Graphical User Interface. It refers to the display window of the TutorPro application.                                                                                                               |","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"|    **Index**     | The index of the contact or item in the display list for contacts/items.                                                                                                                                            |","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"|   **Integer**    | Whole number                                                                                                                                                                                                        |","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"|  **Parameter**   | A parameter refers to the information you need to give to your command such that it can execute an action based on that information.                                                                                |","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"|    **Prefix**    | A prefix indicates the kind of information you are keying in. You can view the list of prefixes available [here](#list-of-prefixes).                                                                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"|  **Whitespace**  | An empty character, or a placeholder character.                                                                                                                                                                     |","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"|   **Student**    | A `Student` whom the user (who is a tutor) teaches                                                                                                                                                                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"|   **Homework**   | A `Homework` assignment whom the user (who is a tutor) has assigned to a `Student`                                                                                                                                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"|    **Lesson**    | A `Lesson` that the user has scheduled with a `Student`                                                                                                                                                             |","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"|     **Exam**     | An `Exam` that a Student is scheduled to sit for                                                                                                                                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"## GUI","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"When you first run the app, you may see a display window pop up similar to the one below. We call this window the **Main Window**. ","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"![Starting Display Window](images/GUI.jpg)","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"* The **Command Box** on the left bottom refers to the text field where you can type in all your commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"* The **Display List for Students** on the left top refers to the section where all the students are displayed.","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"* The **Detailed Information Section** on the right refers to the section where more specific information of the profile, homework, lessons, or exams of a particular student is displayed.","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"You may enter the following commands in the Command Box to see how the Display List changes:","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"* `list` lists all students.","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"* `delete 1` deletes the student with index 1.","lastModifiedDate":"2023-04-01"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"* `view-homework` displays all the homework from all students.","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"You may also click the quick access buttons one each student card to see how the Detailed Information Section changes.","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"      ","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"### Quick Access Buttons and Detailed Information Section","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"Upon launching the application or executing a command, a welcome page will be displayed in the Detailed Information Section. ","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"Each Student card has four buttons, which are profile, homework, lessons, and exams. When a user clicks on any of the buttons, the corresponding information will be presented in the Detailed Information Section.","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":":information_source: **Why is the date and time displayed in two different formats?**","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"The date and time format in the Detailed Information Section is different from the one used in the `view` commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"This is purposely done to make the information more distinct and make sure you never get confused.","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"#### Profile Page","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"Upon clicking the Profile Button, the Detailed Information section will be refreshed and show the detailed particulars of the student, including the student\u0027s full name, phone number, address, and email.","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"Yufannnn"},"content":"![Starting Display Window](images/Profile.jpg)","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"Yufannnn"},"content":"#### Homework Page","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"Yufannnn"},"content":"Upon clicking the Profile Button, the Detailed Information section will be refreshed and show the detailed homework information of the student. ","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"It includes a homework list, showing all the homework information.","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"The icon on the left of each homework represents its status,","lastModifiedDate":"2023-04-04"},{"lineNumber":146,"author":{"gitId":"Yufannnn"},"content":"with the tick icon being `completed` and the cross-icon being `pending`.","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"Yufannnn"},"content":"It also has a pie chart which represents a ratio between completed and pending homework.","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"Yufannnn"},"content":"![Starting Display Window](images/Homework.jpg)","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"Yufannnn"},"content":"#### Lessons Page","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Yufannnn"},"content":"Upon clicking the Lesson Button,","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"the Detailed Information section will be refreshed and show the detailed Lessons Information for the student.","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"Yufannnn"},"content":"It includes a past lessons list, showing all the past lesson information and an upcoming lessons list,","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"Yufannnn"},"content":"showing all the upcoming lessons.","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"Yufannnn"},"content":"![Starting Display Window](images/Lessons.jpg)","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** Lesson Lists do not have indexes to avoid confusion with the indexes of the lessons in the original list.","lastModifiedDate":"2023-04-07"},{"lineNumber":162,"author":{"gitId":"Yufannnn"},"content":"If you want to see the index of the lessons in the list,","lastModifiedDate":"2023-04-07"},{"lineNumber":163,"author":{"gitId":"Yufannnn"},"content":"you can use the `view-lessons` command to view the list of lessons.","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** This page only shows the most basic information of the lessons. If you want to see more details of the lessons, you can use the `view-lessons` command to view the list of lessons.","lastModifiedDate":"2023-04-07"},{"lineNumber":166,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":"#### Exams Page","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Yufannnn"},"content":"Upon clicking the Exam Button,","lastModifiedDate":"2023-04-04"},{"lineNumber":170,"author":{"gitId":"Yufannnn"},"content":"the Detailed Information section will be refreshed and show the detailed Exams Information for the student.","lastModifiedDate":"2023-04-04"},{"lineNumber":171,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"Yufannnn"},"content":"It includes a past exams list, showing all the past exams information and all the upcoming exams list,","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"Yufannnn"},"content":"showing all the upcoming exams. ","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"Yufannnn"},"content":"![Starting Display Window](images/Exams.jpg)","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** Exam Lists do not have indexes to avoid confusion with the indexes of the exams in the original list.","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"Yufannnn"},"content":"If you want to see the index of the exams in the list,","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"Yufannnn"},"content":"you can use the `view-exams` command to view the list of exams.","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":181,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** This page only shows the most basic information of the exams. If you want to see more details of the exams, you can use the `view-exams` command to view the list of exams.","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"Yufannnn"},"content":"## Main Entities","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"Yufannnn"},"content":"TutorPro allows you to easily handle three main entities of your students: `Homework`, `Lesson`, and `Exam`.","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"Yufannnn"},"content":"TutorPro also has unique mechanisms to handle duplicate entities and potential clashes between entities.","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"Yufannnn"},"content":"Please refer to the [#Duplicate Detection Mechanism](#duplicate-detection-mechanism) and [#Schedule Clash Detection Mechanism](#schedule-clash-detection-mechanism) sections for more details.","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"Yufannnn"},"content":"### Homework","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"Yufannnn"},"content":"A `Homework` is an assignment that you\u0027ve assigned to a `Student`.","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":"It has a description, a deadline, and a status.","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"Yufannnn"},"content":"The status can be either `pending` or `completed`.","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"### Lesson","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"Yufannnn"},"content":"A `Lesson` is a scheduled meeting between you and a `Student`.","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"It has a name, a start time, an end time, and a status.","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"The status can be either `done` or `not done`.","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"### Exam","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"An `Exam` is a scheduled exam that a `Student` is going to sit for.","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"We assume that the exams are conducted by the school, instead of you.","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"Yufannnn"},"content":"It has a name, a start time, an end time, and a status, an optional weightage, and an optional grade.","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"Yufannnn"},"content":"## Commands","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"Yufannnn"},"content":"### How to interpret the Command format","lastModifiedDate":"2023-04-06"},{"lineNumber":206,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"fahim-tazz"},"content":"* The terms in `UPPER_CASE` are placeholders need to replace with your n values. For example, in the command `new-student name/NAME`, `NAME` is a placeholder that can be substituted with a specific name, such as `new-student n/John Doe`.","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"Yufannnn"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"fahim-tazz"},"content":"  e.g. `[name/STUDENT_NAME]…​` can be used as ` ` (i.e. 0 times), `name/John Doe`, `name/John Doe name/Jane Doe` etc.","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"Yufannnn"},"content":"* Extraneous parameters for commands that don\u0027t take in parameters","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"Yufannnn"},"content":"  (such as `help`, `exit,` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"Yufannnn"},"content":"* Unless otherwise specified, the order of prefixes doesn\u0027t matter.\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"fahim-tazz"},"content":"  e.g. if the command specifies `name/NAME phone/PHONE_NUMBER`, `phone/PHONE_NUMBER name/NAME` is also acceptable unless stated otherwise in a particular command.","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"Yufannnn"},"content":"* Parameters can be in any order.","lastModifiedDate":"2023-04-06"},{"lineNumber":216,"author":{"gitId":"Yufannnn"},"content":"* TutorPro allows you to execute commands on students in the entire student list, instead of just the displayed list. ","lastModifiedDate":"2023-04-06"},{"lineNumber":217,"author":{"gitId":"Yufannnn"},"content":"  For example: ","lastModifiedDate":"2023-04-06"},{"lineNumber":218,"author":{"gitId":"Yufannnn"},"content":"  - currently, the displaying list only shows one student, `Bernice Yu`.","lastModifiedDate":"2023-04-06"},{"lineNumber":219,"author":{"gitId":"Yufannnn"},"content":"    ","lastModifiedDate":"2023-04-06"},{"lineNumber":220,"author":{"gitId":"Yufannnn"},"content":"    ![Entire List](images/entireList1.jpg)","lastModifiedDate":"2023-04-06"},{"lineNumber":221,"author":{"gitId":"Yufannnn"},"content":"  - However, you can still execute commands to `John Doe` even though he is not displayed in the list.","lastModifiedDate":"2023-04-06"},{"lineNumber":222,"author":{"gitId":"Yufannnn"},"content":"    ","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"Yufannnn"},"content":"    ![Entire List](images/entireList2.jpg)","lastModifiedDate":"2023-04-06"},{"lineNumber":224,"author":{"gitId":"Yufannnn"},"content":"  - This is because `John Doe` is in the original student list, and the command will be executed on the original student list.","lastModifiedDate":"2023-04-06"},{"lineNumber":225,"author":{"gitId":"Yufannnn"},"content":"      ","lastModifiedDate":"2023-04-04"},{"lineNumber":226,"author":{"gitId":"Yufannnn"},"content":"  - ![Entire List](images/entireList3.jpg)","lastModifiedDate":"2023-04-06"},{"lineNumber":227,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":228,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":229,"author":{"gitId":"Yufannnn"},"content":"### Profile Commands","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"Yufannnn"},"content":":information_source: **Why TutorPro uses search by index for all the Profile Commands instead of the unique search by name mechanism?**\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"Yufannnn"},"content":"For profile commands, especially `delete` and `update-info` command, that may potentially change the name of the student, TutorPro uses search by index instead of search by name to avoid any confusion that may be caused by the name change. ","lastModifiedDate":"2023-04-08"},{"lineNumber":232,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"fahim-tazz"},"content":"#### Create a new Student Profile","lastModifiedDate":"2023-04-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"fahim-tazz"},"content":"Creates a new profile for a student, given the student’s name.","lastModifiedDate":"2023-04-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"fahim-tazz"},"content":"Format: `new-student [name/STUDENT_NAME] [address/STUDENT_ADDRESS] [phone/PHONE] [email/EMAIL] [school/SCHOOL] [level/GRADE_LEVEL]`","lastModifiedDate":"2023-03-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"fahim-tazz"},"content":"* SCHOOL and GRADE_LEVEL are optional.","lastModifiedDate":"2023-03-16"},{"lineNumber":240,"author":{"gitId":"fahim-tazz"},"content":"* SCHOOL and GRADE_LEVEL consist of numbers and letters only (no symbols or spaces).","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"fahim-tazz"},"content":"Example:","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"fahim-tazz"},"content":"* `new-student name/John Doe address/21 Prince George’s Park email/jdoe@gmail.com phone/12345678 school/ACJC level/sec8`","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"fahim-tazz"},"content":"![new-student.png](images/new-student.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"fahim-tazz"},"content":"#### View a Student Profile","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":249,"author":{"gitId":"fahim-tazz"},"content":"Displays one or many students\u0027 profiles, given parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"fahim-tazz"},"content":"Format `view-profile [name/STUDENTS_NAME]`","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"fahim-tazz"},"content":"* Shows a list of students that match the given `STUDENT_NAME`","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"fahim-tazz"},"content":"* If no `STUDENT_NAME` is given, then shows all students.","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":255,"author":{"gitId":"fahim-tazz"},"content":"Example:","lastModifiedDate":"2023-04-08"},{"lineNumber":256,"author":{"gitId":"fahim-tazz"},"content":"* `view-profile` Displays all students in the command line.","lastModifiedDate":"2023-04-08"},{"lineNumber":257,"author":{"gitId":"fahim-tazz"},"content":"* `view-profile name/John` Displays all students that match the name `John`.","lastModifiedDate":"2023-04-08"},{"lineNumber":258,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":259,"author":{"gitId":"fahim-tazz"},"content":"![view-profile.png](images/view-profile.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"Yufannnn"},"content":"#### Update Student Information","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"fahim-tazz"},"content":"Updates the student\u0027s information, given the student\u0027s label, field to change, and updated field value ","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":265,"author":{"gitId":"Yufannnn"},"content":"Format: `update-info [index/STUDENT INDEX] [field/NEW_INFO] ...`","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":267,"author":{"gitId":"Yufannnn"},"content":"Examples:","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"Yufannnn"},"content":"* `update-info index/1 phone/12345678` Changes the phone number of the student at index 1 to `12345678`.","lastModifiedDate":"2023-04-08"},{"lineNumber":269,"author":{"gitId":"Yufannnn"},"content":"* `update-info index/2 address/Block 414` Changes the address of the student at index 2 to `Block 414`.","lastModifiedDate":"2023-04-08"},{"lineNumber":270,"author":{"gitId":"Yufannnn"},"content":"* `update-info index/3 name/John` Changes the name of the student at index 3 to `John`.","lastModifiedDate":"2023-04-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"fahim-tazz"},"content":"* `field/NEW_INFO` is to be replaced by one of","lastModifiedDate":"2023-04-08"},{"lineNumber":273,"author":{"gitId":"fahim-tazz"},"content":"  * `name/`","lastModifiedDate":"2023-04-08"},{"lineNumber":274,"author":{"gitId":"fahim-tazz"},"content":"  * `phone/` ","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"fahim-tazz"},"content":"  * `address/`","lastModifiedDate":"2023-04-08"},{"lineNumber":276,"author":{"gitId":"fahim-tazz"},"content":"  * `school/` ","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"fahim-tazz"},"content":"  * `level/`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":278,"author":{"gitId":"fahim-tazz"},"content":"  And their respective new values.","lastModifiedDate":"2023-04-08"},{"lineNumber":279,"author":{"gitId":"fahim-tazz"},"content":"* At least one updated parameter has to be present.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":281,"author":{"gitId":"fahim-tazz"},"content":"![Update Info](images/update-info.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"fahim-tazz"},"content":"  :bulb: **Tip:** You can edit multiple fields in a student\u0027s profile at once by using several of the above prefixes.","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"Yufannnn"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":286,"author":{"gitId":"fahim-tazz"},"content":"* `update-info index/1 name/John` Changes the name of the student at index 1 to `John`.","lastModifiedDate":"2023-04-08"},{"lineNumber":287,"author":{"gitId":"Yufannnn"},"content":"* `update-info index/2 name/John address/Block 414` Changes the name and address of a student at index 2 to `John` and `Block 414` respectively.","lastModifiedDate":"2023-04-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"fahim-tazz"},"content":"#### Delete a Student Profile","lastModifiedDate":"2023-04-08"},{"lineNumber":290,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"fahim-tazz"},"content":"Deletes the student\u0027s profile, given the index of the student.","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":293,"author":{"gitId":"Yufannnn"},"content":"Format: `delete [index/STUDENT_INDEX]`","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"fahim-tazz"},"content":"Examples:","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"fahim-tazz"},"content":"* `delete index/1` Deletes the first profile in the student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":297,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":298,"author":{"gitId":"fahim-tazz"},"content":"![Delete Student](images/delete.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"Yufannnn"},"content":"### Homework Commands","lastModifiedDate":"2023-03-31"},{"lineNumber":301,"author":{"gitId":"Yufannnn"},"content":"#### Assign Homework to a Student","lastModifiedDate":"2023-03-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"Yufannnn"},"content":"Create a homework assignment with a deadline for multiple students.","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"Yufannnn"},"content":"Format: `new-homework [name/STUDENT_NAME]... [homework/HOMEWORK_NAME] [deadline/DEADLINE]`","lastModifiedDate":"2023-04-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"Yufannnn"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor.","lastModifiedDate":"2023-03-04"},{"lineNumber":308,"author":{"gitId":"Yufannnn"},"content":"* The `DEADLINE` must be in the format given in the support date and time formats\u0027 appendix.","lastModifiedDate":"2023-04-04"},{"lineNumber":309,"author":{"gitId":"Yufannnn"},"content":"* The `DEADLINE` must be in the future.","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Yufannnn"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":312,"author":{"gitId":"Yufannnn"},"content":"* `new-homework name/John homework/listening comprehension ex1 deadline/2023-05-30 2359` adds the assignment `listening comprehension ex1` to the student named `John. The deadline is 02 Dec 2023 at 23:25.","lastModifiedDate":"2023-04-04"},{"lineNumber":313,"author":{"gitId":"Yufannnn"},"content":"* `new-homework name/Donald homework/english essay deadline/2023-05-14 2359` adds the assignment `English Essay` to the student named `Donald`. The deadline is 14 May 2023 at 23:59.","lastModifiedDate":"2023-04-04"},{"lineNumber":314,"author":{"gitId":"Yufannnn"},"content":"* `new-homework name/Kai Ze name/Muhammad homework/math ex1 deadline/2023-05-23 2359` adds the assignment `math ex1` to the student named `Kai Ze` and `Muhammad`. The deadline is 23 May 2023 at 23:59.","lastModifiedDate":"2023-04-08"},{"lineNumber":315,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":316,"author":{"gitId":"Yufannnn"},"content":"![New Homework](images/new-homework.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":317,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":318,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can use the `view-homework` command to view the list of homework the student currently has.","lastModifiedDate":"2023-04-04"},{"lineNumber":319,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":320,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can view the supported date and time formats [here](#supported-date-time-formats).","lastModifiedDate":"2023-04-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":323,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME should appear at least once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":326,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** HOMEWORK_INDEX","lastModifiedDate":"2023-04-08"},{"lineNumber":328,"author":{"gitId":"Yufannnn"},"content":"and DEADLINE should all only appear exactly once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":329,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** A student can have multiple homework with the same name,","lastModifiedDate":"2023-04-04"},{"lineNumber":331,"author":{"gitId":"Yufannnn"},"content":"even if they have different deadlines.","lastModifiedDate":"2023-04-04"},{"lineNumber":332,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"Yufannnn"},"content":"#### View the Homework of Students","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"Yufannnn"},"content":"Displays a list of homework with the ability to filter by student name and homework status.","lastModifiedDate":"2023-03-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"Yufannnn"},"content":"Format: `view-homework [name/STUDENT_NAME]... [status/STATUS]`","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"Yufannnn"},"content":"* By default, all homework will be displayed if no name or status parameter is provided.","lastModifiedDate":"2023-04-04"},{"lineNumber":340,"author":{"gitId":"Yufannnn"},"content":"* To view homework for specific students, specify the name using `name/STUDENT_NAME`s.","lastModifiedDate":"2023-03-30"},{"lineNumber":341,"author":{"gitId":"fahim-tazz"},"content":"* To view homework with a specific status, specify the status using `status/STATUS`.","lastModifiedDate":"2023-03-16"},{"lineNumber":342,"author":{"gitId":"Yufannnn"},"content":"* It is possible to filter by both student name and status simultaneously.","lastModifiedDate":"2023-03-04"},{"lineNumber":343,"author":{"gitId":"Yufannnn"},"content":"* The available status values are `completed` and `pending`.","lastModifiedDate":"2023-03-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"Yufannnn"},"content":"* `view-homework` displays a list of all homework.","lastModifiedDate":"2023-03-28"},{"lineNumber":347,"author":{"gitId":"Yufannnn"},"content":"* `view-homework name/John` displays homework for a student named `John`.","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"Yufannnn"},"content":"* `view-homework status/completed` displays all completed homework from all students.","lastModifiedDate":"2023-03-30"},{"lineNumber":349,"author":{"gitId":"Yufannnn"},"content":"* `view-homework name/John status/pending` displays pending homework for a student named `John`.","lastModifiedDate":"2023-03-28"},{"lineNumber":350,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":351,"author":{"gitId":"Yufannnn"},"content":"![View Homework](images/view-homework.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":352,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":353,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":354,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":355,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":356,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STATUS should only appear at most once and should not be empty.","lastModifiedDate":"2023-04-04"},{"lineNumber":357,"author":{"gitId":"Yufannnn"},"content":"STUDENT_NAME can be zero or multiple, but they all can\u0027t be empty.","lastModifiedDate":"2023-04-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":359,"author":{"gitId":"Yufannnn"},"content":"#### Delete Homework from a Student","lastModifiedDate":"2023-03-31"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":361,"author":{"gitId":"Yufannnn"},"content":"Deletes a homework assignment for a student.","lastModifiedDate":"2023-03-28"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":363,"author":{"gitId":"Yufannnn"},"content":"Format: `delete-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX]`","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"Yufannnn"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor. Note that there can only be one student\u0027s name.","lastModifiedDate":"2023-03-28"},{"lineNumber":366,"author":{"gitId":"Yufannnn"},"content":"* The `HOMEWORK_INDEX` must be the index of an existing homework assignment for the specified student.","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"Yufannnn"},"content":"* A success message will be displayed if the homework assignment is successfully deleted. Otherwise, an error message will be displayed.","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":369,"author":{"gitId":"Yufannnn"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":370,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"Yufannnn"},"content":"* `delete-homework name/John index/1` deletes the first homework assignment for the student named John.","lastModifiedDate":"2023-03-28"},{"lineNumber":372,"author":{"gitId":"Yufannnn"},"content":"* `delete-homework name/Susan index/3` deletes the third homework assignment for the student named Susan.","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":374,"author":{"gitId":"Yufannnn"},"content":"![Delete Homework](images/delete-homework.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":375,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":376,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can use the `view-homework` command to view the list of homework the student currently has.","lastModifiedDate":"2023-04-04"},{"lineNumber":377,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":378,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":379,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":381,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME, and HOMEWORK_INDEX should all only appear exactly once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":383,"author":{"gitId":"Yufannnn"},"content":"#### Mark the Homework of a Student as Done","lastModifiedDate":"2023-03-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":385,"author":{"gitId":"Yufannnn"},"content":"Marks homework of a student as done.","lastModifiedDate":"2023-03-28"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":387,"author":{"gitId":"Yufannnn"},"content":"Format: `mark-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX]`","lastModifiedDate":"2023-03-28"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":389,"author":{"gitId":"Yufannnn"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor. Note that there can only be one student\u0027s name.","lastModifiedDate":"2023-03-28"},{"lineNumber":390,"author":{"gitId":"Yufannnn"},"content":"* The `HOMEWORK_INDEX` must be the index of an existing homework assignment for the specified student.","lastModifiedDate":"2023-03-28"},{"lineNumber":391,"author":{"gitId":"Yufannnn"},"content":"* A success message will be displayed if the homework assignment is successfully deleted. Otherwise, an error message will be displayed.","lastModifiedDate":"2023-03-28"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":395,"author":{"gitId":"Yufannnn"},"content":"* `mark-homework name/John index/1` marks the first homework assignment for the student named John.","lastModifiedDate":"2023-03-28"},{"lineNumber":396,"author":{"gitId":"Yufannnn"},"content":"* `mark-homework name/Susan index/3` marks the third homework assignment for the student named Susan.","lastModifiedDate":"2023-03-28"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":398,"author":{"gitId":"Yufannnn"},"content":"![Mark Homework](images/mark-homework.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":400,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":401,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":403,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME, and HOMEWORK_INDEX should all only appear exactly once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":405,"author":{"gitId":"Yufannnn"},"content":"#### Unmark Homework of a Student as Undone","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":407,"author":{"gitId":"Yufannnn"},"content":"Marks homework of a student as undone.","lastModifiedDate":"2023-03-28"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":409,"author":{"gitId":"Yufannnn"},"content":"Format: `unmark-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX]`","lastModifiedDate":"2023-03-28"},{"lineNumber":410,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":411,"author":{"gitId":"Yufannnn"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor. Note that there can only be one student\u0027s name.","lastModifiedDate":"2023-03-28"},{"lineNumber":412,"author":{"gitId":"Yufannnn"},"content":"* The `HOMEWORK_INDEX` must be the index of an existing homework assignment for the specified student.","lastModifiedDate":"2023-03-28"},{"lineNumber":413,"author":{"gitId":"Yufannnn"},"content":"* A success message will be displayed if the homework assignment is successfully deleted. Otherwise, an error message will be displayed.","lastModifiedDate":"2023-03-28"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":417,"author":{"gitId":"Yufannnn"},"content":"* `unmark-homework name/John index/1`unmarks the first homework assignment for the student named John.","lastModifiedDate":"2023-03-28"},{"lineNumber":418,"author":{"gitId":"Yufannnn"},"content":"* `unmark-homework name/Susan index/3` unmarks the third homework assignment for the student named Susan.","lastModifiedDate":"2023-03-28"},{"lineNumber":419,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":420,"author":{"gitId":"Yufannnn"},"content":"![Unmark Homework](images/unmark-homework.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":421,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":422,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":423,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":424,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":425,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME, and HOMEWORK_INDEX should all only appear at most once and should not be empty.","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":427,"author":{"gitId":"Yufannnn"},"content":"#### Update Homework of a Student","lastModifiedDate":"2023-03-31"},{"lineNumber":428,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":429,"author":{"gitId":"Yufannnn"},"content":"Updates the information on homework of a student","lastModifiedDate":"2023-04-04"},{"lineNumber":430,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":431,"author":{"gitId":"Yufannnn"},"content":"Format: `update-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX] [homework/HOMEWORK_NAME] [deadline/DEADLINE]`","lastModifiedDate":"2023-03-28"},{"lineNumber":432,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":433,"author":{"gitId":"Yufannnn"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor. Note that there can only be one student\u0027s name.","lastModifiedDate":"2023-03-28"},{"lineNumber":434,"author":{"gitId":"Yufannnn"},"content":"* The `HOMEWORK_INDEX` must be the index of an existing homework assignment for the specified student.","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"Yufannnn"},"content":"* The `DEADLINE` must be in the format given in the support date and time formats\u0027 appendix.","lastModifiedDate":"2023-04-04"},{"lineNumber":436,"author":{"gitId":"Yufannnn"},"content":"* The `DEADLINE` must be in the future.","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"Yufannnn"},"content":"* At least one of homework names and deadline must be in the command. They can\u0027t be absent concurrently.","lastModifiedDate":"2023-04-04"},{"lineNumber":438,"author":{"gitId":"Yufannnn"},"content":"* A success message will be displayed if the homework assignment is successfully deleted. Otherwise, an error message will be displayed.","lastModifiedDate":"2023-03-28"},{"lineNumber":439,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":440,"author":{"gitId":"Yufannnn"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":441,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":442,"author":{"gitId":"Yufannnn"},"content":"* `update-homework name/John index/1 homework/Math Assignment 1` updates the name of homework 1 of John to be `Math Assignment 1`.","lastModifiedDate":"2023-03-28"},{"lineNumber":443,"author":{"gitId":"Yufannnn"},"content":"* `updates-homework name/Susan index/3 deadline/2023-05-12 23:59` updates the deadline of homework 3 of Susan to be `2023-05-12 23:59`.","lastModifiedDate":"2023-03-28"},{"lineNumber":444,"author":{"gitId":"Yufannnn"},"content":"* `updates-homework name/Donald index/2 homework/Math Assignment 1 deadline/2023-05-12 23:59` updates the name of homework 2 of Donald to be `Math Assignment 1` and updates the deadline of homework 2 of Donald to be `2023-05-12 23:59`.","lastModifiedDate":"2023-03-28"},{"lineNumber":445,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":446,"author":{"gitId":"Yufannnn"},"content":"![Update Homework](images/update-homework.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":447,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":448,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can use the `view-homework` command to view the list of homework the student currently has.","lastModifiedDate":"2023-04-04"},{"lineNumber":449,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":450,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can view the supported date and time formats [here](#supported-date-time-formats).","lastModifiedDate":"2023-04-04"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":452,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":453,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":455,"author":{"gitId":"Yufannnn"},"content":":exclamation:  **Caution:** STUDENT_NAME, HOMEWORK_INDEX,","lastModifiedDate":"2023-04-04"},{"lineNumber":456,"author":{"gitId":"Yufannnn"},"content":"and DEADLINE should all only appear at most once and should not be empty.","lastModifiedDate":"2023-04-04"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":458,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** A student can have multiple homework with the same name,","lastModifiedDate":"2023-04-04"},{"lineNumber":459,"author":{"gitId":"Yufannnn"},"content":"even if they have different deadlines.","lastModifiedDate":"2023-04-04"},{"lineNumber":460,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":461,"author":{"gitId":"Yufannnn"},"content":"### Lessons Commands","lastModifiedDate":"2023-03-31"},{"lineNumber":462,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":463,"author":{"gitId":"Yufannnn"},"content":"#### Create a New Lesson Plan for the Upcoming Lesson","lastModifiedDate":"2023-03-31"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"Yufannnn"},"content":"Creates a new lesson for a given student, with a lesson title and time.","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"Yufannnn"},"content":"Format: `new-lesson [name/STUDENT_NAME]... [lesson/LESSON_TITLE] [start/START_TIME] [end/END_TIME]`","lastModifiedDate":"2023-04-08"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"NBQian"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor.","lastModifiedDate":"2023-04-06"},{"lineNumber":470,"author":{"gitId":"NBQian"},"content":"* The `START_TIME` and `END_TIME` must be in the format given in the support date and time formats\u0027 appendix.","lastModifiedDate":"2023-04-06"},{"lineNumber":471,"author":{"gitId":"NBQian"},"content":"* `START_TIME` must be before `END_TIME`, and their difference must be at least 30 minutes and at most 3 hours.","lastModifiedDate":"2023-04-06"},{"lineNumber":472,"author":{"gitId":"NBQian"},"content":"* `START_TIME` and `END_TIME` must be in the future.","lastModifiedDate":"2023-04-06"},{"lineNumber":473,"author":{"gitId":"NBQian"},"content":"* A success message will be displayed if the lesson is successfully created. Otherwise, an error message will be displayed.","lastModifiedDate":"2023-04-06"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"NBQian"},"content":"* `new-lesson name/John Doe lesson/The Water Cycle start/2025-03-23 1300 end/2025-03-23 1500` creates a new lesson for the student named `John Doe` with the lesson title `The Water Cycle` starting at `2025 Mar 2023 13:00` and ending at `2025 Mar 2023 15:00`.","lastModifiedDate":"2023-04-06"},{"lineNumber":477,"author":{"gitId":"NBQian"},"content":"* `new-lesson name/Bernice Yu lesson/Photosynthesis start/2025-03-23 1300 end/2025-03-23 1500` creates a new lesson for the student named `Bernice Yu` with the lesson title `Photosynthesis` starting at `2025 Mar 2023 13:00` and ending at `2025 Mar 2023 15:00`.","lastModifiedDate":"2023-04-06"},{"lineNumber":478,"author":{"gitId":"NBQian"},"content":"* `new-lesson name/David Li lesson/Metamorphic Rocks start/2025-03-23 1300 end/2025-03-23 1500` creates a new lesson for the student named `David Li` with the lesson title `Metamorphic Rocks` starting at `2025 Mar 2023 13:00` and ending at `2025 Mar 2023 15:00`.","lastModifiedDate":"2023-04-06"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"NBQian"},"content":"![New Lesson](images/new-lesson.jpg)","lastModifiedDate":"2023-04-06"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"NBQian"},"content":":bulb: **Tip:** You can use the `view-lesson` command to view the list of lessons the student currently has.","lastModifiedDate":"2023-04-06"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"NBQian"},"content":":bulb: **Tip:** You can view the supported date and time formats [here](#supported-date-time-formats).","lastModifiedDate":"2023-04-06"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":487,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME should appear at least once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":491,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** LESSON_TITLE, START_TIME, and END_TIME should all appear exactly once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** A student can have multiple lessons with the same lesson title, even if they have different start and end times.","lastModifiedDate":"2023-04-06"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":495,"author":{"gitId":"NBQian"},"content":"#### View Lessons","lastModifiedDate":"2023-04-06"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":497,"author":{"gitId":"NBQian"},"content":"Displays the lessons for a given student/all students.","lastModifiedDate":"2023-04-06"},{"lineNumber":498,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":499,"author":{"gitId":"NBQian"},"content":"Format: `view-lesson (optional)[name/STUDENT_NAME] (optional)[subject/SUBJECT] (optional)[date/DATE] (optional)[done/DONE]`","lastModifiedDate":"2023-04-06"},{"lineNumber":500,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":501,"author":{"gitId":"NBQian"},"content":"* By default, the lessons for all the tutor’s students will be displayed if no parameters are specified.","lastModifiedDate":"2023-04-06"},{"lineNumber":502,"author":{"gitId":"NBQian"},"content":"* To view the lessons for specific students, specify the names using `name/STUDENT_NAME`s.","lastModifiedDate":"2023-04-06"},{"lineNumber":503,"author":{"gitId":"NBQian"},"content":"* To view the lessons for a specific subject, specify the subject using `subject/SUBJECT`.","lastModifiedDate":"2023-04-06"},{"lineNumber":504,"author":{"gitId":"NBQian"},"content":"* To view the lessons for a specific date, specify the date using `date/DATE`.","lastModifiedDate":"2023-04-06"},{"lineNumber":505,"author":{"gitId":"Yufannnn"},"content":"* To view the lessons that\u0027d been completed, include `done/done`.","lastModifiedDate":"2023-04-08"},{"lineNumber":506,"author":{"gitId":"Yufannnn"},"content":"* To view the lessons that haven\u0027t been completed, include `done/not done`.","lastModifiedDate":"2023-04-08"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":509,"author":{"gitId":"fahim-tazz"},"content":"* `view-lesson` Displays the lesson history for all the tutor’s students.","lastModifiedDate":"2023-03-16"},{"lineNumber":510,"author":{"gitId":"NBQian"},"content":"* `view-lesson name/John` Displays the lesson history for the student named John.","lastModifiedDate":"2023-04-06"},{"lineNumber":511,"author":{"gitId":"NBQian"},"content":"* `view-lesson name/John subject/Math date/2023-05-03` Displays the lessons for student John, which are of subject Math, on the day 2023-05-03.","lastModifiedDate":"2023-03-30"},{"lineNumber":512,"author":{"gitId":"Yufannnn"},"content":"* `view-lesson done/done` Displays all lessons that\u0027d been completed","lastModifiedDate":"2023-04-08"},{"lineNumber":513,"author":{"gitId":"Yufannnn"},"content":"* `view-lesson done/not done` Displays all lessons that haven\u0027t been completed","lastModifiedDate":"2023-04-08"},{"lineNumber":514,"author":{"gitId":"Yufannnn"},"content":"* `view-lesson name/John done/done` Displays all lessons that\u0027d been completed for student John","lastModifiedDate":"2023-04-08"},{"lineNumber":515,"author":{"gitId":"Yufannnn"},"content":"* `view-lesson name/John name/Bernice done/not done` Displays all lessons that haven\u0027t been completed for students John and Bernice","lastModifiedDate":"2023-04-08"},{"lineNumber":516,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":517,"author":{"gitId":"NBQian"},"content":"![View Lesson](images/view-lesson.jpg)","lastModifiedDate":"2023-04-06"},{"lineNumber":518,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":519,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":520,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":521,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":522,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** SUBJECT, DATE, and DONE should all only appear at most once and should not be empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":523,"author":{"gitId":"NBQian"},"content":"STUDENT_NAME can appear multiple times, but none should empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":524,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":525,"author":{"gitId":"Yufannnn"},"content":"#### Delete a Lesson from a student","lastModifiedDate":"2023-04-06"},{"lineNumber":526,"author":{"gitId":"NBQian"},"content":"Deletes a lesson for a given student.","lastModifiedDate":"2023-03-30"},{"lineNumber":527,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":528,"author":{"gitId":"NBQian"},"content":"Format: `delete-lesson [name/STUDENT_NAME] [index/LESSON_INDEX]`","lastModifiedDate":"2023-03-30"},{"lineNumber":529,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":530,"author":{"gitId":"NBQian"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor. Note that there can only be one student\u0027s name.","lastModifiedDate":"2023-03-30"},{"lineNumber":531,"author":{"gitId":"NBQian"},"content":"* The `LESSON_INDEX` must be a positive integer that is within the range of the student\u0027s lesson list.","lastModifiedDate":"2023-04-06"},{"lineNumber":532,"author":{"gitId":"NBQian"},"content":"* A success message will be displayed if the lesson is successfully deleted. Otherwise, an error message will be displayed.","lastModifiedDate":"2023-04-06"},{"lineNumber":533,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":534,"author":{"gitId":"NBQian"},"content":"Example:","lastModifiedDate":"2023-03-30"},{"lineNumber":535,"author":{"gitId":"NBQian"},"content":"* `delete-lesson name/John Doe index/1` deletes the first lesson for the student named John Doe.","lastModifiedDate":"2023-03-30"},{"lineNumber":536,"author":{"gitId":"NBQian"},"content":"* `delete-lesson name/Bernice Yu index/2` deletes the second lesson for the student named Bernice Yu.","lastModifiedDate":"2023-04-06"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":538,"author":{"gitId":"NBQian"},"content":"![Delete Lesson](images/delete-lesson.jpg)","lastModifiedDate":"2023-04-06"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":540,"author":{"gitId":"NBQian"},"content":":bulb: **Tip:** You can use the `view-lesson` command to view the list of lessons the student currently has.","lastModifiedDate":"2023-04-06"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":542,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":543,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":545,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** STUDENT_NAME and LESSON_INDEX should all appear exactly once and should not be empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":548,"author":{"gitId":"Yufannnn"},"content":"#### Update a Lesson","lastModifiedDate":"2023-04-06"},{"lineNumber":549,"author":{"gitId":"NBQian"},"content":"Updates a lesson for a given student. This includes the lesson title, start time, and/or end time.","lastModifiedDate":"2023-04-06"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":551,"author":{"gitId":"NBQian"},"content":"Format: `update-lesson [name/STUDENT_NAME] [index/LESSON_INDEX] (optional)[lesson/LESSON_TITLE] (optional)[start/START_TIME] (optional)[end/END_TIME]`","lastModifiedDate":"2023-04-06"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":553,"author":{"gitId":"NBQian"},"content":"* The `STUDENT_NAME` must be an existing student of the tutor. Note that there can only be one student\u0027s name.","lastModifiedDate":"2023-03-30"},{"lineNumber":554,"author":{"gitId":"NBQian"},"content":"* The `LESSON_INDEX` must be a positive integer that is within the range of the student\u0027s lesson list.","lastModifiedDate":"2023-04-06"},{"lineNumber":555,"author":{"gitId":"NBQian"},"content":"* At least one of the optional parameters must be provided.","lastModifiedDate":"2023-04-06"},{"lineNumber":556,"author":{"gitId":"NBQian"},"content":"* The `START_TIME`, and `END_TIME` provided must be in any of the supported date-time formats (see appendix).","lastModifiedDate":"2023-04-06"},{"lineNumber":557,"author":{"gitId":"NBQian"},"content":"* The provided `START_TIME` must be before the provided `END_TIME`, or, if the `END_TIME` is not provided, it must be before the original end time of the lesson.","lastModifiedDate":"2023-04-06"},{"lineNumber":558,"author":{"gitId":"NBQian"},"content":"* The provided `END_TIME` must be after the provided `START_TIME`, or, if the `START_TIME` is not provided, it must be after the original start time of the lesson.","lastModifiedDate":"2023-04-06"},{"lineNumber":559,"author":{"gitId":"NBQian"},"content":"* The updated lesson\u0027s duration must be at least 30 minutes and at most 3 hours.","lastModifiedDate":"2023-04-06"},{"lineNumber":560,"author":{"gitId":"NBQian"},"content":"* A success message will be displayed if the lesson is successfully updated. Otherwise, an error message will be displayed.","lastModifiedDate":"2023-04-06"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":562,"author":{"gitId":"NBQian"},"content":"Example:","lastModifiedDate":"2023-03-30"},{"lineNumber":563,"author":{"gitId":"NBQian"},"content":"* `update-lesson name/John Doe index/1 lesson/The Water Cycle start/2025-03-23 1300 end/2025-03-23 1500` updates the first lesson for the student named John Doe to have the lesson title \"The Water Cycle\", start time \"2025-03-23 1300\", and end time \"2025-03-23 1500\".","lastModifiedDate":"2023-04-06"},{"lineNumber":564,"author":{"gitId":"NBQian"},"content":"* `update-lesson name/Bernice Yu index/2 lesson/Photosynthesis` updates the second lesson for the student named Bernice Yu to have the lesson title \"Photosynthesis\".","lastModifiedDate":"2023-04-06"},{"lineNumber":565,"author":{"gitId":"NBQian"},"content":"* `update-lesson name/John Doe index/1 start/2025-03-23 1300` updates the first lesson for the student named John Doe to have the start time \"2025-03-23 1300\".","lastModifiedDate":"2023-04-06"},{"lineNumber":566,"author":{"gitId":"NBQian"},"content":"* `update-lesson name/Bernice Yu index/2 end/2025-03-23 1500` updates the second lesson for the student named Bernice Yu to have the end time \"2025-03-23 1500\".","lastModifiedDate":"2023-04-06"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":568,"author":{"gitId":"NBQian"},"content":"![Update Lesson](images/update-lesson.jpg)","lastModifiedDate":"2023-04-06"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":570,"author":{"gitId":"NBQian"},"content":":bulb: **Tip:** You can use the `view-lesson` command to view the list of lessons the student currently has.","lastModifiedDate":"2023-04-06"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":572,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can view the supported date and time formats [here](#supported-date-time-formats).","lastModifiedDate":"2023-04-08"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":574,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-06"},{"lineNumber":575,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`. You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":576,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":577,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** STUDENT_NAME, LESSON_INDEX should appear exactly once and should not be empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":578,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":579,"author":{"gitId":"NBQian"},"content":":exclamation: **Caution:** LESSON_TITLE, START_TIME, and END_TIME should appear at most once and should not be empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"fahim-tazz"},"content":"### Exam Commands","lastModifiedDate":"2023-04-08"},{"lineNumber":582,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":583,"author":{"gitId":"Yufannnn"},"content":"#### Add an Exam to be tracked","lastModifiedDate":"2023-03-31"},{"lineNumber":584,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":585,"author":{"gitId":"Yufannnn"},"content":"Create an Exam within TutorPro to be tracked for a given student.","lastModifiedDate":"2023-04-04"},{"lineNumber":586,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":587,"author":{"gitId":"szejiancheng"},"content":"Format: `new-exam [name/STUDENT_NAME].. [exam/EXAM_NAME] [start/START_TIME] ","lastModifiedDate":"2023-04-08"},{"lineNumber":588,"author":{"gitId":"szejiancheng"},"content":"[end/END_TIME] (optional)[weightage/WEIGHTAGE] (optional)[grade/GRADE]`","lastModifiedDate":"2023-03-28"},{"lineNumber":589,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":590,"author":{"gitId":"szejiancheng"},"content":"* Creates an exam that is attributed to one or more students.","lastModifiedDate":"2023-03-28"},{"lineNumber":591,"author":{"gitId":"szejiancheng"},"content":"* At least one student name must be provided.","lastModifiedDate":"2023-03-28"},{"lineNumber":592,"author":{"gitId":"szejiancheng"},"content":"* `START_TIME` and `END_TIME` provided must be in any of the supported date-time formats (see appendix).","lastModifiedDate":"2023-03-28"},{"lineNumber":593,"author":{"gitId":"szejiancheng"},"content":"* the format of `GRADE` should be `grade/ACTUAL_SCORE/TOTAL_SCORE`","lastModifiedDate":"2023-03-28"},{"lineNumber":594,"author":{"gitId":"szejiancheng"},"content":"* There can be multiple `STUDENT_NAME`s provided to this command, and each name provided will attempt to match with only","lastModifiedDate":"2023-04-08"},{"lineNumber":595,"author":{"gitId":"szejiancheng"},"content":"  one student. eg. `new-exam name/John name/Faye...` will attempt to match each name to a student being tracked,","lastModifiedDate":"2023-04-08"},{"lineNumber":596,"author":{"gitId":"szejiancheng"},"content":"  and will result in two exams with the same parameters being attributed to students \u0027John\u0027 and \u0027Faye\u0027.","lastModifiedDate":"2023-04-08"},{"lineNumber":597,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":598,"author":{"gitId":"szejiancheng"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":599,"author":{"gitId":"Yufannnn"},"content":"* `new-exam name/John Doe exam/Math MYE start/2023-05-21 12:00 end/2023-05-21 14:00`","lastModifiedDate":"2023-03-30"},{"lineNumber":600,"author":{"gitId":"Yufannnn"},"content":"* `new-exam name/John Doe name/Faye Doe exam/Science MYE start/2023-05-22 12:00 end/2023-05-22 14:00`","lastModifiedDate":"2023-03-30"},{"lineNumber":601,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":602,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can view the supported date and time formats [here](#supported-date-time-formats).","lastModifiedDate":"2023-04-08"},{"lineNumber":603,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":604,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-08"},{"lineNumber":605,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`.","lastModifiedDate":"2023-04-08"},{"lineNumber":606,"author":{"gitId":"Yufannnn"},"content":"You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-08"},{"lineNumber":607,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":608,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME should appear at least once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":609,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":610,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** EXAM_NAME, START_TIME, and END_TIME should appear exactly once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":611,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":612,"author":{"gitId":"Yufannnn"},"content":"#### Remove an exam","lastModifiedDate":"2023-03-31"},{"lineNumber":613,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":614,"author":{"gitId":"szejiancheng"},"content":"Format: `delete-exam [name/STUDENT_NAME].. [index/INDEX_OF_EXAM]`","lastModifiedDate":"2023-04-08"},{"lineNumber":615,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":616,"author":{"gitId":"szejiancheng"},"content":"* Removes an exam that TutorPro is currently tracking.","lastModifiedDate":"2023-03-28"},{"lineNumber":617,"author":{"gitId":"szejiancheng"},"content":"* At least one student name must be provided.","lastModifiedDate":"2023-03-28"},{"lineNumber":618,"author":{"gitId":"szejiancheng"},"content":"* `INDEX_OF_EXAM` is in reference to the indexing of the exams listed when invoking the `view-exam` command on a ","lastModifiedDate":"2023-03-28"},{"lineNumber":619,"author":{"gitId":"szejiancheng"},"content":"student.","lastModifiedDate":"2023-03-28"},{"lineNumber":620,"author":{"gitId":"szejiancheng"},"content":"* There can be multiple `STUDENT_NAME`s provided to this command, and each name provided will attempt to match with only","lastModifiedDate":"2023-04-08"},{"lineNumber":621,"author":{"gitId":"szejiancheng"},"content":"  one student. eg. `delete-exam name/John name/Faye index/1` will attempt to match each name to a student being tracked,","lastModifiedDate":"2023-04-08"},{"lineNumber":622,"author":{"gitId":"szejiancheng"},"content":" and will result in exams of index \u00271\u0027 of students \u0027John\u0027 and \u0027Faye\u0027 being removed from TutorPro.","lastModifiedDate":"2023-04-08"},{"lineNumber":623,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":624,"author":{"gitId":"szejiancheng"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":625,"author":{"gitId":"Yufannnn"},"content":"* `delete-exam name/John Doe index/1`","lastModifiedDate":"2023-03-30"},{"lineNumber":626,"author":{"gitId":"szejiancheng"},"content":"* `delete-exam name/John Doe name/Faye Doe index/1` -this command will remove both students John\u0027s and Faye\u0027s 1st ","lastModifiedDate":"2023-04-08"},{"lineNumber":627,"author":{"gitId":"szejiancheng"},"content":"indexed exam, and will behave similarly to `delete-exam name/John Doe index/1` and `delete-exam name/Faye Doe index/1`","lastModifiedDate":"2023-04-08"},{"lineNumber":628,"author":{"gitId":"szejiancheng"},"content":"being run one after another.","lastModifiedDate":"2023-04-08"},{"lineNumber":629,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":630,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can use the `view-exam` command to view the list of exams the student currently has.","lastModifiedDate":"2023-04-08"},{"lineNumber":631,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":632,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-08"},{"lineNumber":633,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`.","lastModifiedDate":"2023-04-08"},{"lineNumber":634,"author":{"gitId":"Yufannnn"},"content":"You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-08"},{"lineNumber":635,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":636,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME should appear at least once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":637,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":638,"author":{"gitId":"Yufannnn"},"content":"#### View exams tracked by TutorPro","lastModifiedDate":"2023-03-31"},{"lineNumber":639,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":640,"author":{"gitId":"szejiancheng"},"content":"Format: `view-exam (optional)[name/STUDENT_NAME].. (optional)[date/DATE] (optional)[exam/NAME_OF_EXAM] (optional)","lastModifiedDate":"2023-04-08"},{"lineNumber":641,"author":{"gitId":"szejiancheng"},"content":"[done/IS_DONE]`","lastModifiedDate":"2023-03-28"},{"lineNumber":642,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":643,"author":{"gitId":"szejiancheng"},"content":"* Lists exams TutorPro is currently tracking, while filtering for the specified predicates","lastModifiedDate":"2023-04-08"},{"lineNumber":644,"author":{"gitId":"szejiancheng"},"content":"* All predicates are optional, leaving all parameters blank will list all currently tracked exams","lastModifiedDate":"2023-03-28"},{"lineNumber":645,"author":{"gitId":"szejiancheng"},"content":"* Field `[IS_DONE]` when filled with parameter \u0027done\u0027 `eg. done/done` will list all completed exams. Leave this field ","lastModifiedDate":"2023-03-28"},{"lineNumber":646,"author":{"gitId":"szejiancheng"},"content":"blank `eg. done/` when filtering for upcoming exams -\u003e CHANGED BY BOQIAN","lastModifiedDate":"2023-04-08"},{"lineNumber":647,"author":{"gitId":"szejiancheng"},"content":"* There can be multiple `STUDENT_NAME`s provided to this command, and each name provided will attempt to match with only","lastModifiedDate":"2023-04-08"},{"lineNumber":648,"author":{"gitId":"szejiancheng"},"content":" one student. eg. `view-exam name/John name/Faye` will attempt to match each name to a student being tracked, and will","lastModifiedDate":"2023-04-08"},{"lineNumber":649,"author":{"gitId":"szejiancheng"},"content":"result in exams of students \u0027John\u0027 and \u0027Faye\u0027 being listed.","lastModifiedDate":"2023-04-08"},{"lineNumber":650,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":651,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":652,"author":{"gitId":"szejiancheng"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":653,"author":{"gitId":"szejiancheng"},"content":"* `view-exam` -lists all exams currently being tracked by TutorPro","lastModifiedDate":"2023-03-28"},{"lineNumber":654,"author":{"gitId":"szejiancheng"},"content":"* `view-exam name/John date/2023-05-01 exam/MYE done/` -list exams attributed to student \u0027John\u0027 on date \u00272023-05-01\u0027 ","lastModifiedDate":"2023-03-28"},{"lineNumber":655,"author":{"gitId":"szejiancheng"},"content":"with description \u0027MYE\u0027 which are undone.","lastModifiedDate":"2023-03-28"},{"lineNumber":656,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":657,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can view the supported date and time formats [here](#supported-date-time-formats).","lastModifiedDate":"2023-04-08"},{"lineNumber":658,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":659,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-08"},{"lineNumber":660,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`.","lastModifiedDate":"2023-04-08"},{"lineNumber":661,"author":{"gitId":"Yufannnn"},"content":"You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-08"},{"lineNumber":662,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":663,"author":{"gitId":"szejiancheng"},"content":":exclamation: **Caution:** The only parameter allowed to have more than one value is `STUDENT_NAME`, any other parameter","lastModifiedDate":"2023-04-08"},{"lineNumber":664,"author":{"gitId":"szejiancheng"},"content":" if repeated will have its last repetition taken as the parameter passed. eg. `view-exam date/2023-05-01 date/2023-","lastModifiedDate":"2023-04-08"},{"lineNumber":665,"author":{"gitId":"szejiancheng"},"content":"05-02` will behave as `view-exam date/2023-05-02`.","lastModifiedDate":"2023-04-08"},{"lineNumber":666,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":667,"author":{"gitId":"Yufannnn"},"content":"#### Edit exam details","lastModifiedDate":"2023-03-31"},{"lineNumber":668,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":669,"author":{"gitId":"szejiancheng"},"content":"Format: `update-exam [name/STUDENT_NAME] [index/INDEX] (optional)[exam/NEW_EXAM_NAME] (optional)[start/START_TIME] ","lastModifiedDate":"2023-03-28"},{"lineNumber":670,"author":{"gitId":"szejiancheng"},"content":"(optional)[end/END_TIME] (optional)[grade/GRADE]`","lastModifiedDate":"2023-03-28"},{"lineNumber":671,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":672,"author":{"gitId":"szejiancheng"},"content":"* Updates the details of an exam tracked by TutorPro","lastModifiedDate":"2023-03-28"},{"lineNumber":673,"author":{"gitId":"szejiancheng"},"content":"* Of the optional fields, one must be provided in order to update the exam.","lastModifiedDate":"2023-03-28"},{"lineNumber":674,"author":{"gitId":"szejiancheng"},"content":"* `START_TIME` and `END_TIME` provided must be in any of the supported date-time formats (see appendix).","lastModifiedDate":"2023-03-28"},{"lineNumber":675,"author":{"gitId":"szejiancheng"},"content":"* `INDEX` is in reference to the indexing of the exams listed when invoking the `view-exam` command on a","lastModifiedDate":"2023-03-28"},{"lineNumber":676,"author":{"gitId":"szejiancheng"},"content":"student.","lastModifiedDate":"2023-03-28"},{"lineNumber":677,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":678,"author":{"gitId":"szejiancheng"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":679,"author":{"gitId":"szejiancheng"},"content":"* `update-exam name/John index/1 grade/20/25` -updates the first exam (index when `view-exam` is invoked with student ","lastModifiedDate":"2023-04-08"},{"lineNumber":680,"author":{"gitId":"szejiancheng"},"content":"name) grade to `20/25`.","lastModifiedDate":"2023-04-08"},{"lineNumber":681,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":682,"author":{"gitId":"Yufannnn"},"content":":bulb: **Tip:** You can use the `view-exam` command to view the list of exams the student currently has.","lastModifiedDate":"2023-04-08"},{"lineNumber":683,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":684,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME is case-insensitive and supports partial matching.","lastModifiedDate":"2023-04-08"},{"lineNumber":685,"author":{"gitId":"Yufannnn"},"content":"For example, `john` will match `John Doe` and `john doe`.","lastModifiedDate":"2023-04-08"},{"lineNumber":686,"author":{"gitId":"Yufannnn"},"content":"You can refer to the [search by name mechanism](#search-by-name-mechanism) for more details.","lastModifiedDate":"2023-04-08"},{"lineNumber":687,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":688,"author":{"gitId":"Yufannnn"},"content":":exclamation: **Caution:** STUDENT_NAME should appear exactly once and should not be empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":689,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":690,"author":{"gitId":"Yufannnn"},"content":"## Unique Mechanisms","lastModifiedDate":"2023-04-08"},{"lineNumber":691,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":692,"author":{"gitId":"Yufannnn"},"content":"### Search by Name Mechanism","lastModifiedDate":"2023-04-08"},{"lineNumber":693,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":694,"author":{"gitId":"Yufannnn"},"content":"* TutorPro uses Students\u0027 Names as primary keys to identify students.","lastModifiedDate":"2023-04-08"},{"lineNumber":695,"author":{"gitId":"Yufannnn"},"content":"* Most of the commands (except) in TutorPro allow you to search for a student by name, rather than by index, which is more intuitive for the user and eliminates the need to remember the index of the student.","lastModifiedDate":"2023-04-08"},{"lineNumber":696,"author":{"gitId":"Yufannnn"},"content":"* Therefore, duplicate names aren\u0027t allowed. Names that are substrings of other names or vice versa aren\u0027t allowed. For example, `John Doe` and `John` are not allowed. If you have students with the exact name, say `John Doe`, you can add a number to the end of the name to differentiate them. For example, `John Doe 1` and `John Doe 2`.","lastModifiedDate":"2023-04-08"},{"lineNumber":697,"author":{"gitId":"Yufannnn"},"content":"* The search by name mechanism is case-insensitive, meaning that the search will be case-insensitive. For Example, `john doe` and `John Doe` will be treated as the same name.","lastModifiedDate":"2023-04-08"},{"lineNumber":698,"author":{"gitId":"Yufannnn"},"content":"* Partial names can be used as well. For example, `doe` will return all students with the name `John Doe` and `Jane Doe`.","lastModifiedDate":"2023-04-08"},{"lineNumber":699,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":700,"author":{"gitId":"Yufannnn"},"content":"### Schedule Clash Detection Mechanism","lastModifiedDate":"2023-04-08"},{"lineNumber":701,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":702,"author":{"gitId":"Yufannnn"},"content":"#### Schedule Clash Detection Mechanism when Adding a New Lesson","lastModifiedDate":"2023-04-08"},{"lineNumber":703,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":704,"author":{"gitId":"Yufannnn"},"content":"##### With respect to existing lessons","lastModifiedDate":"2023-04-08"},{"lineNumber":705,"author":{"gitId":"Yufannnn"},"content":"* TutorPro will detect if there is a clash between the new lesson and existing lessons of all students. ","lastModifiedDate":"2023-04-08"},{"lineNumber":706,"author":{"gitId":"Yufannnn"},"content":"* Since TutorPro is meant for one tutor, it is assumed that the tutor will not be teaching two lessons at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":707,"author":{"gitId":"Yufannnn"},"content":"* When adding a new lesson, TutorPro will check if the lesson clashes with any other lessons of all students. For example: ","lastModifiedDate":"2023-04-08"},{"lineNumber":708,"author":{"gitId":"Yufannnn"},"content":"  * Run command `new-lesson name/John Doe lesson/Math Lesson start/2023-05-21 12:00 end/2023-05-21 14:00` will add a new lesson for `John Doe` on `2023-05-21` from `12:00` to `14:00`.","lastModifiedDate":"2023-04-08"},{"lineNumber":709,"author":{"gitId":"Yufannnn"},"content":"  * If you then run command `new-lesson name/John Doe lesson/Science Lesson start/2023-05-21 13:00 end/2023-05-21 15:00`, which adds a new lesson for `John Doe` on `2023-05-21` from `13:00` to `15:00`, TutorPro will detect that there is a clash in the schedule and will not add the lesson for `John Doe` as a student can\u0027t have two lessons at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":710,"author":{"gitId":"Yufannnn"},"content":"* We also Assume that tutors will only teach one student at a time. Therefore, if multiple students have lessons even with the same at the same time, TutorPro will detect that there is a clash in the schedule and will not add the lesson for the student. For example:","lastModifiedDate":"2023-04-08"},{"lineNumber":711,"author":{"gitId":"Yufannnn"},"content":"  * Run command `new-lesson name/John Doe lesson/Math Lesson start/2023-05-21 12:00 end/2023-05-21 14:00` will add a new lesson for `John Doe` on `2023-05-21` from `12:00` to `14:00`. ","lastModifiedDate":"2023-04-08"},{"lineNumber":712,"author":{"gitId":"Yufannnn"},"content":"  * If you then run command `new-lesson name/Irfan Ibrahim lesson/Math Lesson start/2023-05-21 12:00 end/2023-05-21 14:00`, which adds a new lesson for `Irfan Ibrahim` on `2023-05-21` from `12:00` to `14:00`, TutorPro will detect that there is a clash in the schedule and will not add the lesson for `Irfan Ibrahim` as a tutor can\u0027t teach two students at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":713,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":714,"author":{"gitId":"Yufannnn"},"content":"##### With respect to existing exams","lastModifiedDate":"2023-04-08"},{"lineNumber":715,"author":{"gitId":"Yufannnn"},"content":"* TutorPro will detect if there is a clash between the new lesson and existing exams of the particular student.","lastModifiedDate":"2023-04-08"},{"lineNumber":716,"author":{"gitId":"Yufannnn"},"content":"* Since the timing of the exam is determined by the school of the student, TutorPro will prioritize the timing of the exam over the new lesson.","lastModifiedDate":"2023-04-08"},{"lineNumber":717,"author":{"gitId":"Yufannnn"},"content":"* We assume that a student will not have an exam and a lesson at the same time. For example:","lastModifiedDate":"2023-04-08"},{"lineNumber":718,"author":{"gitId":"Yufannnn"},"content":"  * Run command `new-lesson name/John Doe lesson/Math Lesson start/2023-05-21 12:00 end/2023-05-21 14:00` will add a new lesson for `John Doe` on `2023-05-21` from `12:00` to `14:00`.","lastModifiedDate":"2023-04-08"},{"lineNumber":719,"author":{"gitId":"Yufannnn"},"content":"  * If you then run command `new-exam name/John Doe exam/Math Exam start/2023-05-21 13:00 end/2023-05-21 15:00`, which adds a new exam for `John Doe` on `2023-05-21` from `13:00` to `15:00`, TutorPro will detect that there is a clash in the schedule and will not add the lesson for `John Doe` as a student can\u0027t have an exam and a lesson at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":720,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":721,"author":{"gitId":"Yufannnn"},"content":"#### Schedule Clash Detection Mechanism when Adding a New Exam","lastModifiedDate":"2023-04-08"},{"lineNumber":722,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":723,"author":{"gitId":"Yufannnn"},"content":"##### With respect to existing lessons","lastModifiedDate":"2023-04-08"},{"lineNumber":724,"author":{"gitId":"Yufannnn"},"content":"* TutorPro will detect if there is a clash between the new exam and existing lessons of the particular student.","lastModifiedDate":"2023-04-08"},{"lineNumber":725,"author":{"gitId":"Yufannnn"},"content":"* Since the timing of the exam is determined by the school of the student, TutorPro will prioritize the timing of the new exam over the existing lessons.","lastModifiedDate":"2023-04-08"},{"lineNumber":726,"author":{"gitId":"Yufannnn"},"content":"* We assume that a student will not have an exam and a lesson at the same time. For example:","lastModifiedDate":"2023-04-08"},{"lineNumber":727,"author":{"gitId":"Yufannnn"},"content":"  * Run command `new-exam name/John Doe exam/Math Exam start/2023-05-21 12:00 end/2023-05-21 14:00` will add a new exam for `John Doe` on `2023-05-21` from `12:00` to `14:00`.","lastModifiedDate":"2023-04-08"},{"lineNumber":728,"author":{"gitId":"Yufannnn"},"content":"  * If you then run command `new-exam name/John Doe exam/Science Exam start/2023-05-21 13:00 end/2023-05-21 15:00`, which adds a new exam for `John Doe` on `2023-05-21` from `13:00` to `15:00`, unlike the previous section, TutorPro will allow you to add the exam for `John Doe` as the exam timing is more important than the lesson timing.","lastModifiedDate":"2023-04-08"},{"lineNumber":729,"author":{"gitId":"Yufannnn"},"content":"  * However, TutorPro will detect that there is a clash in the schedule will prompt you to update the clashed lesson\u0027s timing.","lastModifiedDate":"2023-04-08"},{"lineNumber":730,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":731,"author":{"gitId":"Yufannnn"},"content":"##### With respect to existing exams","lastModifiedDate":"2023-04-08"},{"lineNumber":732,"author":{"gitId":"Yufannnn"},"content":"* TutorPro will detect if there is a clash in the schedule of a students when adding a new exam.","lastModifiedDate":"2023-04-08"},{"lineNumber":733,"author":{"gitId":"Yufannnn"},"content":"* We assume that a student will not have two exams at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":734,"author":{"gitId":"Yufannnn"},"content":"* Unlike adding a new lesson, when adding a new exam, TutorPro will check if the exam clashes with any other exams of the same student only. (note the difference between adding a new lesson and adding a new exam). For example:","lastModifiedDate":"2023-04-08"},{"lineNumber":735,"author":{"gitId":"Yufannnn"},"content":"  * Run command `new-exam name/John Doe exam/English Exam start/2023-05-21 12:00 end/2023-05-21 14:00` will add a new exam for `John Doe` on `2023-05-21` from `12:00` to `14:00`. ","lastModifiedDate":"2023-04-08"},{"lineNumber":736,"author":{"gitId":"Yufannnn"},"content":"  * If you run command `new-exam name/John Doe exam/Math Exam start/2023-05-21 12:00 end/2023-05-21 14:00`, which adds a new exam for `John Doe` on `2023-05-21` from `13:00` to `14:00`, TutorPro will detect that there is a clash in the schedule and will not add the exam for `John Doe` as a student can\u0027t have two exams at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":737,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":738,"author":{"gitId":"Yufannnn"},"content":"### Duplicate Detection Mechanism","lastModifiedDate":"2023-04-08"},{"lineNumber":739,"author":{"gitId":"Yufannnn"},"content":"TutorPro will detect duplicate homeworks,","lastModifiedDate":"2023-04-08"},{"lineNumber":740,"author":{"gitId":"Yufannnn"},"content":"lessons and exams and will not add them to the student\u0027s list of homeworks, lessons and exams respectively.","lastModifiedDate":"2023-04-08"},{"lineNumber":741,"author":{"gitId":"Yufannnn"},"content":"However,","lastModifiedDate":"2023-04-08"},{"lineNumber":742,"author":{"gitId":"Yufannnn"},"content":"you may have noticed that duplicate homework name is not allowed but duplicate lesson name and exam name is allowed.","lastModifiedDate":"2023-04-08"},{"lineNumber":743,"author":{"gitId":"Yufannnn"},"content":"This is a carefully crafted feature that will be explained in the following section.","lastModifiedDate":"2023-04-08"},{"lineNumber":744,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":745,"author":{"gitId":"Yufannnn"},"content":"#### Duplicate Homework Detection Mechanism","lastModifiedDate":"2023-04-08"},{"lineNumber":746,"author":{"gitId":"Yufannnn"},"content":"* TutorPro identifies homework by its name, since we assume that a student can have multiple homeworks with the same deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":747,"author":{"gitId":"Yufannnn"},"content":"* Since name is the primary key for homework, duplicate homework names are not allowed. For example, if you have a homework named `Math Homework` and you try to add another homework with the same name even with a different deadline, TutorPro will detect that there is a duplicate homework and will not add the homework.","lastModifiedDate":"2023-04-08"},{"lineNumber":748,"author":{"gitId":"Yufannnn"},"content":"* If you homework with the same name, we encourage you to add a number to the end of the name to differentiate them. For example, `Math Homework 1` and `Math Homework 2`.","lastModifiedDate":"2023-04-08"},{"lineNumber":749,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":750,"author":{"gitId":"Yufannnn"},"content":"#### Duplicate Lesson Detection Mechanism","lastModifiedDate":"2023-04-08"},{"lineNumber":751,"author":{"gitId":"Yufannnn"},"content":"* TutorPro identifies a lesson by its start time and end time, since we assume that a student can have multiple lessons with the same name, but they can\u0027t have two lessons at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":752,"author":{"gitId":"Yufannnn"},"content":"* Since start time and end time is the primary key for lessons, lessons that `clash` with other lessons aren\u0027t allowed. (See [Schedule Clash Detection Mechanism when Adding a New Lesson](#schedule-clash-detection-mechanism-when-adding-a-new-lesson) for more details)","lastModifiedDate":"2023-04-08"},{"lineNumber":753,"author":{"gitId":"Yufannnn"},"content":"* However, adding lessons with the duplicate name but without `clashes` with other lessons are allowed. For example:","lastModifiedDate":"2023-04-08"},{"lineNumber":754,"author":{"gitId":"Yufannnn"},"content":"  * if you have a lesson named `Math Lesson` for `John Doe` on `2023-05-21` from `12:00` to `14:00` ","lastModifiedDate":"2023-04-08"},{"lineNumber":755,"author":{"gitId":"Yufannnn"},"content":"  * you then try to add another lesson with the same name but on `2023-05-24` from `13:00` to `15:00`, TutorPro will not detect that there is a duplicate lesson and will add the lesson.","lastModifiedDate":"2023-04-08"},{"lineNumber":756,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":757,"author":{"gitId":"Yufannnn"},"content":"#### Duplicate Exam Detection Mechanism","lastModifiedDate":"2023-04-08"},{"lineNumber":758,"author":{"gitId":"Yufannnn"},"content":"* TutorPro identifies an exam by its start time and end time, since we assume that a student can have multiple exams with the same name, but they can\u0027t have two exams at the same time.","lastModifiedDate":"2023-04-08"},{"lineNumber":759,"author":{"gitId":"Yufannnn"},"content":"* Since start time and end time is the primary key for exams, exams that `clash` with other exams aren\u0027t allowed. (See [Schedule Clash Detection Mechanism when Adding a New Exam](#schedule-clash-detection-mechanism-when-adding-a-new-exam) for more details)","lastModifiedDate":"2023-04-08"},{"lineNumber":760,"author":{"gitId":"Yufannnn"},"content":"* However, adding exams with the duplicate name but without `clashes` with other exams are allowed. For example:","lastModifiedDate":"2023-04-08"},{"lineNumber":761,"author":{"gitId":"Yufannnn"},"content":"  * if you have an exam named `Math Exam` for `John Doe` on `2023-05-21` from `12:00` to `14:00` ","lastModifiedDate":"2023-04-08"},{"lineNumber":762,"author":{"gitId":"Yufannnn"},"content":"  * you then try to add another exam with the same name but on `2023-05-24` from `13:00` to `15:00`, TutorPro will not detect that there is a duplicate exam and will add the exam.","lastModifiedDate":"2023-04-08"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"Yufannnn"},"content":"**Q**: How can I transfer my data to another computer in TutorPro? \u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":769,"author":{"gitId":"Yufannnn"},"content":"**A**: You can transfer your data to another computer by installing TutorPro on the new computer and replacing its empty data file with the one that contains the data from your previous TutorPro home folder.","lastModifiedDate":"2023-03-04"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"Yufannnn"},"content":"**Q**: My students\u0027 full information is not shown on the student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":772,"author":{"gitId":"Yufannnn"},"content":"How can I view the full information of a student?","lastModifiedDate":"2023-04-08"},{"lineNumber":773,"author":{"gitId":"Yufannnn"},"content":"\u003cBr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":774,"author":{"gitId":"Yufannnn"},"content":"**A**: You can view the full information of a student by running command `view-student [index/INDEX]`.","lastModifiedDate":"2023-04-08"},{"lineNumber":775,"author":{"gitId":"Yufannnn"},"content":"For example, if you want to view the full information of the student at index 1,","lastModifiedDate":"2023-04-08"},{"lineNumber":776,"author":{"gitId":"Yufannnn"},"content":"you can run command `view-student index/1`.","lastModifiedDate":"2023-04-08"},{"lineNumber":777,"author":{"gitId":"Yufannnn"},"content":"Alternatively, you can also view with the profile button on the student card.","lastModifiedDate":"2023-04-08"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":779,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":781,"author":{"gitId":"NBQian"},"content":"## Summary","lastModifiedDate":"2023-03-29"},{"lineNumber":782,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":783,"author":{"gitId":"NBQian"},"content":"### List of Commands","lastModifiedDate":"2023-03-29"},{"lineNumber":784,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":785,"author":{"gitId":"NBQian"},"content":"| Action                       | Command Format                                                                                                                                                       | Example                                                                                                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":786,"author":{"gitId":"fahim-tazz"},"content":"|:-----------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-05"},{"lineNumber":787,"author":{"gitId":"NBQian"},"content":"| Create new student profile   | `new-student [name/STUDENT_NAME] [address/STUDENT_ADDRESS] [phone/PHONE] [email/EMAIL] [school/SCHOOL] [level/GRADE_LEVEL]`                                          | `new-student name/John Doe address/21 Prince George’s Park email/jdoe@gmail.com phone/12345678 school/ACJC level/sec8` |","lastModifiedDate":"2023-03-29"},{"lineNumber":788,"author":{"gitId":"fahim-tazz"},"content":"| Update student information   | `update-info [index/INDEX] [name/STUDENT_NAME] [f/FIELD] [v/VALUE]`                                                                                                  | `update-info index/1 name/John f/address v/Block 123 #12-34`                                                           |","lastModifiedDate":"2023-04-08"},{"lineNumber":789,"author":{"gitId":"NBQian"},"content":"| Assign homework to a student | `new-homework [name/STUDENT_NAME] [homework/HOMEWORK_NAME] [deadline/DEADLINE]`                                                                                      | `assign-homework name/John homework/listening comprehension ex1 deadline/02-12-2023-2359`                              |","lastModifiedDate":"2023-03-29"},{"lineNumber":790,"author":{"gitId":"NBQian"},"content":"| View student\u0027s homework      | `view-homework [name/STUDENT_NAME] [status/STATUS]`                                                                                                                  | `view-homework name/John status/pending`                                                                               |","lastModifiedDate":"2023-03-29"},{"lineNumber":791,"author":{"gitId":"NBQian"},"content":"| Delete student\u0027s homework    | `delete-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX]`                                                                                                         | `delete-homework name/John index/1`                                                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":792,"author":{"gitId":"NBQian"},"content":"| Mark homework as done        | `mark-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX]`                                                                                                           | `mark-homework name/John index/1`                                                                                      |","lastModifiedDate":"2023-03-29"},{"lineNumber":793,"author":{"gitId":"NBQian"},"content":"| Unmark homework as undone    | `unmark-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX]`                                                                                                         | `unmark-homework name/John index/1`                                                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":794,"author":{"gitId":"NBQian"},"content":"| Update student\u0027s homework    | `update-homework [name/STUDENT_NAME] [index/HOMEWORK_INDEX] [homework/HOMEWORK_NAME] [deadline/DEADLINE]`                                                            | `update-homework name/John index/1 homework/Math Assignment 1`                                                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":795,"author":{"gitId":"NBQian"},"content":"| Create new lesson plan       | `new-lesson [name/STUDENT_NAME] [lesson/LESSON_TITLE] [start/START_TIME] [end/END_TIME]`                                                                             | `new-lesson name/John Doe lesson/The Water Cycle start/25-03-23-1300 end/25-03-23-1500`                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":796,"author":{"gitId":"NBQian"},"content":"| View lessons history         | `view-lesson [name/STUDENT_NAME]`                                                                                                                                    | `view-lesson name/John`                                                                                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":797,"author":{"gitId":"NBQian"},"content":"| Add an exam                  | `new-exam [name/STUDENT_NAME_1] [name/STUDENT_NAME_2].. [exam/EXAM_NAME] [start/START_TIME] [end/END_TIME] (optional)[weightage/WEIGHTAGE] (optional)[grade/GRADE]`  | `new-exam name/John Doe exam/Math MYE start/2023-05-21 12:00 end/2023-05-21 14:00`                                     |","lastModifiedDate":"2023-03-29"},{"lineNumber":798,"author":{"gitId":"NBQian"},"content":"| Remove an exam               | `delete-exam [name/STUDENT_NAME_1] [name/STUDENT_NAME_2].. [index/INDEX_OF_EXAM]`                                                                                    | `delete-exam name/John Doe index/1`                                                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":799,"author":{"gitId":"NBQian"},"content":"| Update an exam               | `update-exam [name/STUDENT_NAME] [index/INDEX_OF_EXAM] (optional)[exam/NEW_EXAM_NAME] (optional)[start/START_TIME] (optional)[end/END_TIME] (optional)[grade/GRADE]` | `update-exam name/John Doe index/1 exam/Math MYE`                                                                      |","lastModifiedDate":"2023-03-29"},{"lineNumber":800,"author":{"gitId":"NBQian"},"content":"| View exams                   | `view-exam [name/STUDENT_NAME] (optional)[date/DATE] (optional)[exam/EXAM_NAME] (optional)[done/DONE_STATUS]`                                                        | `view-exam name/John Doe date/2023-05-01 exam/MYE done/`                                                               |","lastModifiedDate":"2023-03-29"},{"lineNumber":801,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":802,"author":{"gitId":"NBQian"},"content":"### List of Prefixes","lastModifiedDate":"2023-03-29"},{"lineNumber":803,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":804,"author":{"gitId":"NBQian"},"content":"| Prefix       | Meaning     | Usage                                               | Example                           |","lastModifiedDate":"2023-03-29"},{"lineNumber":805,"author":{"gitId":"fahim-tazz"},"content":"|:-------------|-------------|-----------------------------------------------------|-----------------------------------|","lastModifiedDate":"2023-04-05"},{"lineNumber":806,"author":{"gitId":"NBQian"},"content":"| `name/`      | Name        | Student name                                        | `name/John Doe`                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":807,"author":{"gitId":"NBQian"},"content":"| `phone/`     | Phone       | Phone number of a Student                           | `phone/12345678`                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":808,"author":{"gitId":"NBQian"},"content":"| `email/`     | Email       | Email address of a Student                          | `email/johndoe@gmail.com`         |","lastModifiedDate":"2023-03-29"},{"lineNumber":809,"author":{"gitId":"NBQian"},"content":"| `address/`   | Address     | Home address of a Student                           | `address/21 Prince George\u0027s Park` |","lastModifiedDate":"2023-03-29"},{"lineNumber":810,"author":{"gitId":"NBQian"},"content":"| `level/`     | Grade Level | Grade level of a Student                            | `level/sec8`                      |","lastModifiedDate":"2023-03-29"},{"lineNumber":811,"author":{"gitId":"NBQian"},"content":"| `school/`    | School      | School name of a Student                            | `school/ACJC`                     |","lastModifiedDate":"2023-03-29"},{"lineNumber":812,"author":{"gitId":"NBQian"},"content":"| `tag/`       | Tag         | Tag on a Student                                    | `tag/favorite`                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":813,"author":{"gitId":"NBQian"},"content":"| `homework/`  | Homework    | name of Homework assigned to a Student              | `homework/Math Assignment`        |","lastModifiedDate":"2023-03-29"},{"lineNumber":814,"author":{"gitId":"NBQian"},"content":"| `deadline/`  | Deadline    | Due date                                            | `deadline/02-12-2023 2359`        |","lastModifiedDate":"2023-03-29"},{"lineNumber":815,"author":{"gitId":"NBQian"},"content":"| `exam/`      | Exam        | Exam name                                           | `exam/Math MYE`                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":816,"author":{"gitId":"NBQian"},"content":"| `status/`    | Status      | Indicates whether a homework is completed           | `status/pending`                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":817,"author":{"gitId":"Yufannnn"},"content":"| `index/`     | Index       | Index of a student/homework/lesson/exam             | `index/1`                         |","lastModifiedDate":"2023-04-08"},{"lineNumber":818,"author":{"gitId":"NBQian"},"content":"| `lesson/`    | Lesson      | Lesson title                                        | `lesson/The Water Cycle`          |","lastModifiedDate":"2023-03-29"},{"lineNumber":819,"author":{"gitId":"NBQian"},"content":"| `start/`     | Start Time  | Start time of a lesson/exam                         | `start/2025-03-23 1300`           |","lastModifiedDate":"2023-03-29"},{"lineNumber":820,"author":{"gitId":"NBQian"},"content":"| `end/`       | End Time    | End time of a lesson/exam                           | `end/2025-03-23 1500`             |","lastModifiedDate":"2023-03-29"},{"lineNumber":821,"author":{"gitId":"NBQian"},"content":"| `date/`      | Date        | Date of a lesson/exam                               | `date/2023-03-29`                 |","lastModifiedDate":"2023-03-29"},{"lineNumber":822,"author":{"gitId":"NBQian"},"content":"| `subject/`   | Subject     | Subject of a lesson                                 | `subject/Mathematics`             |","lastModifiedDate":"2023-03-29"},{"lineNumber":823,"author":{"gitId":"NBQian"},"content":"| `done/`      | Done        | indicates if a lesson/exam is past the current time | `done/done`                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":824,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":825,"author":{"gitId":"Yufannnn"},"content":"### Supported date-time formats","lastModifiedDate":"2023-03-30"},{"lineNumber":826,"author":{"gitId":"szejiancheng"},"content":"* `MMM dd yyyy HHmm`","lastModifiedDate":"2023-03-28"},{"lineNumber":827,"author":{"gitId":"szejiancheng"},"content":"* `MMM dd yyyy HH:mm`","lastModifiedDate":"2023-03-28"},{"lineNumber":828,"author":{"gitId":"szejiancheng"},"content":"* `yyyy-MM-dd\u0027T\u0027HH:mm `","lastModifiedDate":"2023-03-28"},{"lineNumber":829,"author":{"gitId":"szejiancheng"},"content":"* `dd/MM/yyyy HHmm`","lastModifiedDate":"2023-03-28"},{"lineNumber":830,"author":{"gitId":"szejiancheng"},"content":"* `dd/MM/yyyy HH:mm`","lastModifiedDate":"2023-03-28"},{"lineNumber":831,"author":{"gitId":"szejiancheng"},"content":"* `yyyy/MM/dd HHmm`","lastModifiedDate":"2023-03-28"},{"lineNumber":832,"author":{"gitId":"szejiancheng"},"content":"* `yyyy/MM/dd HH:mm `","lastModifiedDate":"2023-03-28"},{"lineNumber":833,"author":{"gitId":"szejiancheng"},"content":"* `yyyy/MM/dd\u0027T\u0027HHmm`","lastModifiedDate":"2023-03-28"},{"lineNumber":834,"author":{"gitId":"szejiancheng"},"content":"* `yyyy/MM/dd\u0027T\u0027HH:mm `","lastModifiedDate":"2023-03-28"},{"lineNumber":835,"author":{"gitId":"szejiancheng"},"content":"* `yyyy-MM-dd HHmm`","lastModifiedDate":"2023-03-28"},{"lineNumber":836,"author":{"gitId":"szejiancheng"},"content":"* `yyyy-MM-dd HH:mm `","lastModifiedDate":"2023-03-28"},{"lineNumber":837,"author":{"gitId":"szejiancheng"},"content":"* `dd MMM yyyy HHmm`","lastModifiedDate":"2023-03-28"},{"lineNumber":838,"author":{"gitId":"szejiancheng"},"content":"* `dd MMM yyyy HH:mm `","lastModifiedDate":"2023-03-28"},{"lineNumber":839,"author":{"gitId":"szejiancheng"},"content":"* `MMM dd, yyyy HHmm`","lastModifiedDate":"2023-03-28"},{"lineNumber":840,"author":{"gitId":"szejiancheng"},"content":"* `MMM dd, yyyy HH:mm `","lastModifiedDate":"2023-03-28"},{"lineNumber":841,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"fahim-tazz":56,"szejiancheng":81,"NBQian":121,"Yufannnn":459,"-":124}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"fahim-tazz"},"content":"    content: \"TutorPro\";","lastModifiedDate":"2023-04-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"fahim-tazz":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"szejiancheng":1,"-":38}},{"path":"docs/diagrams/ClickButtonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":":User clicks a button;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":":Student Card creates the Header Bar;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section sets the Header Bar;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"if () then ([ProfileButton])","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section creates Profile Content;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section sets the Profile Content;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"else() then ([HomeworkButton, LessonsButton, ExamsButton])","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"if () then ([Student has no homework, lessons or exams])","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section creates Empty Content;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section sets the Empty Content;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"else ([Student has homework])","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section gets information about homework, lessons or exams;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section creates Filled Content;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section sets the Filled Content;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":":Detailed Info Section sets the Detailed Content;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":29}},{"path":"docs/diagrams/CreateLessonAD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":":User inputs new-lesson command;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":":Instantiates a CreateLessonCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":":Creates a Lesson object according to user inputs;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":":Adds the lesson to the specified Student\u0027s list of lessons;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":":Update the UI to inform user the Lesson is successfully added;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"NBQian":12}},{"path":"docs/diagrams/CreateLessonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"participant \":Logic Manager\" as lm LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"participant \":CreateLessonCommandParser\" as clp LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"participant \":c:CreateLessonCommand\" as clc LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"participant \":CommandResult\" as cr LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"participant \":Student\" as s MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"participant \":UniqueLessonList\" as ll MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"participant \":Lesson\" as l MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"[-\u003e lm : execute(\"new-lesson\\nname/John\\nlesson/Math Lesson\\nstart/2023-05-01 1200\\nend/2023-05-01 1400\")","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"activate lm","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"lm -\u003e abp : parseCommand(\"new-lesson\\nname/John\\nlesson/Math Lesson\\nstart/2023-05-01 1200\\nend/2023-05-01 1400\")","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"activate abp","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"create clp","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"abp -\u003e clp","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"activate clp","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"clp --\u003e abp","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"deactivate clp","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"abp -\u003e clp : parse(\"new-lesson\\nname/John\\nlesson/Math Lesson\\nstart/2023-05-01 1200\\nend/2023-05-01 1400\")","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"activate clp","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"create clc","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"clp -\u003e clc","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"activate clc","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"clc --\u003e clp : d","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"deactivate clc","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"clp --\u003e abp : d","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"deactivate clp","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"clp -[hidden]-\u003e abp","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"destroy clp","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"abp --\u003e lm : d","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"deactivate abp","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"lm -\u003e clc : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"activate clc","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"create l","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"clc -\u003e l","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"activate l","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"l --\u003e clc : l","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"deactivate l","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"clc -\u003e s : addLesson(l)","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"activate s","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"s -\u003e ll : addLesson(l)","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"activate ll","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"ll --\u003e s","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"deactivate ll","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"s --\u003e clc","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"deactivate s","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"create cr","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"clc -\u003e cr","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"activate cr","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"cr --\u003e clc","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"deactivate cr","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"clc --\u003e lm : result","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"deactivate clc","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"[\u003c--lm","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"NBQian":89}},{"path":"docs/diagrams/ExamsClickSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"participant \":StudentLisCard\" as StudentListCard UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"participant \":HeaderBar\" as HeaderBar UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"participant \":DetailedInfoSection\" as DetailedInfoSection UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"participant \":FilledExamsContent\" as FilledExamsContent UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"participant \":EmptyExamsContent\" as EmptyExamsContent UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"participant \":Student\" as Student MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"participant \":Name\" as Name MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"[-\u003e StudentListCard : handleViewLessonsButtonClick()","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"activate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e Student : getFullName()","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"create HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"activate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"deactivate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"alt student has lessons","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    create FilledExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    StudentListCard -\u003e FilledExamsContent : new FilledExamsContent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    activate FilledExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    FilledExamsContent -\u003e Student : getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    FilledExamsContent -\u003e Student : getExamsList()","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    return examsList","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    FilledExamsContent -\u003e Student : getUpcomingExamsList()","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    return upcomingLessonsList","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    FilledExamsContent --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    deactivate FilledExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"else student has no lessons","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    create EmptyExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    StudentListCard -\u003e EmptyExamsContent : new EmptyExamsContent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    activate EmptyExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    EmptyExamsContent -\u003e Student : getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"    Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    EmptyExamsContent --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"    deactivate EmptyExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"end","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"[\u003c-- StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"deactivate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":120}},{"path":"docs/diagrams/HomeworkClickSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"participant \":StudentLisCard\" as StudentListCard UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"participant \":HeaderBar\" as HeaderBar UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"participant \":DetailedInfoSection\" as DetailedInfoSection UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"participant \":FilledHomeworkContent\" as FilledHomeworkContent UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"participant \":EmptyHomeworkContent\" as EmptyHomeworkContent UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"participant \":Student\" as Student MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"participant \":Name\" as Name MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"[-\u003e StudentListCard : handleViewHomeworkButtonClick()","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"activate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e Student : getFullName()","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"create HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"activate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"deactivate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"alt student has homework","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    create FilledHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    StudentListCard -\u003e FilledHomeworkContent : new FilledHomeworkContent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    activate FilledHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    FilledHomeworkContent -\u003e Student : getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    FilledHomeworkContent -\u003e Student : getHomeworkPieChatData()","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    return homeworkPieChatData","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    FilledHomeworkContent -\u003e Student : getHomeworkList()","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    return homeworkList","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    FilledHomeworkContent --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    deactivate FilledHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"else student has no homework","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    create EmptyHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    StudentListCard -\u003e EmptyHomeworkContent : new EmptyHomeworkContent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    activate EmptyHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    EmptyHomeworkContent -\u003e Student : getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"    Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    EmptyHomeworkContent --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"    deactivate EmptyHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"end","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"[\u003c-- StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"deactivate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":120}},{"path":"docs/diagrams/LessonsClickSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"participant \":StudentLisCard\" as StudentListCard UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"participant \":HeaderBar\" as HeaderBar UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"participant \":DetailedInfoSection\" as DetailedInfoSection UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"participant \":FilledLessonsContent\" as FilledLessonsContent UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"participant \":EmptyLessonsContent\" as EmptyLessonsContent UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"participant \":Student\" as Student MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"participant \":Name\" as Name MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"[-\u003e StudentListCard : handleViewLessonsButtonClick()","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"activate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e Student : getFullName()","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"create HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"activate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"deactivate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"alt student has lessons","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    create FilledLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    StudentListCard -\u003e FilledLessonsContent : new FilledLessonsContent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    activate FilledLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    FilledLessonsContent -\u003e Student : getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    FilledLessonsContent -\u003e Student : getPastLessonsList()","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    return pastLessonsList","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    FilledLessonsContent -\u003e Student : getUpcomingLessonsList()","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    return upcomingLessonsList","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    FilledLessonsContent --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    deactivate FilledLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"else student has no lessons","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    create EmptyLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    StudentListCard -\u003e EmptyLessonsContent : new EmptyLessonsContent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    activate EmptyLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    EmptyLessonsContent -\u003e Student : getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"    activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"    Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    EmptyLessonsContent --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"    deactivate EmptyLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"end","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setContent()","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"[\u003c-- StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"deactivate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":120}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as model","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"Class UniqueStudentList","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"Class Student","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"Class Homework","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"Class Exam","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"Class Lesson","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"Class UniqueHomeworkList","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"Class UniqueLessonsList","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"Class UniqueExamList","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"HiddenOutside .down.|\u003e model","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"ModelManager .up.|\u003e model","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"AddressBook *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"1\" Phone","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"1\" Email","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"1\" Address","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"1\" UniqueHomeworkList","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"UniqueHomeworkList *--\u003e \"*\" Homework","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"1\" UniqueLessonsList","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"UniqueLessonsList *--\u003e \"*\" Lesson","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"Student *--\u003e \"1\" UniqueExamList","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"UniqueExamList *--\u003e \"*\" Exam","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"Email -[hidden]right-\u003e Address","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"szejiancheng":41,"-":31}},{"path":"docs/diagrams/ProfileClickSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"participant \":StudentLisCard\" as StudentListCard UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"participant \":HeaderBar\" as HeaderBar UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"participant \":DetailedInfoSection\" as DetailedInfoSection UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"participant \":ProfileContent\" as ProfileContent UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"participant \":Student\" as Student MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"participant \":Name\" as Name MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"[-\u003e StudentListCard : handleViewProfileButtonClick()","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"activate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e Student : getFullName()","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"Student --\u003e Name : getFirstName()","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"activate Name","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"return firstName","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedHeaderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setHearderBar(firstName)","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"create HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"activate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"deactivate HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"create ProfileContent","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e ProfileContent : new ProfileContent(student)","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"activate ProfileContent","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"ProfileContent -\u003e Student : getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"return name","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"ProfileContent -\u003e Student : getPhone()","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"return phone","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"ProfileContent -\u003e Student : getEmail()","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"return email","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"ProfileContent -\u003e Student : getAddress()","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"activate Student","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"return address","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"ProfileContent -\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"deactivate ProfileContent","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"StudentListCard -\u003e MainWindow : setDetailedContent(ProfileContent)","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"activate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"MainWindow -\u003e DetailedInfoSection : setDetailedContent(ProfileContent)","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection -\u003e DetailedInfoSection : setContent(ProfileContent)","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"activate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --\u003e MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"deactivate DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"MainWindow --\u003e StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"[\u003c-- StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"deactivate StudentListCard","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":98}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Class StudentListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"Class StudentCard","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"Class DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection \u003c.. StudentCard","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yufannnn":13,"-":52}},{"path":"docs/diagrams/UiDetailedInfoSectionDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"Class UiManager","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"Class MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"Class DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Class DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"Class HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"Class WelcomeContent","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"Class ProfileContent","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"Class GeneralHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"Class GeneralLessonContent","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"Class GeneralExamContent","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"Class EmptyHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"Class EmptyLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"Class EmptyExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"Class FilledHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"Class FilledLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"Class FilledExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"DetailedContent --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"WelcomeContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"ProfileContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"GeneralHomeworkContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"GeneralLessonContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"GeneralExamContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"EmptyExamsContent -up-|\u003e GeneralExamContent","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"EmptyHomeworkContent -up-|\u003e GeneralHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"EmptyLessonsContent -up-|\u003e GeneralLessonContent","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"FilledExamsContent -up-|\u003e GeneralExamContent","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"FilledHomeworkContent -up-|\u003e GeneralHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"FilledLessonsContent -up-|\u003e GeneralLessonContent","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":70}},{"path":"docs/diagrams/UiFilledExamsContent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"Class UiManager","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"Class MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"Class DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Class DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"Class HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"Class GeneralExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"Class FilledExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"Class PastExamsListPanel","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"Class UpcomingExamsListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"Class ExamCard","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"FilledExamsContent *-down-\u003e \"1\" PastExamsListPanel","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"FilledExamsContent *-down-\u003e \"1\" UpcomingExamsListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"PastExamsListPanel -down-\u003e \"*\" ExamCard","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"UpcomingExamsListPanel -down-\u003e \"*\" ExamCard","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"DetailedContent --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"PastExamsListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"UpcomingExamsListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"ExamCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"GeneralExamsContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"FilledExamsContent -up-|\u003e GeneralExamsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":61}},{"path":"docs/diagrams/UiFilledHomeworkContent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"Class UiManager","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"Class MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"Class DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Class DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"Class HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"Class GeneralHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"Class FilledHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"Class HomeworkListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"Class HomeworkCard","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"Class HomeworkPieChart","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"FilledHomeworkContent *-down-\u003e \"1\" HomeworkListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"FilledHomeworkContent *-down-\u003e \"1\" HomeworkPieChart","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"HomeworkListPanel -down-\u003e \"*\" HomeworkCard","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"DetailedContent --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"HomeworkListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"HomeworkCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"HomeworkPieChart --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"GeneralHomeworkContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"FilledHomeworkContent -up-|\u003e GeneralHomeworkContent","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":60}},{"path":"docs/diagrams/UiFilledLessonsContent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"Class UiManager","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"Class MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"Class DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Class DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"Class HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"Class GeneralLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"Class FilledLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"Class PastLessonsListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"Class UpcomingLessonsListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"Class LessonsCard","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"FilledLessonsContent *-down-\u003e \"1\" PastLessonsListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"FilledLessonsContent *-down-\u003e \"1\" UpcomingLessonsListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"PastLessonsListPanel -down-\u003e \"*\" LessonsCard","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"UpcomingLessonsListPanel -down-\u003e \"*\" LessonsCard","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"DetailedContent --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"PastLessonsListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"UpcomingLessonsListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"LessonsCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"GeneralLessonsContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"FilledLessonsContent -up-|\u003e GeneralLessonsContent","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":61}},{"path":"docs/diagrams/UiProfileContent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"Class UiManager","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"Class MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"Class DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Class DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"Class HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"Class ProfileContent","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"Class Name MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"Class Email MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"Class Phone MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"Class Address MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" DetailedInfoSection","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" HeaderBar","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection *-down-\u003e \"1\" DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"ProfileContent *-right-\u003e \"1\" Name","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"ProfileContent *-right-\u003e \"1\" Email","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"ProfileContent *-right-\u003e \"1\" Phone","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"ProfileContent *-right-\u003e \"1\" Address","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"HeaderBar --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"DetailedContent --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"DetailedInfoSection ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"ProfileContent -up-|\u003e DetailedContent","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":56}},{"path":"docs/diagrams/UiQuickAccessButton.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"Class UiManager","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"Class MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"Class StudentListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"Class StudentCard","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Class ProfileButton","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"Class HomeworkButton","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"Class LessonsButton","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"Class ExamsButton","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"StudentCard *-down-\u003e \"1\" ProfileButton","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"StudentCard *-down-\u003e \"1\" HomeworkButton","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"StudentCard *-down-\u003e \"1\" LessonsButton","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"StudentCard *-down-\u003e \"1\" ExamsButton","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"ProfileButton --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"HomeworkButton --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"LessonsButton --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"ExamsButton --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":56}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Yufannnn":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"title: TutorPro","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W13-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W13-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"\u003cimg src\u003d\"images/Thumbnail.png\" alt\u003d\"TutorPro\" width\u003d\"50\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"* TutorPro is a desktop application for managing contacts of students and classes, optimised for use via a Command Line Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"* For the detailed documentation of this project, see the **[TutorPro Website](https://ay2223s2-cs2103t-w13-4.github.io/tp/)**.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fahim-tazz":1,"NBQian":1,"Yufannnn":5,"-":13}},{"path":"docs/team/fahim-tazz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"---","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"layout: page","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"title: Muhammad Fahim Tajwar\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"---","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"### Project: TutorPro","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"fahim-tazz"},"content":"TutorPro is a desktop app designed to help private tutors manage their student information effectively. With TutorPro, tutors can easily keep track of their students\u0027 addresses, contact details, lessons, homework, and progress, all in one place. This app is optimised for use via a Graphical User Interface (GUI), allowing tutors to interact with the app using easy-to-understand buttons and menus. However, TutorPro also provides a Command Line Interface (CLI) for those who prefer a faster way of getting things done. Whether you\u0027re managing a handful of students or hundreds, TutorPro can help you streamline your workflow and make your tutoring experience more efficient.","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"* **New Feature**: Adds the ability to add a lessonn for a particular student.","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"    - What it does: Allows user to add a lesson to a particular student, including details such as the title of the lesson, it\u0027s start time, and it\u0027s end time.","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"    - Justification: This feature enables tutors to effectively plan future lessons for a particular student, keeping track of when he should be teaching which student.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"    - Highlights: This feature required the new class `CreateLessonCommand` and various modifications to handle the addition of lessons.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"    -Credits: N/A","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"* **New Feature**: Adds the ability to view a student\u0027s lessons","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"    -What it does: Enables users to view all lessons planned for a student by clicking on the \"VIEW LESSONS\" button next to their name.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"    -Justification: This feature provides users with quick access to lessons planned for a student so what the tutor can know how many lessons he has taught the student, how many upcoming lessons there are, and when is the next lesson going to take place, so that he can better plan his schedule.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"    -Highlights: This feature required modification to the existing codebase to add the \"VIEW LESSONS\" button and implement the functionality to display the lessons associated with a student.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"    -Credits: N/A","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"    ","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"* **Project management**:","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"    * Set up Team Repo","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"    * Updated Workflow","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"    * Create PR to the upstream Repo","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"  * User Guide:","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"  ","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"* **Community**:","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"  * PRs reviewed (with non-trivial review comments): )","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"  * Reported bugs and suggestions for other teams in the class ()","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"fahim-tazz"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ()","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"fahim-tazz"},"content":"  ","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"fahim-tazz"},"content":"* **Tools**:","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"fahim-tazz":44}},{"path":"docs/team/nbqian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"title: Niu Boqian\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"### Project: TutorPro","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"TutorPro is a desktop app designed to help private tutors manage their student information effectively. With TutorPro, tutors can easily keep track of their students\u0027 addresses, contact details, lessons, homework, and progress, all in one place. This app is optimised for use via a Graphical User Interface (GUI), allowing tutors to interact with the app using easy-to-understand buttons and menus. However, TutorPro also provides a Command Line Interface (CLI) for those who prefer a faster way of getting things done. Whether you\u0027re managing a handful of students or hundreds, TutorPro can help you streamline your workflow and make your tutoring experience more efficient.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to add a lesson for a particular student (new-lesson)","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    - What it does: Allows user to add a lesson to a particular student, including details such as the title of the lesson, it\u0027s start time, and it\u0027s end time.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    - Justification: This feature enables tutors to effectively plan future lessons for a particular student, keeping track of when he should be teaching which student.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    - Highlights: This feature required the new class `CreateLessonCommand` and various modifications to handle the addition of lessons.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    -Credits: N/A","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to view a student\u0027s lessons (view-lessons)","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    - What it does: Enables users to view lessons of students by typing in the command `view-lessons`, with parameters such as the student\u0027s name and the lesson\u0027s title, lesson name, date of lesson, and whether the lesson has been completed or not.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    - Justification: This feature provides users with quick access to lessons planned for a student so what the tutor can know how many lessons he has taught the student, how many upcoming lessons there are, and when is the next lesson going to take place, so that he can better plan his schedule.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"    - Highlights: This feature required modification to the existing codebase to add the `ViewLessonCommand` command and implement the functionality to display the lessons associated with a student. The command is highly flexible, allowing users to view lessons by student name, lesson title, lesson name, date of lesson, and whether the lesson has been completed or not. Each of these fields can be left blank, in which case the command will display all lessons associated with all students.","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"    - Credits: N/A","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to delete a student\u0027s lessons (delete-lessons)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"  - What it does: Enables users to delete a student\u0027s lessons by typing in the command `delete-lesson`, with index of the lesson to be deleted.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"  - Justification: This feature allows users to delete lessons planned for a student so that they can remove lessons that have already taken place or that they no longer need to plan for.","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"  - Highlights: This feature required modification to the existing codebase to add the `DeleteLessonCommand` command and implement the functionality to delete lessons associated with a student.","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"  - Credits: N/A","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to update a student\u0027s lessons\u0027 details (update-lessons)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"  - What it does: Enables users to update a student\u0027s lessons\u0027 details by typing in the command `update-lesson`, with parameters such as the student\u0027s name and the updated lesson\u0027s title, lesson name, start time, and end time.","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"  - Justification: This feature allows users to update lessons planned for a student so that they can modify the details of a lesson without needing to delete and re-add it.","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"  - Highlights: This feature required modification to the existing codebase to add the `UpdateLessonCommand` command and implement the functionality to update the lessons associated with a student.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"  - Credits: N/A","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to add an exam for a particular student (new-exam)","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"  - What it does: Allows user to add an exam to a particular student, including details such as the title of the exam, it\u0027s start time, and it\u0027s end time.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"  - Justification: This feature enables tutors to effectively plan future lessons for a particular student based on what exams the student needs to prepare for.","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"  - Highlights: This feature required the new class `CreateExamCommand` and various modifications to handle the addition of exams.","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"    -Credits: N/A","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to view a student\u0027s exams (view-exams)","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"  - What it does: Enables users to view all exams planned for a student by using the `view-exam` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"  - Justification: This feature provides users with quick access to exams planned for a student so what the tutor can know how many exams a student needs to prepare for, and and plan his lessons to prepare the student for the exams.","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"  - Highlights: This feature required modification to the existing codebase to add the `ViewExamCommand` command and implement the functionality to display the exams associated with a student. The command is highly flexible, allowing users to view exams by student name, exam title, exam name, date of exam, and whether the exam has been completed or not. Each of these fields can be left blank, in which case the command will display all exams associated with all students.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"  - Credits: N/A","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to delete a student\u0027s exams (delete-exams)","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"  - What it does: Enables users to delete a student\u0027s exams by typing in the command `delete-exam`, with index of the exam to be deleted.","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"  - Justification: This feature allows users to delete exams planned for a student so that they can remove exams that have already taken place or that they no longer need to plan for.","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"  - Highlights: This feature required modification to the existing codebase to add the `DeleteExamCommand` command and implement the functionality to delete exams associated with a student.","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"  - Credits: N/A","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"* **New Feature**: Adds the ability to update a student\u0027s exams\u0027 details (update-exams)","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"  - What it does: Enables users to update a student\u0027s exams\u0027 details by typing in the command `update-exam`, with parameters such as the exam\u0027s title, start time, and end time.","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"  - Justification: This feature allows users to update exams planned for a student so that they can modify the details of an exam without needing to delete and re-add it.","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"  - Highlights: This feature required modification to the existing codebase to add the `UpdateExamCommand` command and implement the functionality to update the exams associated with a student.","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"  - Credits: N/A","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnbqian\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"* **Project management**:","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"    * Created and assigned issues to team members on GitHub and kept track of their progress","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"    * Created labels and categorized issues on GitHub","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"    * Changed the find, edit, delete command such that they now require the user to use prefixes to specify the fields to search for, edit, or delete","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"    * Added lesson unique lists in teh application, added, and updated relevant methods in a logical model, storage, and other classes ot fit the change.","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"  * User Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"    * Added documentation for the features `new-lesson`, `view-lesson`, `delete-lesson`, `update-lesson`, `new-exam`, `view-exam`, `delete-exam`, `update-exam`: [#184](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/184)","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"    * Added Glossary, List of Commands, and List of Prefixes as 3 separate tables: [#117](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/117)","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"    * Added implementation for `CreateLessonCommand` [#89](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/89)","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"  ","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"* **Community**:","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"  * Reported bugs and suggestions for other teams in the class:","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"    [#1](https://github.com/NBQian/ped/issues/1)","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"    [#2](https://github.com/NBQian/ped/issues/2)","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"    [#3](https://github.com/NBQian/ped/issues/3)","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"    [#4](https://github.com/NBQian/ped/issues/4)","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"    [#5](https://github.com/NBQian/ped/issues/5)","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"    [#6](https://github.com/NBQian/ped/issues/6)","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"    [#7](https://github.com/NBQian/ped/issues/7)","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"    [#8](https://github.com/NBQian/ped/issues/8)","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"* **Tools**:","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"* Use PlantUML to add more UML diagrams in the developer guide.","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"NBQian":93}},{"path":"docs/team/szejiancheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"---","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"layout: page","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"title: Sze Jian Cheng\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"---","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"### Project: TutorPro","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"TutorPro is a desktop app designed to help private tutors manage their student information effectively. With TutorPro, tutors can easily keep track of their students\u0027 addresses, contact details, lessons, homework, and progress, all in one place. This app is optimised for use via a Graphical User Interface (GUI), allowing tutors to interact with the app using easy-to-understand buttons and menus. However, TutorPro also provides a Command Line Interface (CLI) for those who prefer a faster way of getting things done. Whether you\u0027re managing a handful of students or hundreds, TutorPro can help you streamline your workflow and make your tutoring experience more efficient.","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"* **New Feature**: Adds the ability to add a exam for a particular student.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"    - What it does: Allows user to add a lesson to a particular student, including details such as the description of ","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"      the ","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"      lesson, it\u0027s start time, and it\u0027s end time.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    - Justification: This feature enables tutors to effectively track of upcoming and completed exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"    - Highlights: This feature required additional classes for parsing and data storage that needed to be ","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"      implemented in order to function with the existing project structure. ","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    - Credits: @nbqian for providing the basic skeleton for similar student attributes","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    ","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"* **Project management**:","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    * User Guide:","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"    * UML diagrams","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"* **Community**:","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    * PRs reviewed (with non-trivial review comments): )","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    * Reported bugs and suggestions for other teams in the class ()","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"* **Tools**:","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"szejiancheng":37}},{"path":"docs/team/yufannnn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"title: Zhu Yufan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"### Project: TutorPro","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"TutorPro is a desktop app designed to help private tutors manage their student information effectively.","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"Offers both a Command Line Interface (CLI) and a Graphical User Interface (GUI) for managing student information.","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"The CLI provides a fast and efficient way to keep track of students\u0027 details, homework, lessons, and exams,","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"while the GUI offers an intuitive visual interface.","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"Whether tutoring a few or many students, TutorPro can streamline workflow.","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"*  **Idea**: Come up with the idea of enhancing AB3 to a student management application for private tutors.","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"*  **New Feature**: Homework Feature and Homework Related commands (new-homework, view-homework, delete-homework, make-homework, unmark-homework, and update-homework commands)","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    - what it does: The Homework Feature and Homework related commands are designed to help tutors manage their student homework tasks more efficiently. It allows tutors to create, view, update, and delete homework tasks using a set of commands. The new commands include:","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    - Justification: The Homework Feature is aimed at addressing the common problem of managing multiple homework tasks for private tutors. With this feature, users can easily keep track of their students\u0027 assignments and deadlines, prioritize their work, and avoid missing important submission dates.","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    - Highlights: The Homework Feature is easy to use and can be accessed through a set of simple commands. The feature helps tutors stay organized and on top of the students\u0027 homework tasks, reducing the risk of missing important deadlines.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    - Credit: N/A","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"*  **New Feature**: Redesigned GUI and Detailed Information Section","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    - what it does: The new feature redesigns the UI of the application and adds a Detailed Information Section that provides more specific information about each student. The Detailed Information Section includes a Profile Page, a Homework Page, a Lesson Page, and an Exam Page. Each page is accessible through quick access buttons on the student card.","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    - Justification: The redesigned UI and Detailed Information Section are aimed at improving the user experience of the application, making the application more aesthetically appealing. It provides a more user-friendly interface for tutors to manage their students\u0027 information and allows for more efficient navigation between different types of information.","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    - Highlights: The Detailed Information Section provides more specific information about each student, including their personal information, homework assignments, past and upcoming lessons, and past and upcoming exams.","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    - Credit: N/A","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"* **New Feature**: New Feature: Quick Access Button on Each Student Card","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"  - What it does: The Quick Access Button is a new feature that provides a more user-friendly interface for tutors to access student-specific information. It adds four buttons on each student card, including profile, homework, lessons, and exams. By clicking on any of these buttons, the user can quickly access the corresponding information for the selected student.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"  - Justification: The Quick Access Button feature is aimed at improving the user experience for tutors who need to manage multiple students\u0027 profiles, homework, lessons, and exams. It helps to streamline the process of accessing student-specific information and eliminates the need for users to search through long lists to find the information they need.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"  - Highlights: The Quick Access Button is easy to use and provides users with quick access to the information they need. The feature is intuitive and visually appealing, making it easy for users to navigate through the app and access the relevant information. ","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"  - Credit: N/A","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dYufannnn\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dYufannnn\u0026zR\u003dAY2223S2-CS2103T-W13-4%2Ftp%5Bmaster%5D\u0026zACS\u003d247.67299412915852\u0026zS\u003d2023-02-17\u0026zFS\u003d\u0026zU\u003d2023-04-05\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"* **Project management**:","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    * Set up Team Repo","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    * Updated Workflow: [#1](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/1)","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    * Created and assigned issues to team members on GitHub and kept track of their progress","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    * Created labels and categorized issues on GitHub","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    * Created and manages milestones on GitHub, changed their due dates, and closed them to wrap-up.","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    * Managed releases `v1.3.Trail` on GitHub ([Link to v1.3 release](https://github.com/AY2223S2-CS2103T-W13-4/tp/releases/tag/v1.3.trial))","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    * Refactor the Person model to a Student model and added relevant methods in a logic model, storage and other class to fit the change: [#1](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/1)","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    * Added homework unique lists in the application, added, and updated relevant methods in logic, model, storage and other class to fit the changes: [#13](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/13)","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    * Redesign the GUI to make it more aesthetically appealing and add more sections on the GUI: [#56](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/13)","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"  * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    * Updated the `Quick Start` section and update TOC: [#170](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/170)","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    * Added documentation for the new GUI I redesigned: [#124](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/124)","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    * Added documentation for the new six homework commands I created: [#170](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/170)","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"    * Added implementation for `Detailed Information Section and Quick Access Button`: [#80](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/80), [#81](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/81)","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    * Updated `UI component Section`: [#80](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/80), [#81](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/81)","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"  * PRs reviewed (with non-trivial review comments): ","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    [#44](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/44),","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    [#70](https://github.com/AY2223S2-CS2103T-W13-4/tp/pull/70).","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"  * Reported bugs and suggestions for other teams in the class:","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    [#106](https://github.com/AY2223S2-CS2103T-W10-3/tp/issues/106),","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    [#116](https://github.com/AY2223S2-CS2103T-W10-3/tp/issues/116), ","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    [#118](https://github.com/AY2223S2-CS2103T-W10-3/tp/issues/118),","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    [#120](https://github.com/AY2223S2-CS2103T-W10-3/tp/issues/120),","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    [#123](https://github.com/AY2223S2-CS2103T-W10-3/tp/issues/123), ","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    [#131](https://github.com/AY2223S2-CS2103T-W10-3/tp/issues/131).","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"  * Some manual testing was done to ensure that the UI worked fine.","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"  * Use JavaFX and Scene Builder to modify the UI.","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"  * Use PlantUML to add more UML diagrams in the developer guide.","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"Yufannnn":71}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Yufannnn"},"content":"Create a new `Remark` in `seedu.address.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-02-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Yufannnn"},"content":"Simply add the following to [`seedu.address.ui.student.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Yufannnn":2,"-":399}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yufannnn":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editStudentDescriptor);","lastModifiedDate":"2023-02-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yufannnn":1,"-":300}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TutorPro ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TutorPro\");","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TutorPro\");","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TutorPro\");","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TutorPro\");","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Yufannnn"},"content":"        logger.info(\"Starting TutorPro \" + MainApp.VERSION);","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"Yufannnn"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TutorPro ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":7,"-":176}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%d students listed!\\n%s\";","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_ADDED_SUCCESS \u003d \"New homework added:\\n%s\\n\"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"            + \"To the following students:\\n%s\";","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_LISTED_OVERVIEW \u003d \"%d homework from %d student listed:\\n%s\";","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_ALL_HOMEWORK_LISTED_OVERVIEW \u003d \"%d homework listed:\\n%s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_NO_HOMEWORK_FOUND \u003d \"No homework found\";","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_INVALID_HOMEWORK_DISPLAYED_INDEX \u003d \"The homework index provided is invalid\";","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_DELETED_SUCCESS \u003d \"Homework : %s. %s\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"            + \"Deleted from the %s\\n\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_LESSON_ADDED_SUCCESS \u003d \"New lesson added: \\n%s \\n\"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"            + \"To the following students: \\n%s\";","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_ALREADY_MARKED_AS_DONE \u003d","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"            \"Homework %s\\nof student %s is already marked as done\\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_MARKED_AS_DONE \u003d \"Homework %s of\\nstudent %s is marked as done\\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_MARKED_AS_UNDONE \u003d \"Homework %s of\\nstudent %s is marked as undone\\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_ALREADY_MARKED_AS_UNDONE \u003d","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"            \"Homework %s of\\bstudent %s is already marked as undone\\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_INVALID_STUDENT_NAME \u003d \"No student found!\\n\";","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_NO_LESSON_FOUND \u003d \"No lesson is found!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_ALL_LESSONS_LISTED_OVERVIEW \u003d \"%d lessons from all students listed:\\n%s\";","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_LESSONS_LISTED_OVERVIEW \u003d \"%d lessons from %d students listed: \\n%s\";","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_LESSON_DELETED_SUCCESS \u003d \"Lesson: %s, %s\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"            + \"Deleted from the %s\\n\";","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_INVALID_LESSON_DISPLAYED_INDEX \u003d \"The lesson index provided is invalid\";","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_INVALID_EXAM_DISPLAYED_INDEX \u003d \"The exam index provided is invalid\";","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_EXAM_DELETED_SUCCESS \u003d \"Exam: %s, %s\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"            + \"Deleted from the %s\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"    public static final String MESSAGE_EXAM_ADDED_SUCCESS \u003d \"New exam added: \\n%s \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"            + \"To the following students: \\n%s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_EXAMS_LISTED_OVERVIEW \u003d \"%d exams from %d students listed: \\n%s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_ALL_EXAMS_LISTED_OVERVIEW \u003d \"%d exams from all students listed:\\n%s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_NO_EXAM_FOUND \u003d \"No exam is found!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"    public static final String MESSAGE_EXAM_NOT_COMPLETED \u003d \"Exam is not yet completed, a grade cannot be assigned!\";","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"    public static final String MESSAGE_EXAM_UPDATED_SUCCESS \u003d \"Exam %s of student %s is updated to:\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"            + \"Exam name: %s\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"            + \"Start Time: %s\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"            + \"End Time: %s\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"            + \"Weightage: %s\" + \"%%\" + \"\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"            + \"Grade: %s\\n\";","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_HOMEWORK_UPDATED_SUCCESS \u003d \"Homework %s of student %s is updated to:\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"            + \"Homework name: %s\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"            + \"Deadline: %s\\n\";","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_LESSON_UPDATED_SUCCESS \u003d \"Lesson %s of student %s is updated to:\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"            + \"Lesson name: %s\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"            + \"Start Time: %s\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"            + \"End Time: %s\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_HAS_DUPLICATE_NAMES \u003d \"Duplicate names detected for **%s**.\"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"            + \"\\nPlease enter full name(s)\";","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_RESULT_IN_DUPLICATE \u003d \"The result of the command will result in duplicate \"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"            + \"%s.\\nPlease check the name(s) entered\";","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_NO_SUCH_STUDENT \u003d \"No student found: **%s**.\\nPlease check the name entered\";","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_INVALID_LESSON_TIME \u003d \"Start time cannot be after end time\";","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_INVALID_LESSON_DURATION \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"            \"The lesson duration is too short(\u003c 30 min)/long(\u003e 3 hours)\";","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_INVALID_EXAM_TIME \u003d \"Exam start time cannot be after exam end time\";","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_INVALID_EXAM_DURATION \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"            \"The exam duration is too short(\u003c 30 min)/long(\u003e 3 hours)\";","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_INVALID_DONE_INPUT \u003d \"Invalid input for done/ field. Accepted inputs:\"","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"            + \"done, not done\";","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_DEADLINE_IN_PAST \u003d \"Deadline cannot be in the past!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_ONLY_ONE_STUDENT \u003d \"Only one student name is allowed!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_EMPTY_STUDENT \u003d \"Student name cannot be empty!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_ONLY_ONE_HOMEWORK \u003d \"Only one homework name is allowed!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_EMPTY_HOMEWORK \u003d \"Homework name cannot be empty!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_ONLY_ONE_INDEX \u003d \"Only one index is allowed!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_EMPTY_INDEX \u003d \"Index cannot be empty!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_ONLY_ONE_DEADLINE \u003d \"Only one deadline is allowed!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_EMPTY_DEADLINE \u003d \"Deadline cannot be empty!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    public static final Object MESSAGE_ONLY_ONE_STATUS \u003d \"Only one status is allowed!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    public static final Object MESSAGE_EMPTY_STATUS \u003d \"Status cannot be empty!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_CONTAIN_STUDENT_NAME \u003d \"There is at least one existing student \"","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            + \"whose name contains \\\"%s\\\".\";","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_EXTENDED_STUDENT_NAME \u003d \"There is at least one existing student \"","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"            + \"whose name is contained in \\\"%s\\\".\";","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_CONFLICTING_LESSON_TIME \u003d \"You already have a lesson during this time!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_CONFLICTING_EXAM_TIME \u003d \"This student has an exam during this time!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"szejiancheng":10,"NBQian":35,"Yufannnn":32,"-":9}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    ObservableList\u003cStudent\u003e getFilteredPersonList();","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Yufannnn":2,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cStudent\u003e getFilteredPersonList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Yufannnn":3,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADELEVEL;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHOOL;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":" * Adds a student to the address book.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"    public static final String COMMAND_WORD \u003d \"new-student\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"            + \"[\" + PREFIX_SCHOOL + \"SCHOOL] \"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"            + \"[\" + PREFIX_GRADELEVEL + \"GRADE LEVEL] \"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"            + PREFIX_SCHOOL + \"Anglo Chinese \"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"            + PREFIX_GRADELEVEL + \"Secondary 3 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book\";","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    private final Student toAdd;","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        toAdd \u003d student;","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        if (model.hasDuplicateNameAdd(toAdd.getName().toString())) {","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_CONTAIN_STUDENT_NAME,","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                toAdd.getName().toString()));","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        if (model.hasExtendedName(toAdd.getName().toString())) {","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_EXTENDED_STUDENT_NAME,","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"                toAdd.getName().toString()));","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fahim-tazz":6,"NBQian":10,"Yufannnn":11,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TutorPro has been cleared!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yufannnn":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":" * Contains utility methods used for commands.","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"public class CommandUtil {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"     * Checks if the student name exists in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the student name does not exist in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    public static void handleNonExistName(Model model, List\u003cString\u003e names) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * Checks if the student name exists in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the student name does not exist in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    public static void handleDuplicateName(Model model, List\u003cString\u003e names) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Yufannnn":51}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"            + \"Parameters: index/INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"            + \"Example: \" + COMMAND_WORD + \" index/1\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        Student personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, personToDelete));","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NBQian":2,"Yufannnn":10,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"    public static final String COMMAND_WORD \u003d \"update-info\";","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"            + PREFIX_INDEX + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"            + \"Example: \" + COMMAND_WORD + \" index/1 \"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * @param editStudentDescriptor details to edit the person with","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        Student personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        Student editedPerson \u003d createEditedPerson(personToEdit, editStudentDescriptor);","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"        String newName \u003d editedPerson.getName().toString();","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        if (!newName.equals(personToEdit.getName().toString())) {","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateNameEdit(newName, index.getZeroBased())) {","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_CONTAIN_STUDENT_NAME,","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"                    newName));","lastModifiedDate":"2023-04-02"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"            if (model.hasExtendedNameEdit(newName, index.getZeroBased())) {","lastModifiedDate":"2023-04-02"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_EXTENDED_STUDENT_NAME,","lastModifiedDate":"2023-04-02"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"                    newName));","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"        if (!personToEdit.isSameStudent(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"        model.setStudent(personToEdit, editedPerson);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"    private static Student createEditedPerson(Student personToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"        Address updatedAddress \u003d editStudentDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"Yufannnn"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2023-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"Yufannnn"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2023-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"Yufannnn"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"Yufannnn"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2023-02-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"fahim-tazz":4,"NBQian":13,"Yufannnn":32,"-":191}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Tutor Pro as requested ...\";","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Yufannnn":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"            + \"Parameters: name/NAME [MORE_NAMES]...\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"            + \"Example: \" + COMMAND_WORD + \" name/alice name/bob name/charlie\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    public FindCommand(NamePredicate predicate) {","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size(), \"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"szejiancheng":1,"NBQian":5,"Yufannnn":2,"-":34}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yufannnn":3,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ViewProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":" * Prints student profiles with or without name-matching","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"public class ViewProfileCommand extends Command {","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public static final String COMMAND_WORD \u003d \"view-profile\";","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Prints the profile of the student that matches \"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"            + \"the specified name.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"            + \"Parameters: \\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"    private static final Predicate\u003cStudent\u003e SHOW_ALL_STUDENTS \u003d student -\u003e true;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"    private static final String SEPERATOR \u003d \"--------------------------------------------------\\n\";","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"    private final Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"     * public constructor for a ViewProfileCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"     * @param names","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"     * @param namePredicate","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    public ViewProfileCommand(List\u003cString\u003e names, Predicate\u003cStudent\u003e namePredicate) {","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"        model.updateFilteredStudentList(namePredicate);","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"        int numberOfStudents \u003d studentList.size();","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"szejiancheng"},"content":"        sb.append(SEPERATOR);","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"szejiancheng"},"content":"        // Loop through each student and add their lesson to the string builder","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"szejiancheng"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"szejiancheng"},"content":"            sb.append(student.getName().fullName).append(\":\\n\");","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"szejiancheng"},"content":"            sb.append(\"Phone: \").append(student.getPhone()).append(\"\\n\");","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"szejiancheng"},"content":"            sb.append(\"Address: \").append(student.getAddress().toString()).append(\"\\n\");","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"            sb.append(\"Email: \").append(student.getEmail()).append(\"\\n\");","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"            sb.append(\"Tags: \");","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"szejiancheng"},"content":"            for (Tag tag : student.getTags()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"szejiancheng"},"content":"                sb.append(tag);","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"szejiancheng"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"szejiancheng"},"content":"            sb.append(SEPERATOR);","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"szejiancheng"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"szejiancheng"},"content":"                    String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, numberOfStudents, sb));","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"szejiancheng":94}},{"path":"src/main/java/seedu/address/logic/commands/exam/CreateExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Grade;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":" * Adds an exam to a student.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"public class CreateExamCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"new-exam\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an exam to students.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        + PREFIX_EXAM + \"EXAM_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        + PREFIX_STARTTIME + \"Start time \"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        + PREFIX_ENDTIME + \"End time\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        + PREFIX_EXAM + \"Math MYE \"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        + PREFIX_STARTTIME + \"2023-05-21 12:00 \"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        + PREFIX_ENDTIME + \"2023-05-21 14:00\";","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"    private final String examDescription;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"    private final Double weightage;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"    private final Grade grade;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"     * Creates a CreateExamCommand to add the specified exam to the specified student.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"    public CreateExamCommand(List\u003cString\u003e names, NamePredicate predicate, String examDescription,","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"                             LocalDateTime startTime, LocalDateTime endTime, Double weightage, Grade grade) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(examDescription);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"        this.examDescription \u003d examDescription;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        StringBuilder lessonClashMessage \u003d new StringBuilder(\"\\n\");","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"szejiancheng"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"szejiancheng"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"szejiancheng"},"content":"        if (endTime.isAfter(LocalDateTime.now()) \u0026\u0026 grade !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"szejiancheng"},"content":"            throw new CommandException(Messages.MESSAGE_EXAM_NOT_COMPLETED);","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"szejiancheng"},"content":"        Exam exam \u003d new Exam(examDescription, startTime, endTime, weightage, grade);","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"szejiancheng"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"szejiancheng"},"content":"            for (Student student : studentList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"                if (student.hasLessonAtSameTime(exam)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"                    lessonClashMessage.append(\"*******WARNING*******\\n\").append(student.getName().fullName)","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"                        .append(\" has a lesson at the same time as the exam\\n Consider rescheduling clashing lesson\");","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"szejiancheng"},"content":"                student.addExam(exam);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"szejiancheng"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"szejiancheng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"szejiancheng"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"szejiancheng"},"content":"            sb.append(student.getName().fullName);","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"szejiancheng"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"szejiancheng"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"                String.format(Messages.MESSAGE_EXAM_ADDED_SUCCESS, exam, sb) + lessonClashMessage);","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"szejiancheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"szejiancheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"szejiancheng"},"content":"                || (other instanceof CreateExamCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 predicate.equals(((CreateExamCommand) other).predicate)","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 startTime.equals(((CreateExamCommand) other).startTime)","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 endTime.equals(((CreateExamCommand) other).endTime)","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 examDescription.equals(((CreateExamCommand) other).examDescription));","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"szejiancheng":84,"NBQian":50,"Yufannnn":5}},{"path":"src/main/java/seedu/address/logic/commands/exam/DeleteExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":" * Deletes a lesson from a student.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"public class DeleteExamCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"delete-exam\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes an exam from a student.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"INDEX\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"     * Creates a DeleteLessonCommand to delete the specified lesson from the specified student.","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    public DeleteExamCommand(List\u003cString\u003e inputNames, NamePredicate predicate, Index targetIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        this.names \u003d inputNames;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"                sb.append(String.format(Messages.MESSAGE_EXAM_DELETED_SUCCESS, targetIndex.getOneBased(),","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"                    student.getExam(targetIndex).toString(), student.getName().toString()));","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"                student.deleteExam(targetIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_EXAM_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"            || (other instanceof DeleteExamCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 predicate.equals(((DeleteExamCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"NBQian":106,"Yufannnn":3}},{"path":"src/main/java/seedu/address/logic/commands/exam/UpdateExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Grade;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":" * Update the information of an existing homework.","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"public class UpdateExamCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"update-exam\";","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Update the information of an existing exam.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"EXAM_INDEX \"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        + PREFIX_EXAM + \"EXAM_NAME \"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        + PREFIX_STARTTIME + \"START TIME\"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"        + PREFIX_ENDTIME + \"END TIME\"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        + PREFIX_WEIGHT + \"WEIGHTAGE\"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        + PREFIX_GRADE + \"GRADE\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"        + PREFIX_EXAM + \"Math Exam \";","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"    private final Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"    private final Optional\u003cString\u003e examName;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    private final Optional\u003cLocalDateTime\u003e startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    private final Optional\u003cLocalDateTime\u003e endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"    private final Optional\u003cDouble\u003e weightage;","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"    private final Optional\u003cGrade\u003e grade;","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"     * Creates an UpdateHomeworkCommand to update the information of an existing homework.","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"     * @param index of the homework in the filtered homework list to update","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"     * @param predicate of the student to update the homework","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"     * @param examName of the lesson to be updated to","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"     * @param startTime of the lesson to be updated to","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"     * @param endTime of the lesson to be updated to","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"    public UpdateExamCommand(List\u003cString\u003e names, Index index, NamePredicate predicate,","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"                               Optional\u003cString\u003e examName, Optional\u003cLocalDateTime\u003e startTime,","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"                               Optional\u003cLocalDateTime\u003e endTime, Optional\u003cDouble\u003e weightage,","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"                               Optional\u003cGrade\u003e grade) {","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        this.examName \u003d examName;","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"        Student student \u003d studentList.get(0);","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"        Exam examToUpdate;","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"            examToUpdate \u003d student.getExam(index);","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EXAM_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"        String newExamName \u003d this.examName.orElse(examToUpdate.getDescription());","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"        LocalDateTime newStartTime \u003d this.startTime.orElse(examToUpdate.getStartTime());","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"        LocalDateTime newEndTime \u003d this.endTime.orElse(examToUpdate.getEndTime());","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"        if (newStartTime.isAfter(newEndTime)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EXAM_TIME);","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"szejiancheng"},"content":"        if (newEndTime.isAfter(LocalDateTime.now()) \u0026\u0026 grade.isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"szejiancheng"},"content":"            throw new CommandException(Messages.MESSAGE_EXAM_NOT_COMPLETED);","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"szejiancheng"},"content":"        Double newWeightage \u003d this.weightage.orElse(examToUpdate.getWeightage());","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"szejiancheng"},"content":"        Grade newGrade \u003d this.grade.orElse(examToUpdate.getGrade());","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"szejiancheng"},"content":"        //if (Duration.between(newStartTime, newEndTime).toMinutes() \u003c 30 || Duration.between(newStartTime,","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"szejiancheng"},"content":"        //    newEndTime).toHours() \u003e 3) {","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"szejiancheng"},"content":"        //    throw new CommandException(Messages.MESSAGE_INVALID_EXAM_DURATION);","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"szejiancheng"},"content":"        //}","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"szejiancheng"},"content":"        Exam newExam \u003d new Exam(newExamName, newStartTime, newEndTime, newWeightage, newGrade);","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"            student.setExam(index.getZeroBased(), newExam);","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"szejiancheng"},"content":"            String.format(Messages.MESSAGE_EXAM_UPDATED_SUCCESS, index.getOneBased(),","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"                student.getName().getFirstName(),","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"szejiancheng"},"content":"                newExamName, newStartTime, newEndTime, newWeightage, newGrade));","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"            || (other instanceof UpdateExamCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 predicate.equals(((UpdateExamCommand) other).predicate)","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 index \u003d\u003d ((UpdateExamCommand) other).index","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 examName.equals(((UpdateExamCommand) other).examName)","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 startTime.equals(((UpdateExamCommand) other).startTime)","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 endTime.equals((((UpdateExamCommand) other).endTime)));","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"szejiancheng":34,"NBQian":124,"Yufannnn":3}},{"path":"src/main/java/seedu/address/logic/commands/exam/ViewExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":" * Finds and lists all homework in the homework tracker that match the given name and status keywords.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":" * Displays a list of homework with the ability to filter by student name and homework status.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"public class ViewExamCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"view-exam\";","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all exams filtered by\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        + \"* name of student (case-insensitive) and/or\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        + \"* date and/or\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        + \"* exam name and/or\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        + \"* whether it is done\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        + PREFIX_EXAM + \"EXAM NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DONE + \"COMPLETED KEYWORD\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DATE + \"2023-05-21 \"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        + PREFIX_EXAM + \"Math MYE \"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DONE + \"done(or not done)\";","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    private static final Predicate\u003cExam\u003e SHOW_ALL_EXAMS \u003d exam -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cExam\u003e examDatePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cExam\u003e examNamePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cExam\u003e donePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    private final boolean defaultPredicateFlag;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"     * Overloaded constructor for ViewLessonCommand.","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"     * @param namePredicate Predicate to filter students by name.","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"     * @param defaultPredicateFlag Flag to indicate if the default predicate is used.","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"    public ViewExamCommand(List\u003cString\u003e names, Predicate\u003cStudent\u003e namePredicate, Predicate\u003cExam\u003e examNamePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"                             Predicate\u003cExam\u003e donePredicate, boolean defaultPredicateFlag) {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        this.examDatePredicate \u003d SHOW_ALL_EXAMS;","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        this.defaultPredicateFlag \u003d defaultPredicateFlag;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"        this.examNamePredicate \u003d examNamePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"        this.donePredicate \u003d donePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"     * Overloaded constructor for ViewLessonCommand.","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"     * @param namePredicate Predicate to filter students by name.","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"     * @param examDatePredicate Predicate to filter lessons by date.","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"     * @param defaultPredicateFlag Flag to indicate if the default predicate is used.","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"    public ViewExamCommand(List\u003cString\u003e names, Predicate\u003cStudent\u003e namePredicate, Predicate\u003cExam\u003e examDatePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"                             Predicate\u003cExam\u003e examNamePredicate, Predicate\u003cExam\u003e donePredicate,","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"                             boolean defaultPredicateFlag) {","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        this.examDatePredicate \u003d examDatePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        this.defaultPredicateFlag \u003d defaultPredicateFlag;","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        this.examNamePredicate \u003d examNamePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        this.donePredicate \u003d donePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"     * Executes the view-lesson command and returns the result message.","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(namePredicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"        int numberOfStudents \u003d studentList.size();","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"        int numOfLessons \u003d 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"        sb.append(\"--------------------------------------------------\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"        // Loop through each student and add their lesson to the string builder","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"NBQian"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"szejiancheng"},"content":"            List\u003cExam\u003e examList \u003d student.getFilteredExamList(examDatePredicate, examNamePredicate,","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"                donePredicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"szejiancheng"},"content":"            if (!examList.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"NBQian"},"content":"                sb.append(student.getName().fullName).append(\":\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"szejiancheng"},"content":"                numOfLessons +\u003d examList.size();","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"szejiancheng"},"content":"                for (int i \u003d 0; i \u003c examList.size(); i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"szejiancheng"},"content":"                    sb.append(i + 1).append(\". \").append(examList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"                sb.append(\"--------------------------------------------------\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"        // If no homework is found, throw an exception","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"NBQian"},"content":"        if (numOfLessons \u003d\u003d 0) {","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_NO_EXAM_FOUND);","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"        // If the default predicate is used, display a different message","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"        if (defaultPredicateFlag) {","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"                String.format(Messages.MESSAGE_ALL_EXAMS_LISTED_OVERVIEW, numOfLessons, sb));","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"                String.format(Messages.MESSAGE_EXAMS_LISTED_OVERVIEW, numOfLessons, numberOfStudents, sb));","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"NBQian"},"content":"            || (other instanceof ViewExamCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 namePredicate.equals(((ViewExamCommand) other).namePredicate)","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 examDatePredicate.equals(((ViewExamCommand) other).examDatePredicate)","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 defaultPredicateFlag \u003d\u003d ((ViewExamCommand) other).defaultPredicateFlag);","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"szejiancheng":5,"NBQian":163,"Yufannnn":3}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Yufannnn":2,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/homework/CreateHomeworkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.commands.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleDuplicateName;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleNonExistName;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":" * Adds an assignment to a student.","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"public class CreateHomeworkCommand extends Command {","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"new-homework\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an assignment to students.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_HOMEWORK + \"HOMEWORK_NAME \"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_DEADLINE + \"DEADLINE\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_HOMEWORK + \"Math Homework \"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_DEADLINE + \"2023-03-01T12:00\";","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    private final String homeworkName;","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"     * Creates a CreateHomeworkCommand to add the specified assignment to the specified student.","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    public CreateHomeworkCommand(List\u003cString\u003e names, NamePredicate predicate, String homeworkName,","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"                                 LocalDateTime deadline) {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(homeworkName);","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        this.homeworkName \u003d homeworkName;","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        handleNonExistName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        handleDuplicateName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(homeworkName, deadline);","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"        addHomework(studentList, homework);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        String message \u003d formatMessage(studentList, homework);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"                String.format(Messages.MESSAGE_HOMEWORK_ADDED_SUCCESS, homework, message));","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"     * Adds the homework to the students.","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"     * @param studentList The list of students to add the homework to.","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"     * @param homework The homework to be added.","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"     * @throws DuplicateEntryException If the homework already exists in the student.","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException If the homework already exists in the student.","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    public void addHomework(List\u003cStudent\u003e studentList, Homework homework)","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"            throws DuplicateEntryException, CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"            for (Student student : studentList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"                student.addHomework(homework);","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"szejiancheng"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_RESULT_IN_DUPLICATE, \"homework\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"     * Formats the message to be displayed to the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"     * @param studentList The list of students to add the homework to.","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"     * @param homework The homework to be added.","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"     * @return The formatted message.","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"    public String formatMessage(List\u003cStudent\u003e studentList, Homework homework) {","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"            sb.append(student.getName().fullName);","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof CreateHomeworkCommand // instanceof handles nulls","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 predicate.equals(((CreateHomeworkCommand) other).predicate)","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 homeworkName.equals(((CreateHomeworkCommand) other).homeworkName)","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 deadline.equals(((CreateHomeworkCommand) other).deadline));","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"szejiancheng":2,"NBQian":7,"Yufannnn":111}},{"path":"src/main/java/seedu/address/logic/commands/homework/DeleteHomeworkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.commands.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleDuplicateName;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleNonExistName;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":" * Deletes an assignment from a student.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"public class DeleteHomeworkCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    public static final String COMMAND_WORD \u003d \"delete-homework\";","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes an assignment from a student.\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"INDEX\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"     * Creates a DeleteHomeworkCommand to delete the specified assignment from the specified student.","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"    public DeleteHomeworkCommand(List\u003cString\u003e names, NamePredicate predicate, Index targetIndex) {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        handleNonExistName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        handleDuplicateName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        String message \u003d formatMessage(studentList);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        return new CommandResult(message);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"     * Formats the string to be displayed.","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"     * @param sb StringBuilder to be formatted.","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"     * @param student Student to be formatted.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    public void removeHomework(StringBuilder sb, Student student) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"            sb.append(String.format(Messages.MESSAGE_HOMEWORK_DELETED_SUCCESS, targetIndex.getOneBased(),","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"                    student.getHomework(targetIndex).toString(), student.getName().toString()));","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"            student.deleteHomework(targetIndex);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_HOMEWORK_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"     * Formats the string to be displayed.","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"     * @param studentList List of students to be formatted.","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"     * @return String to be displayed.","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"    public String formatMessage(List\u003cStudent\u003e studentList) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"            removeHomework(sb, student);","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof DeleteHomeworkCommand // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 predicate.equals(((DeleteHomeworkCommand) other).predicate)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"NBQian":5,"Yufannnn":105}},{"path":"src/main/java/seedu/address/logic/commands/homework/MarkHomeworkAsDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.commands.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleDuplicateName;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleNonExistName;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":" * Marks an assignment as done for a student.","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"public class MarkHomeworkAsDoneCommand extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    public static final String COMMAND_WORD \u003d \"mark-homework\";","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks an assignment as done for a student.\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"INDEX\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     * Creates a MarkHomeworkAsDoneCommand to mark the specified assignment as done for the specified student.","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    public MarkHomeworkAsDoneCommand(List\u003cString\u003e names, NamePredicate predicate, Index targetIndex) {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        handleNonExistName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        handleDuplicateName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        String message \u003d formatString(studentList);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"        return new CommandResult(message);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"     * Formats the string to be displayed to the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"     * @param studentList List of students to be displayed.","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     * @return String to be displayed to the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"    public String formatString(List\u003cStudent\u003e studentList) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"        if (studentList.isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_NAME);","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"            markHomework(sb, student);","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"     * Marks the homework as done for the student.","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"     * @param sb String builder to be displayed to the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"     * @param student Student to be marked as done.","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"    public void markHomework(StringBuilder sb, Student student) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"            Homework homeworkToMarkAsDone \u003d student.getHomework(targetIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"            differentiateHomework(sb, homeworkToMarkAsDone, student);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_HOMEWORK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"     * Differentiates between the homework being marked as done and the homework already being marked as done.","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"     * @param sb String builder to be displayed to the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkToMarkAsDone Homework to be marked as done.","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"     * @param student Student to be marked as done.","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"    public void differentiateHomework(StringBuilder sb, Homework homeworkToMarkAsDone, Student student) {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"        if (homeworkToMarkAsDone.isCompleted()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"            sb.append(String.format(Messages.MESSAGE_HOMEWORK_ALREADY_MARKED_AS_DONE,","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"                    homeworkToMarkAsDone.getDescription(), student.getName().toString()));","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"            sb.append(String.format(Messages.MESSAGE_HOMEWORK_MARKED_AS_DONE,","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"                    homeworkToMarkAsDone.getDescription(), student.getName().toString()));","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"            student.markHomeworkAsDone(targetIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof MarkHomeworkAsDoneCommand // instanceof handles nulls","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 predicate.equals(((MarkHomeworkAsDoneCommand) other).predicate)); // state check","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"NBQian":5,"Yufannnn":128}},{"path":"src/main/java/seedu/address/logic/commands/homework/MarkHomeworkAsUndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.commands.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleDuplicateName;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleNonExistName;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":" * Marks a homework as undone for a student.","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"public class MarkHomeworkAsUndoCommand extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    public static final String COMMAND_WORD \u003d \"unmark-homework\";","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks a homework as undone for a student.\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"INDEX\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"     * Creates a MarkHomeworkAsUndoCommand to mark the specified homework as undone for the specified student.","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    public MarkHomeworkAsUndoCommand(List\u003cString\u003e names, NamePredicate predicate, Index targetIndex) {","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        handleNonExistName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        handleDuplicateName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        String message \u003d formatString(studentList);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"        return new CommandResult(message);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"     * Formats the string to be returned by the command.","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"     * @param studentList List of students to be formatted.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"     * @return String to be returned by the command.","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    public String formatString(List\u003cStudent\u003e studentList) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        if (studentList.isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_NAME);","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"            unmarkHomework(sb, student);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"     * Marks the homework as undone for the specified student.","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"     * @param sb StringBuilder to append the result message.","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"     * @param student Student to be marked as undone.","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"    public void unmarkHomework(StringBuilder sb, Student student) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"            Homework homeworkToMarkAsUndone \u003d student.getHomework(targetIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"            differentiateHomework(sb, homeworkToMarkAsUndone, student);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_HOMEWORK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"     * Differentiates between marking a homework as undone for a student who has not completed the homework","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"     * and marking a homework as undone for a student who has completed the homework.","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"     * @param sb StringBuilder to append the result message.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkToMarkAsUndone Homework to be marked as undone.","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"     * @param student Student to be marked as undone.","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"    public void differentiateHomework(StringBuilder sb, Homework homeworkToMarkAsUndone, Student student) {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"        if (!homeworkToMarkAsUndone.isCompleted()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"            sb.append(String.format(Messages.MESSAGE_HOMEWORK_ALREADY_MARKED_AS_UNDONE,","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"                    homeworkToMarkAsUndone.getDescription(), student.getName().toString()));","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"            sb.append(String.format(Messages.MESSAGE_HOMEWORK_MARKED_AS_UNDONE,","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"                    homeworkToMarkAsUndone.getDescription(), student.getName().toString()));","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"            student.markHomeworkAsUndone(targetIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof MarkHomeworkAsUndoCommand // instanceof handles nulls","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 predicate.equals(((MarkHomeworkAsUndoCommand) other).predicate)); // state check","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"NBQian":5,"Yufannnn":128}},{"path":"src/main/java/seedu/address/logic/commands/homework/UpdateHomeworkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.commands.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleDuplicateName;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleNonExistName;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":" * Update the information of an existing homework.","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"public class UpdateHomeworkCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public static final String COMMAND_WORD \u003d \"update-homework\";","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Update the information of an existing homework.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"HOMEWORK_INDEX \"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_HOMEWORK + \"HOMEWORK_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_DEADLINE + \"DEADLINE\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_HOMEWORK + \"Math Homework \";","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    private static final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    private final Index index;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    private final Optional\u003cString\u003e homeworkName;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    private final Optional\u003cLocalDateTime\u003e deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"     * Creates an UpdateHomeworkCommand to update the information of an existing homework.","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     * @param index        of the homework in the filtered homework list to update","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"     * @param predicate    of the student to update the homework","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkName of the homework to be updated to","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"     * @param deadline     of the homework to be updated to","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"    public UpdateHomeworkCommand(List\u003cString\u003e names, Index index, NamePredicate predicate,","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"                                 Optional\u003cString\u003e homeworkName, Optional\u003cLocalDateTime\u003e deadline) {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        this.homeworkName \u003d homeworkName;","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        handleNonExistName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        handleDuplicateName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        Student student \u003d studentList.get(0);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"            Homework homeworkToUpdate \u003d student.getHomework(index);","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"            String newHomeworkName \u003d this.homeworkName.orElse(homeworkToUpdate.getDescription());","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"            LocalDateTime newDeadline \u003d this.deadline.orElse(homeworkToUpdate.getDeadline());","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"            Homework newHomework \u003d new Homework(newHomeworkName, newDeadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"            if (homeworkToUpdate.isCompleted()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"                newHomework.markAsDone();","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"            updateHomework(student, homeworkToUpdate, newHomework);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"                    String.format(Messages.MESSAGE_HOMEWORK_UPDATED_SUCCESS, index.getOneBased(),","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"                            student.getName().getFirstName(), newHomeworkName, newDeadline.format(PRINT_FORMATTER)));","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_HOMEWORK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"     * Updates the homework of the student.","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"     * @param student          to update the homework","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkToUpdate to be updated","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"     * @param newHomework      to be updated to","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"     * @throws DuplicateEntryException if the homework to be updated to already exists","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException        if the homework to be updated does not exist","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"    public void updateHomework(Student student, Homework homeworkToUpdate, Homework newHomework)","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"            throws DuplicateEntryException, CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"            student.setHomework(homeworkToUpdate, newHomework);","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_HOMEWORK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_RESULT_IN_DUPLICATE, \"homework\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"                || (other instanceof UpdateHomeworkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"                \u0026\u0026 predicate.equals(((UpdateHomeworkCommand) other).predicate)","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"                \u0026\u0026 index \u003d\u003d ((UpdateHomeworkCommand) other).index","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"                \u0026\u0026 homeworkName.equals(((UpdateHomeworkCommand) other).homeworkName)","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"                \u0026\u0026 deadline.equals(((UpdateHomeworkCommand) other).deadline));","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"NBQian":12,"Yufannnn":117}},{"path":"src/main/java/seedu/address/logic/commands/homework/ViewHomeworkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.commands.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleDuplicateName;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandUtil.handleNonExistName;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":" * Finds and lists all homework in the homework tracker that match the given name and status keywords.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":" * Displays a list of homework with the ability to filter by student name and homework status.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"public class ViewHomeworkCommand extends Command {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public static final String COMMAND_WORD \u003d \"view-homework\";","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all homework that match the specified \"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"            + \"name and status keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_STATUS + \"STATUS\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"            + PREFIX_STATUS + \"pending\";","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    private static final String SEPERATOR \u003d \"--------------------------------------------------\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    private static final String DOT \u003d \". \";","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    private static final String LINE_BREAK \u003d \"\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    private static final String NAME_LABEL \u003d \"%s:\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    private static final Predicate\u003cHomework\u003e SHOW_ALL_HOMEWORK \u003d homework -\u003e true;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    private final Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    private final Predicate\u003cHomework\u003e homeworkStatusPredicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    private final boolean defaultPredicateFlag;","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"     * Overloaded constructor for ViewHomeworkCommand.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"     * @param namePredicate Predicate to filter students by name.","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    public ViewHomeworkCommand(List\u003cString\u003e names, Predicate\u003cStudent\u003e namePredicate, boolean defaultPredicateFlag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        this.homeworkStatusPredicate \u003d SHOW_ALL_HOMEWORK;","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        this.defaultPredicateFlag \u003d defaultPredicateFlag;","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * Overloaded constructor for ViewHomeworkCommand.","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"     * @param namePredicate Predicate to filter students by name.","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkStatusPredicate Predicate to filter homework by status.","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"    public ViewHomeworkCommand(List\u003cString\u003e names, Predicate\u003cStudent\u003e namePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                               Predicate\u003cHomework\u003e homeworkStatusPredicate, boolean defaultPredicateFlag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        this.homeworkStatusPredicate \u003d homeworkStatusPredicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"        this.defaultPredicateFlag \u003d defaultPredicateFlag;","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"     * Executes the view-homework command and returns the result message.","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"        handleNonExistName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        handleDuplicateName(model, names);","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(namePredicate);","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"        int numberOfHomework \u003d 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"            List\u003cHomework\u003e homeworkList \u003d student.getFilteredHomeworkList(homeworkStatusPredicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"            if (!homeworkList.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"                sb.append(SEPERATOR);","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"                sb.append(String.format(NAME_LABEL, student.getName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"                numberOfHomework +\u003d homeworkList.size();","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"                formatHomeworkList(homeworkList, sb);","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        handleNoHomework(numberOfHomework);","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"                    String.format(Messages.MESSAGE_ALL_HOMEWORK_LISTED_OVERVIEW, numberOfHomework, sb.toString()));","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"     * Formats the homework list into a string.","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkList List of homework to be formatted.","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"     * @param sb StringBuilder to append the formatted homework list to.","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"    public void formatHomeworkList(List\u003cHomework\u003e homeworkList, StringBuilder sb) {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"        for (int i \u003d 0; i \u003c homeworkList.size(); i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"            sb.append(i + 1);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"            sb.append(DOT);","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"            sb.append(homeworkList.get(i).toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"            sb.append(LINE_BREAK);","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"     * Handles the case where no homework is found.","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"     * @param numberOfHomework Number of homework found.","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"     * @throws CommandException If no homework is found.","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"    public void handleNoHomework(int numberOfHomework) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"        // If no homework is found, throw an exception","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"        if (numberOfHomework \u003d\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"            throw new CommandException(Messages.MESSAGE_NO_HOMEWORK_FOUND);","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof ViewHomeworkCommand // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 namePredicate.equals(((ViewHomeworkCommand) other).namePredicate)","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 homeworkStatusPredicate.equals(((ViewHomeworkCommand) other).homeworkStatusPredicate)","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 defaultPredicateFlag \u003d\u003d ((ViewHomeworkCommand) other).defaultPredicateFlag); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"NBQian":6,"Yufannnn":139}},{"path":"src/main/java/seedu/address/logic/commands/lesson/CreateLessonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSON;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.ConflictingLessonsException;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":" * Adds an assignment to a student.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"public class CreateLessonCommand extends Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"new-lesson\";","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a lesson to students.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        + PREFIX_LESSON + \"LESSON_NAME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        + PREFIX_STARTTIME + \"Start time \"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        + PREFIX_ENDTIME + \"End time\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        + PREFIX_LESSON + \"Math Lesson \"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        + PREFIX_STARTTIME + \"2023-05-21 12:00 \"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        + PREFIX_ENDTIME + \"2023-05-21 14:00\";","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_DATE \u003d \"endTime must be after startTime, both in the format YYYY-MM-DD HH:mm\";","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"    private final String lessonName;","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"     * Creates a CreateHomeworkCommand to add the specified assignment to the specified student.","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"    public CreateLessonCommand(List\u003cString\u003e names, NamePredicate predicate, String lessonName, LocalDateTime startTime,","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"                               LocalDateTime endTime) {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        requireNonNull(lessonName);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        this.lessonName \u003d lessonName;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"        Lesson lesson \u003d new Lesson(lessonName, startTime, endTime);","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        if (model.hasConflictingLessonTime(lesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_CONFLICTING_LESSON_TIME);","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"        //        if (model.hasConflictingExamTime(lesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"        //            throw new CommandException(Messages.MESSAGE_CONFLICTING_EXAM_TIME);","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"        //        }","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"        if (startTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(\"start time must be in the future.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EXAM_TIME);","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"        if (Duration.between(startTime, endTime).toMinutes() \u003c 30 || Duration.between(startTime,","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"            endTime).toHours() \u003e 3) {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LESSON_DURATION);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"            for (Student student : studentList) {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"                student.addLesson(lesson);","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"        } catch (ConflictingLessonsException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"NBQian"},"content":"            sb.append(student.getName().fullName);","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"NBQian"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"NBQian"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"            String.format(Messages.MESSAGE_LESSON_ADDED_SUCCESS, lesson, sb));","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"            || (other instanceof CreateLessonCommand // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 predicate.equals(((CreateLessonCommand) other).predicate)","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 lessonName.equals(((CreateLessonCommand) other).lessonName)","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 startTime.equals(((CreateLessonCommand) other).startTime)","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 endTime.equals(((CreateLessonCommand) other).endTime));","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"NBQian":145,"Yufannnn":4}},{"path":"src/main/java/seedu/address/logic/commands/lesson/DeleteLessonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":" * Deletes a lesson from a student.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"public class DeleteLessonCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"delete-lesson\";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a lesson from a student.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"INDEX\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"1\";","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"     * Creates a DeleteLessonCommand to delete the specified lesson from the specified student.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    public DeleteLessonCommand(List\u003cString\u003e inputNames, NamePredicate predicate, Index targetIndex) {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        this.names \u003d inputNames;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"     * @throws CommandException if the command\u0027s preconditions are not met","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"                sb.append(String.format(Messages.MESSAGE_LESSON_DELETED_SUCCESS, targetIndex.getOneBased(),","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"                    student.getLesson(targetIndex).toString(), student.getName().toString()));","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"                student.deleteLesson(targetIndex);","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_LESSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"            || (other instanceof DeleteLessonCommand // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 predicate.equals(((DeleteLessonCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"NBQian":107,"Yufannnn":3}},{"path":"src/main/java/seedu/address/logic/commands/lesson/UpdateLessonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":" * Update the information of an existing homework.","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"public class UpdateLessonCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"update-lesson\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Update the information of an existing lesson.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"LESSON_INDEX \"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        + PREFIX_LESSON + \"HOMEWORK_NAME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        + PREFIX_STARTTIME + \"START TIME\"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        + PREFIX_ENDTIME + \"END TIME\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        + PREFIX_LESSON + \"Math Lesson \";","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"    private final Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"    private final Optional\u003cString\u003e lessonName;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    private final Optional\u003cLocalDateTime\u003e startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    private final Optional\u003cLocalDateTime\u003e endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"     * Creates an UpdateHomeworkCommand to update the information of an existing homework.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"     * @param index of the homework in the filtered homework list to update","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"     * @param predicate of the student to update the homework","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"     * @param lessonName of the lesson to be updated to","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"     * @param startTime of the lesson to be updated to","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"     * @param endTime of the lesson to be updated to","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"    public UpdateLessonCommand(List\u003cString\u003e names, Index index, NamePredicate predicate,","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"                                 Optional\u003cString\u003e lessonName, Optional\u003cLocalDateTime\u003e startTime,","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"                               Optional\u003cLocalDateTime\u003e endTime) {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"        this.lessonName \u003d lessonName;","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"        Student student \u003d studentList.get(0);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        Lesson lessonToUpdate;","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"            lessonToUpdate \u003d student.getLesson(index);","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LESSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        String newLessonName \u003d this.lessonName.orElse(lessonToUpdate.getTitle());","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"        LocalDateTime newStartTime \u003d this.startTime.orElse(lessonToUpdate.getStartTime());","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"        LocalDateTime newEndTime \u003d this.endTime.orElse(lessonToUpdate.getEndTime());","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"        if (newStartTime.isAfter(newEndTime)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LESSON_TIME);","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"        if (Duration.between(newStartTime, newEndTime).toMinutes() \u003c 30 || Duration.between(newStartTime,","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"            newEndTime).toHours() \u003e 3) {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LESSON_DURATION);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"        Lesson newLesson \u003d new Lesson(newLessonName, newStartTime, newEndTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(s -\u003e s !\u003d student);","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"        if (model.hasConflictingLessonTime(newLesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_CONFLICTING_LESSON_TIME);","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"        if (model.hasConflictingExamTime(newLesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_CONFLICTING_EXAM_TIME);","lastModifiedDate":"2023-04-05"},{"lineNumber":131,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"NBQian"},"content":"            student.setLesson(index.getZeroBased(), newLesson);","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"NBQian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"            String.format(Messages.MESSAGE_LESSON_UPDATED_SUCCESS, index.getOneBased(),","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"                student.getName().getFirstName(),","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"                newLessonName, newStartTime, newEndTime));","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"NBQian"},"content":"            || (other instanceof UpdateLessonCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 predicate.equals(((UpdateLessonCommand) other).predicate)","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 index \u003d\u003d ((UpdateLessonCommand) other).index","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 lessonName.equals(((UpdateLessonCommand) other).lessonName)","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 startTime.equals(((UpdateLessonCommand) other).startTime)","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 endTime.equals((((UpdateLessonCommand) other).endTime)));","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"NBQian":152,"Yufannnn":3}},{"path":"src/main/java/seedu/address/logic/commands/lesson/ViewLessonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.commands.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":" * Finds and lists all homework in the homework tracker that match the given name and status keywords.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":" * Displays a list of homework with the ability to filter by student name and homework status.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"public class ViewLessonCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public static final String COMMAND_WORD \u003d \"view-lesson\";","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all lessons filtered by\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        + \"* name of student (case-insensitive) and/or\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        + \"* date and/or\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        + \"* subject and/or\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        + \"* whether it is done\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        + PREFIX_SUBJECT + \"SUBJECT \"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DONE + \"COMPLETED KEYWORD\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DATE + \"2023-05-21 \"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        + PREFIX_SUBJECT + \"Math \"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        + PREFIX_DONE + \"done(or not done)\";","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    private static final String SEPERATOR \u003d \"--------------------------------------------------\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    private static final Predicate\u003cLesson\u003e SHOW_ALL_LESSONS \u003d lesson -\u003e true;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cLesson\u003e lessonDatePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cLesson\u003e subjectPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    private final Predicate\u003cLesson\u003e donePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    private final boolean defaultPredicateFlag;","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"     * Overloaded constructor for ViewLessonCommand.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"     * @param namePredicate Predicate to filter students by name.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"     * @param defaultPredicateFlag Flag to indicate if the default predicate is used.","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"    public ViewLessonCommand(List\u003cString\u003e names, Predicate\u003cStudent\u003e namePredicate, Predicate\u003cLesson\u003e subjectPredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"                             Predicate\u003cLesson\u003e donePredicate, boolean defaultPredicateFlag) {","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"        this.lessonDatePredicate \u003d SHOW_ALL_LESSONS;","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"        this.defaultPredicateFlag \u003d defaultPredicateFlag;","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"        this.subjectPredicate \u003d subjectPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        this.donePredicate \u003d donePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"     * Overloaded constructor for ViewLessonCommand.","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"     * @param namePredicate Predicate to filter students by name.","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"     * @param lessonDatePredicate Predicate to filter lessons by date.","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"     * @param defaultPredicateFlag Flag to indicate if the default predicate is used.","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"    public ViewLessonCommand(List\u003cString\u003e names, Predicate\u003cStudent\u003e namePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"                             Predicate\u003cLesson\u003e lessonDatePredicate, Predicate\u003cLesson\u003e subjectPredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"                             Predicate\u003cLesson\u003e donePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"                             boolean defaultPredicateFlag) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        this.lessonDatePredicate \u003d lessonDatePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        this.defaultPredicateFlag \u003d defaultPredicateFlag;","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        this.subjectPredicate \u003d subjectPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        this.donePredicate \u003d donePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"     * Executes the view-lesson command and returns the result message.","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        StringBuilder nonExistNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"            if (model.noSuchStudent(name)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"                nonExistNames.append(name).append(\", \");","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"        if (nonExistNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"            nonExistNames \u003d new StringBuilder(nonExistNames.substring(0, nonExistNames.length() - 2));","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_SUCH_STUDENT, nonExistNames));","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"        StringBuilder dupNames \u003d new StringBuilder();","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"            if (model.hasDuplicateName(name)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"                dupNames.append(name).append(\", \");","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"        if (dupNames.length() !\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"            dupNames \u003d new StringBuilder(dupNames.substring(0, dupNames.length() - 2));","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_HAS_DUPLICATE_NAMES, dupNames));","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"        model.updateFilteredStudentList(namePredicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"        int numberOfStudents \u003d studentList.size();","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"        int numOfLessons \u003d 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"        sb.append(SEPERATOR);","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"NBQian"},"content":"        // Loop through each student and add their lesson to the string builder","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"        for (Student student : studentList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"NBQian"},"content":"            List\u003cLesson\u003e lessonList \u003d student.getFilteredLessonsList(lessonDatePredicate, subjectPredicate,","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"NBQian"},"content":"                donePredicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"            if (!lessonList.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"NBQian"},"content":"                sb.append(student.getName().fullName).append(\":\\n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"                numOfLessons +\u003d lessonList.size();","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"                for (int i \u003d 0; i \u003c lessonList.size(); i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"                    sb.append(i + 1).append(\". \").append(lessonList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"                sb.append(SEPERATOR);","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"        // If no homework is found, throw an exception","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"        if (numOfLessons \u003d\u003d 0) {","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"            throw new CommandException(Messages.MESSAGE_NO_LESSON_FOUND);","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"        // If the default predicate is used, display a different message","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"        if (defaultPredicateFlag) {","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"                    String.format(Messages.MESSAGE_ALL_LESSONS_LISTED_OVERVIEW, numOfLessons, sb));","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"                    String.format(Messages.MESSAGE_LESSONS_LISTED_OVERVIEW, numOfLessons, numberOfStudents, sb));","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"NBQian"},"content":"                || (other instanceof ViewLessonCommand // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"NBQian"},"content":"                \u0026\u0026 namePredicate.equals(((ViewLessonCommand) other).namePredicate)","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"                \u0026\u0026 lessonDatePredicate.equals(((ViewLessonCommand) other).lessonDatePredicate)","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"                \u0026\u0026 defaultPredicateFlag \u003d\u003d ((ViewLessonCommand) other).defaultPredicateFlag); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"szejiancheng":1,"NBQian":164,"Yufannnn":7}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADELEVEL;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHOOL;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"                                           PREFIX_ADDRESS, PREFIX_TAG, PREFIX_GRADELEVEL,","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"                                           PREFIX_SCHOOL);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"fahim-tazz"},"content":"        //Add school Tag if sc/ present","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"fahim-tazz"},"content":"        Optional\u003cString\u003e schoolOptional \u003d argMultimap.getValue(PREFIX_SCHOOL);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"fahim-tazz"},"content":"        if (!schoolOptional.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"fahim-tazz"},"content":"            Tag school \u003d ParserUtil.parseTag(schoolOptional.get());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"fahim-tazz"},"content":"            tagList.add(school);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"fahim-tazz"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"fahim-tazz"},"content":"        //Add grade level Tag if lv/ present","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"fahim-tazz"},"content":"        Optional\u003cString\u003e gradeLevelOptional \u003d argMultimap.getValue(PREFIX_GRADELEVEL);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"fahim-tazz"},"content":"        if (!gradeLevelOptional.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"fahim-tazz"},"content":"            Tag gradeLevel \u003d ParserUtil.parseTag(gradeLevelOptional.get());","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"fahim-tazz"},"content":"            tagList.add(gradeLevel);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"fahim-tazz"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        Student person \u003d new Student(name, phone, email, address, tagList);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"fahim-tazz":19,"Yufannnn":6,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.logic.commands.ViewProfileCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.CreateExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.DeleteExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.UpdateExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.ViewExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.CreateHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.DeleteHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.MarkHomeworkAsDoneCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.MarkHomeworkAsUndoCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.UpdateHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.ViewHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.CreateLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.DeleteLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.UpdateLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.ViewLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exam.CreateExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exam.DeleteExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exam.UpdateExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exam.ViewExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.homework.CreateHomeworkCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.homework.DeleteHomeworkCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.homework.MarkHomeworkAsDoneCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.homework.MarkHomeworkAsUndoCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.homework.UpdateHomeworkCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.homework.ViewHomeworkCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.lesson.CreateLessonCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.lesson.DeleteLessonCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.lesson.UpdateLessonCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.lesson.ViewLessonCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        // Homework commands","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"        case CreateHomeworkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"            return new CreateHomeworkCommandParser().parse(arguments);","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        case ViewHomeworkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"            return new ViewHomeworkCommandParser().parse(arguments);","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"        case MarkHomeworkAsUndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"            return new MarkHomeworkAsUndoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"        case DeleteHomeworkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"            return new DeleteHomeworkCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"        case MarkHomeworkAsDoneCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"            return new MarkHomeworkAsDoneCommandParser().parse(arguments);","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"        case UpdateHomeworkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"            return new UpdateHomeworkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"        // Lesson commands","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"        case ViewLessonCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"            return new ViewLessonCommandParser().parse(arguments);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"        case CreateLessonCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"            return new CreateLessonCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"        case DeleteLessonCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"            return new DeleteLessonCommandParser().parse(arguments);","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"        // Exam commands","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"szejiancheng"},"content":"        case CreateExamCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"szejiancheng"},"content":"            return new CreateExamCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"        case ViewExamCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"NBQian"},"content":"            return new ViewExamCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"        case DeleteExamCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"NBQian"},"content":"            return new DeleteExamCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"        case UpdateLessonCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"            return new UpdateLessonCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"        case UpdateExamCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"            return new UpdateExamCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"szejiancheng"},"content":"        case ViewProfileCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"szejiancheng"},"content":"            return new ViewProfileCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"szejiancheng":6,"NBQian":31,"Yufannnn":40,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"name/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"phone/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"email/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"address/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_GRADELEVEL \u003d new Prefix(\"level/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_SCHOOL \u003d new Prefix(\"school/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_HOMEWORK \u003d new Prefix(\"homework/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"deadline/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_EXAM \u003d new Prefix(\"exam/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"weightage/\");","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"grade/\");","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"status/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"index/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    public static final Prefix PREFIX_LESSON \u003d new Prefix(\"lesson/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    public static final Prefix PREFIX_STARTTIME \u003d new Prefix(\"start/\");","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public static final Prefix PREFIX_ENDTIME \u003d new Prefix(\"end/\");","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    public static final Prefix PREFIX_SUBJECT \u003d new Prefix(\"subject/\");","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    public static final Prefix PREFIX_DONE \u003d new Prefix(\"done/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"szejiancheng":2,"NBQian":6,"Yufannnn":13,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        //        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        //            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        //            return new DeleteCommand(index);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        //        } catch (ParseException pe) {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        //            throw new ParseException(","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        //                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        //        }","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NBQian":31,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"                    PREFIX_TAG);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        EditCommand.EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"            editStudentDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NBQian":21,"Yufannnn":9,"-":66}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.ViewExamCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"            String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"            if (name.trim().isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"                    ViewExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"            int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"            //                if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"            //                    name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"            //                }","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"            nameKeywords.set(i, name);","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        //        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        //        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        //            throw new ParseException(","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"        //                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        //        }","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        //","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"        //        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        return new FindCommand(new NamePredicate(nameKeywords));","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NBQian":48,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Grade;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    //@@author Yufannn-reused","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/RussellDash332/ip/blob/master/src/main/java/stashy/parser/Parser.java","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //with minor modification, it is a pretty good way to organise and extend the acceptable date format.","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String[] ACCEPTABLE_DATETIME_FORMATS \u003d {","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \"MMM dd yyyy HHmm\", \"MMM dd yyyy HH:mm\",","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \"yyyy-MM-dd\u0027T\u0027HH:mm\", \"dd/MM/yyyy HHmm\",","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \"dd/MM/yyyy HH:mm\", \"yyyy/MM/dd HHmm\",","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \"yyyy/MM/dd HH:mm\", \"yyyy/MM/dd\u0027T\u0027HHmm\",","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \"yyyy/MM/dd\u0027T\u0027HH:mm\", \"yyyy-MM-dd HHmm\",","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \"yyyy-MM-dd HH:mm\", \"dd MMM yyyy HHmm\",","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \"dd MMM yyyy HH:mm\", \"MMM dd, yyyy HHmm\",","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \"MMM dd, yyyy HH:mm\"","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"Yufannnn"},"content":"        if (!Tag.isValidTagLength(trimmedTag)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"Yufannnn"},"content":"            throw new ParseException(Tag.MESSAGE_TAG_LENGTH);","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    //@@author Yufannnn-reused","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/wweqg/ip/blob/master/src/main/java/duke/parser/Parser.java","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    //with minor modification, it is a pretty clean and concise regular expression for general instructions","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Parses a string to a LocalDateTime object using the acceptable date time formats defined","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * in {@link #ACCEPTABLE_DATETIME_FORMATS}.","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @param date The date string to be parsed","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @return The parsed LocalDateTime object","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @throws ParseException if the date string does not match any of the acceptable date time formats","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseDeadline(String date) throws ParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (String dateTimeFormat : ACCEPTABLE_DATETIME_FORMATS) {","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                return LocalDateTime.parse(date,","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                        DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                // Go to the next dateTimeFormat","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        throw new ParseException(\"Invalid date format. Please use one of the following formats:\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                + String.join(\"\\n\", ACCEPTABLE_DATETIME_FORMATS));","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Parses a string to a LocalDateTime object using the acceptable date time formats defined","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * in {@link #ACCEPTABLE_DATETIME_FORMATS}.","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @param date The date string to be parsed","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @return The parsed LocalDateTime object","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @throws ParseException if the date string does not match any of the acceptable date time formats","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseStartTime(String date) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        for (String dateTimeFormat : ACCEPTABLE_DATETIME_FORMATS) {","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                return LocalDateTime.parse(date,","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                // Go to the next dateTimeFormat","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        throw new ParseException(\"Invalid date format. Please use one of the following formats:\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            + String.join(\"\\n\", ACCEPTABLE_DATETIME_FORMATS));","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Parses a string to a LocalDateTime object using the acceptable date time formats defined","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * in {@link #ACCEPTABLE_DATETIME_FORMATS}.","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @param date The date string to be parsed","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * @return The parsed LocalDateTime object","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * @throws ParseException if the date string does not match any of the acceptable date time formats","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseEndTime(String date) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        for (String dateTimeFormat : ACCEPTABLE_DATETIME_FORMATS) {","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return LocalDateTime.parse(date,","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    DateTimeFormatter.ofPattern(dateTimeFormat));","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                // Go to the next dateTimeFormat","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        throw new ParseException(\"Invalid date format. Please use one of the following formats:\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            + String.join(\"\\n\", ACCEPTABLE_DATETIME_FORMATS));","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Parses a string to a LocalDateTime object using the acceptable date time formats defined","lastModifiedDate":"2023-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * @param status The status string to be parsed","lastModifiedDate":"2023-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * @return The parsed Boolean object","lastModifiedDate":"2023-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @throws ParseException if the status string does not match any of the acceptable status","lastModifiedDate":"2023-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public static Boolean parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (status.equalsIgnoreCase(Homework.Status.COMPLETED.toString())) {","lastModifiedDate":"2023-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        } else if (status.equalsIgnoreCase(Homework.Status.PENDING.toString())) {","lastModifiedDate":"2023-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Invalid status. Please use either \u0027completed\u0027 or \u0027pending\u0027.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * Parses a string to a LocalDateTime object using the acceptable date time formats defined","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * @param date The date string to be parsed","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * @return The parsed LocalDate object","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * @throws ParseException if the string does not match any supported date formats","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        //throw new ParseException(\"test\");","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        LocalDate res;","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            res \u003d LocalDate.parse(date);","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Invalid date format!\", e);","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return res;","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Checks if the deadline is unique and not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * @param argMultimap the argument multimap to check for deadline.","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * @throws ParseException if the deadline is not unique or null.","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public static void checkUniqueNotNUllDeadline(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        // only one deadline keyword is allowed","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        if (argMultimap.getAllValues(PREFIX_DEADLINE).size() \u003e 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_ONLY_ONE_DEADLINE));","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // it cannot be empty","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).get().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_EMPTY_DEADLINE));","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * Checks if the name is unique and not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * @param argMultimap the argument multimap to check for name.","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     * @throws ParseException if the name is not unique or null.","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public static void checkUniqueNotNUllName(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // only one name keyword is allowed","lastModifiedDate":"2023-03-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (argMultimap.getAllValues(PREFIX_NAME).size() \u003e 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_ONLY_ONE_STUDENT));","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        // it cannot be empty","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).get().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_EMPTY_STUDENT));","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * Checks if the homework name is unique and not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * @param argMultimap the argument multimap to check for homework name.","lastModifiedDate":"2023-03-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * @throws ParseException if the homework name is not unique or null.","lastModifiedDate":"2023-03-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public static void checkUniqueNotNUllHomework(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        // only one homework keyword is allowed","lastModifiedDate":"2023-03-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        if (argMultimap.getAllValues(PREFIX_HOMEWORK).size() \u003e 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_ONLY_ONE_HOMEWORK));","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // it cannot be empty","lastModifiedDate":"2023-03-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_HOMEWORK).get().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_EMPTY_HOMEWORK));","lastModifiedDate":"2023-03-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"     * Checks if the index is unique and not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * @param argMultimap the argument multimap to check for index.","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * @throws ParseException if the index is not unique or null.","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    public static void checkUniqueNotNullIndex(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        // only one index keyword is allowed","lastModifiedDate":"2023-03-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        if (argMultimap.getAllValues(PREFIX_INDEX).size() \u003e 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_ONLY_ONE_INDEX));","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        // it cannot be empty","lastModifiedDate":"2023-03-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_INDEX).get().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_EMPTY_INDEX));","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * Checks if the index is unique and not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * @param argMultimap the argument multimap to check for index.","lastModifiedDate":"2023-03-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * @throws ParseException if the index is not unique or null.","lastModifiedDate":"2023-03-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public static void checkUniqueNotNullStatus(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        // only one index keyword is allowed","lastModifiedDate":"2023-03-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        if (argMultimap.getAllValues(PREFIX_STATUS).size() \u003e 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_ONLY_ONE_STATUS));","lastModifiedDate":"2023-03-30"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        // it cannot be empty","lastModifiedDate":"2023-03-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).get().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_EMPTY_STATUS));","lastModifiedDate":"2023-03-30"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Checks if the index is unique and not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * @param argMultimap the argument multimap to check for index.","lastModifiedDate":"2023-03-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * @throws ParseException if the index is not unique or null.","lastModifiedDate":"2023-03-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    public static void checkUniqueHomework(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        // only one homework keyword is allowed","lastModifiedDate":"2023-03-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        if (argMultimap.getAllValues(PREFIX_HOMEWORK).size() \u003e 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_ONLY_ONE_HOMEWORK));","lastModifiedDate":"2023-03-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"     * Checks if the homework name is not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"     * @param homework the homework name to check for null.","lastModifiedDate":"2023-03-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"     * @throws ParseException if the homework name is null.","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    public static void checkNotNullHomework(String homework) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        // it cannot be empty","lastModifiedDate":"2023-03-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        if (homework.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_EMPTY_HOMEWORK));","lastModifiedDate":"2023-03-30"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"     * Checks if the name is not null.","lastModifiedDate":"2023-03-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"     * @param names the name to check for null.","lastModifiedDate":"2023-03-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"     * @throws ParseException if the name is null.","lastModifiedDate":"2023-03-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    public static void checkNotNullNames(List\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            if (name.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"                        Messages.MESSAGE_EMPTY_STUDENT));","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":399,"author":{"gitId":"-"},"content":"     * parses a string and returns a double representing the percentage weightage","lastModifiedDate":"2023-03-31"},{"lineNumber":400,"author":{"gitId":"-"},"content":"     * @param weight string to parse","lastModifiedDate":"2023-03-31"},{"lineNumber":401,"author":{"gitId":"-"},"content":"     * @return Double percentage","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"-"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-31"},{"lineNumber":403,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    public static double parseWeightage(String weight) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        if (!weight.matches(\"^[0-9]+(?:\\\\.[0-9]+)?%?$\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Weightage is in an invalid format!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        weight \u003d weight.replace(\"%\", \"\"); //removes % sign if it exists","lastModifiedDate":"2023-03-30"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        Double res \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            res \u003d Double.parseDouble(weight);","lastModifiedDate":"2023-03-30"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            throw new ParseException(\"unexpected error occurred when parsing weightage\", e);","lastModifiedDate":"2023-03-30"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        return res;","lastModifiedDate":"2023-03-30"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":419,"author":{"gitId":"-"},"content":"     * parses a string and returns a Grade object representing it","lastModifiedDate":"2023-03-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"     * @param grade string to parse","lastModifiedDate":"2023-03-31"},{"lineNumber":421,"author":{"gitId":"-"},"content":"     * @return Grade representationn","lastModifiedDate":"2023-03-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    public static Grade parseGrade(String grade) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        if (!grade.matches(\"^[0-9]+/[0-9]+$\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Grade is in an invalid format!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        Grade res;","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            res \u003d new Grade(Double.parseDouble(grade.split(\"/\")[0]), Double.parseDouble(grade.split(\"/\")[1]));","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        return res;","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":437,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"szejiancheng":7,"NBQian":1,"Yufannnn":16,"-":413}},{"path":"src/main/java/seedu/address/logic/parser/ViewProfileCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.logic.commands.ViewProfileCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":" * Parses input arguments and creates a new ViewProfileCommand object","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"public class ViewProfileCommandParser implements Parser {","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"                    ViewProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"        List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"        boolean defaultPredicateFlag;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        // If name is present, create a predicate to filter by name","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"            List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"            // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"            for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"                String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"                name \u003d name.trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"                if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"                            ViewProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"                int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"                nameKeywords.set(i, name);","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"szejiancheng"},"content":"            nameList \u003d nameKeywords;","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"            namePredicate \u003d new NamePredicate(nameKeywords);","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"szejiancheng"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"            namePredicate \u003d PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"        return new ViewProfileCommand(nameList, namePredicate);","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"szejiancheng":63}},{"path":"src/main/java/seedu/address/logic/parser/exam/CreateExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.CreateExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Grade;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":" * Parses input arguments and creates a new CreateHomeworkExam object","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"public class CreateExamCommandParser implements Parser\u003cCreateExamCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateExamCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"     * and returns a CreateExamCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"    public CreateExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EXAM, PREFIX_STARTTIME, PREFIX_ENDTIME,","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"                        PREFIX_WEIGHT, PREFIX_GRADE);","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EXAM, PREFIX_STARTTIME, PREFIX_ENDTIME)","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"                    CreateExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"        String examDescription \u003d argMultimap.getValue(PREFIX_EXAM).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        if (examDescription.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"                CreateExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime startTime \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_STARTTIME).get());","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime endTime \u003d ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_ENDTIME).get());","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"szejiancheng"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"        Double weightage \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"        //if the weightage of an exam is provided, store the weight","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"szejiancheng"},"content":"        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"            weightage \u003d ParserUtil.parseWeightage(argMultimap.getValue(PREFIX_WEIGHT).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"        Grade grade \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"        //if the grade of an exam is provided, store the grade","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"        if (argMultimap.getValue(PREFIX_GRADE).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"            grade \u003d ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"szejiancheng"},"content":"        // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"        for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"            String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"szejiancheng"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"            if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"                    CreateExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"            //            int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"            //            if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            //                name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"            //            }","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"szejiancheng"},"content":"            nameKeywords.set(i, name);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        return new CreateExamCommand(names, new NamePredicate(nameKeywords),","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"szejiancheng"},"content":"                examDescription, startTime, endTime, weightage, grade);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"szejiancheng"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"szejiancheng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"szejiancheng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"szejiancheng":71,"NBQian":24,"Yufannnn":2}},{"path":"src/main/java/seedu/address/logic/parser/exam/DeleteExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.DeleteExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":" * Parses input arguments and creates a new DeleteLessonCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"public class DeleteExamCommandParser implements Parser\u003cDeleteExamCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e inputNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteLessonCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"     * and returns a CreateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    public DeleteExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX)","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"                DeleteExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"            String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"            if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"                    DeleteExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"            //            int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"            //            if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"            //                name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"            //            }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"            nameKeywords.set(i, name);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        inputNames \u003d nameKeywords;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        return new DeleteExamCommand(inputNames, new NamePredicate(nameKeywords), index);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"NBQian":71}},{"path":"src/main/java/seedu/address/logic/parser/exam/UpdateExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.UpdateExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Grade;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":" * An UpdateHomeworkCommandParser that parses input arguments and creates a new UpdateHomeworkCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"public class UpdateExamCommandParser implements Parser\u003cUpdateExamCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateHomeworkCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"     * and returns an UpdateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    public UpdateExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX, PREFIX_EXAM, PREFIX_STARTTIME,","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"                PREFIX_ENDTIME, PREFIX_WEIGHT, PREFIX_GRADE);","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_EXAM)","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_STARTTIME)","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"            \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_ENDTIME)","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"            \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_WEIGHT)","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"            \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_GRADE))","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"                UpdateExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"        // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"            String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"            if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                    UpdateExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"            //            int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"            //            if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"            //                name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"            //            }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"            nameKeywords.set(i, name);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        if (nameKeywords.size() \u003e 1) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"szejiancheng"},"content":"                \"Only one name is allowed for update exam command.\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"        // if exam name is not present, set it to null, else parse it","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        Optional\u003cString\u003e examName \u003d Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_EXAM).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"            examName \u003d Optional.of(argMultimap.getValue(PREFIX_EXAM).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        // if deadline is not present, set it to null, else parse it","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        Optional\u003cLocalDateTime\u003e startTime \u003d Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"            startTime \u003d Optional.of(ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"        Optional\u003cLocalDateTime\u003e endTime \u003d Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"            endTime \u003d Optional.of(ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_ENDTIME).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"szejiancheng"},"content":"        Optional\u003cDouble\u003e weight \u003d Optional.empty();","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"szejiancheng"},"content":"        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"szejiancheng"},"content":"            weight \u003d Optional.of(ParserUtil.parseWeightage(argMultimap.getValue(PREFIX_WEIGHT).get()));","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"szejiancheng"},"content":"        Optional\u003cGrade\u003e grade \u003d Optional.empty();","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"szejiancheng"},"content":"        if (argMultimap.getValue(PREFIX_GRADE).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"szejiancheng"},"content":"            grade \u003d Optional.of(ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get()));","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"        return new UpdateExamCommand(names, index, new NamePredicate(nameKeywords),","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"szejiancheng"},"content":"            examName, startTime, endTime, weight, grade);","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"szejiancheng":20,"NBQian":102}},{"path":"src/main/java/seedu/address/logic/parser/exam/ViewExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.exam;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.exam.ViewExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.ExamDatePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.ExamDonePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.ExamPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":" * Parses input arguments and creates a new ViewHomeworkCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"public class ViewExamCommandParser implements Parser\u003cViewExamCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewLessonCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"     * and returns a ViewLessonCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"     * @param args the user input to be parsed into a ViewLessonCommand object.","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"     * @return a ViewExamCommand object.","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    public ViewExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_EXAM,","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"            PREFIX_DONE);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"                ViewExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"        Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        Predicate\u003cExam\u003e examPredicate \u003d exam -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        Predicate\u003cExam\u003e donePredicate \u003d exam -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        boolean defaultPredicateFlag;","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        // If name is present, create a predicate to filter by name","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"            List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"            // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"            for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"                String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"                name \u003d name.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"                if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                        ViewExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"                int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"                //                if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"                //                    name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"                //                }","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"                nameKeywords.set(i, name);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"            nameList \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"            namePredicate \u003d new NamePredicate(nameKeywords);","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"            defaultPredicateFlag \u003d false;","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"            namePredicate \u003d PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"            defaultPredicateFlag \u003d true;","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_EXAM).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"            String exam \u003d argMultimap.getValue(PREFIX_EXAM).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"            examPredicate \u003d new ExamPredicate(exam);","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_DONE).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"            String done \u003d argMultimap.getValue(PREFIX_DONE).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"            if (!done.equals(\"done\") \u0026\u0026 !done.equals(\"not done\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"                    ViewExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"            donePredicate \u003d new ExamDonePredicate(done);","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        // If date is present, create a predicate to filter by date","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"            String date \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"            LocalDate targetDate \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"            ExamDatePredicate datePredicate \u003d new ExamDatePredicate(targetDate);","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"            return new ViewExamCommand(nameList, namePredicate, datePredicate, examPredicate, donePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"                defaultPredicateFlag);","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"            return new ViewExamCommand(nameList, namePredicate, examPredicate, donePredicate, defaultPredicateFlag);","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"NBQian":107}},{"path":"src/main/java/seedu/address/logic/parser/homework/CreateHomeworkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkNotNullNames;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNUllDeadline;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNUllHomework;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.CreateHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":" * Parses input arguments and creates a new CreateHomeworkCommand object","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"public class CreateHomeworkCommandParser implements Parser\u003cCreateHomeworkCommand\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateHomeworkCommand","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     * and returns a CreateHomeworkCommand object for execution.","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * @param args the user input to be parsed.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     * @return CreateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    public CreateHomeworkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_HOMEWORK, PREFIX_DEADLINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_HOMEWORK, PREFIX_DEADLINE)","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"                    CreateHomeworkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        checkNotNullNames(nameKeywords);","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNUllHomework(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNUllDeadline(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        String homeworkName \u003d argMultimap.getValue(PREFIX_HOMEWORK).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        if (deadline.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"            throw new ParseException(Messages.MESSAGE_DEADLINE_IN_PAST);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        return new CreateHomeworkCommand(nameKeywords, new NamePredicate(nameKeywords),","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"                homeworkName, deadline);","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"NBQian":1,"Yufannnn":75}},{"path":"src/main/java/seedu/address/logic/parser/homework/DeleteHomeworkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNUllName;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNullIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.DeleteHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":" * Parses input arguments and creates a new CreateHomeworkCommand object","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"public class DeleteHomeworkCommandParser implements Parser\u003cDeleteHomeworkCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateHomeworkCommand","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     * and returns a CreateHomeworkCommand object for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     * @param args the user input arguments to be parsed.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * @return CreateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    public DeleteHomeworkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX)","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"                    DeleteHomeworkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNUllName(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNullIndex(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        return new DeleteHomeworkCommand(names, new NamePredicate(nameKeywords), index);","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"     * @param argumentMultimap the argument multimap to be checked.","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"NBQian":5,"Yufannnn":64}},{"path":"src/main/java/seedu/address/logic/parser/homework/MarkHomeworkAsDoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNUllName;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNullIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.MarkHomeworkAsDoneCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":" * Parses input arguments and creates a new MarkHomeworkAsDoneCommand object","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"public class MarkHomeworkAsDoneCommandParser implements Parser\u003cMarkHomeworkAsDoneCommand\u003e {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkHomeworkAsDoneCommand","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     * and returns a MarkHomeworkAsDoneCommand object for execution.","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     * @param args the user input to be parsed.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * @return MarkHomeworkAsDoneCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    public MarkHomeworkAsDoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX);","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX)","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"                    MarkHomeworkAsDoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNUllName(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNullIndex(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        return new MarkHomeworkAsDoneCommand(names, new NamePredicate(nameKeywords), index);","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"NBQian":5,"Yufannnn":64}},{"path":"src/main/java/seedu/address/logic/parser/homework/MarkHomeworkAsUndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNUllName;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNullIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.MarkHomeworkAsUndoCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":" * Parses input arguments and creates a new MarkHomeworkAsDoneCommand object","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"public class MarkHomeworkAsUndoCommandParser implements Parser\u003cMarkHomeworkAsUndoCommand\u003e {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkHomeworkAsDoneCommand","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     * and returns a MarkHomeworkAsDoneCommand object for execution.","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     * @param args the user input to be parsed.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * @return MarkHomeworkAsUndoCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    public MarkHomeworkAsUndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX);","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX)","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"                    MarkHomeworkAsUndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNUllName(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNullIndex(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        return new MarkHomeworkAsUndoCommand(names, new NamePredicate(nameKeywords), index);","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"NBQian":5,"Yufannnn":64}},{"path":"src/main/java/seedu/address/logic/parser/homework/UpdateHomeworkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkNotNullHomework;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueHomework;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNUllDeadline;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNUllName;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNullIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.UpdateHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":" * An UpdateHomeworkCommandParser that parses input arguments and creates a new UpdateHomeworkCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"public class UpdateHomeworkCommandParser implements Parser\u003cUpdateHomeworkCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateHomeworkCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"     * and returns an UpdateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    public UpdateHomeworkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX, PREFIX_HOMEWORK, PREFIX_DEADLINE);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_HOMEWORK)","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_DEADLINE))","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"                    UpdateHomeworkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNUllName(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        checkUniqueNotNullIndex(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        // if homework name is not present, set it to null, else parse it","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        Optional\u003cString\u003e homeworkName \u003d Optional.empty();","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        if (argMultimap.getValue(PREFIX_HOMEWORK).isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"            checkUniqueHomework(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"            homeworkName \u003d Optional.of(argMultimap.getValue(PREFIX_HOMEWORK).get());","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"            checkNotNullHomework(homeworkName.get());","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"        // if deadline is not present, set it to null, else parse it","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        Optional\u003cLocalDateTime\u003e deadline \u003d Optional.empty();","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"            checkUniqueNotNUllDeadline(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"            deadline \u003d Optional.of(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        return new UpdateHomeworkCommand(names, index, new NamePredicate(nameKeywords),","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"                homeworkName, deadline);","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"NBQian":5,"Yufannnn":86}},{"path":"src/main/java/seedu/address/logic/parser/homework/ViewHomeworkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkNotNullNames;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.ParserUtil.checkUniqueNotNullStatus;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.ViewHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.HomeworkIsCompletePredicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":" * Parses input arguments and creates a new ViewHomeworkCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"public class ViewHomeworkCommandParser implements Parser\u003cViewHomeworkCommand\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     * Checks if the list of strings contains an empty string.","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * @param list the list of strings to be checked.","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     * @return true if the list does not contain an empty string, false otherwise.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    private boolean checkEmptyString(List\u003cString\u003e list) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        for (String s : list) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"            if (s.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewHomeworkCommand","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"     * and returns a ViewHomeworkCommand object for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"     * @param args the user input to be parsed into a ViewHomeworkCommand object.","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"     * @return a ViewHomeworkCommand object.","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    public ViewHomeworkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"                ViewHomeworkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        boolean defaultPredicateFlag;","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        // If name is present, create a predicate to filter by name","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"            List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"            checkNotNullNames(nameKeywords);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"            names \u003d nameKeywords;","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"            namePredicate \u003d new NamePredicate(nameKeywords);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"            defaultPredicateFlag \u003d false;","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"            namePredicate \u003d PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"            defaultPredicateFlag \u003d true;","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        // If status is present, create a predicate to filter by status","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"            checkUniqueNotNullStatus(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"            String status \u003d argMultimap.getValue(PREFIX_STATUS).get();","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"            boolean isCompleted \u003d ParserUtil.parseStatus(status);","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"            HomeworkIsCompletePredicate statusPredicate \u003d new HomeworkIsCompletePredicate(isCompleted);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"            return new ViewHomeworkCommand(names, namePredicate, statusPredicate, defaultPredicateFlag);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"            return new ViewHomeworkCommand(names, namePredicate, defaultPredicateFlag);","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"NBQian":14,"Yufannnn":78}},{"path":"src/main/java/seedu/address/logic/parser/lesson/CreateLessonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.CreateLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":" * Parses input arguments and creates a new CreateHomeworkCommand object","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"public class CreateLessonCommandParser implements Parser\u003cCreateLessonCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateHomeworkCommand","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"     * and returns a CreateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    public CreateLessonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LESSON, PREFIX_STARTTIME, PREFIX_ENDTIME);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LESSON, PREFIX_STARTTIME, PREFIX_ENDTIME)","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                CreateLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        String lessonName \u003d argMultimap.getValue(PREFIX_LESSON).get();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"        if (lessonName.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"                CreateLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_STARTTIME).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_ENDTIME).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"        if (endTime.isBefore(startTime)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateLessonCommand.MESSAGE_DATE));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"            String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"            if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"                    CreateLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"            //            int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"            //            if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"            //                name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"            //            }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"            nameKeywords.set(i, name);","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        return new CreateLessonCommand(names, new NamePredicate(nameKeywords),","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"            lessonName, startTime, endTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"NBQian":85}},{"path":"src/main/java/seedu/address/logic/parser/lesson/DeleteLessonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.DeleteLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":" * Parses input arguments and creates a new DeleteLessonCommand object","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"public class DeleteLessonCommandParser implements Parser\u003cDeleteLessonCommand\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e inputNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteLessonCommand","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"     * and returns a CreateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    public DeleteLessonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX)","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"                DeleteLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"            String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"            if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"                    DeleteLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"            //            int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"            //            if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"            //                name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"            //            }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"            nameKeywords.set(i, name);","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        inputNames \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        return new DeleteLessonCommand(inputNames, new NamePredicate(nameKeywords), index);","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"NBQian":71}},{"path":"src/main/java/seedu/address/logic/parser/lesson/UpdateLessonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.UpdateLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":" * An UpdateHomeworkCommandParser that parses input arguments and creates a new UpdateHomeworkCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"public class UpdateLessonCommandParser implements Parser\u003cUpdateLessonCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateHomeworkCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"     * and returns an UpdateHomeworkCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"    public UpdateLessonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INDEX, PREFIX_LESSON, PREFIX_STARTTIME,","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                PREFIX_ENDTIME);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_LESSON)","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_STARTTIME)","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEX, PREFIX_ENDTIME))","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"                UpdateLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"        // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"            String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"            name \u003d name.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"            if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"                    UpdateLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"            //            int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"            //            if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"            //                name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"            //            }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"            nameKeywords.set(i, name);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        names \u003d nameKeywords;","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"        if (nameKeywords.size() \u003e 1) {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"                \"Only one name is allowed for update homework command.\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        // if homework name is not present, set it to null, else parse it","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        Optional\u003cString\u003e lessonName \u003d Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_LESSON).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"            lessonName \u003d Optional.of(argMultimap.getValue(PREFIX_LESSON).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        // if deadline is not present, set it to null, else parse it","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        Optional\u003cLocalDateTime\u003e startTime \u003d Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"            startTime \u003d Optional.of(ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        Optional\u003cLocalDateTime\u003e endTime \u003d Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"            endTime \u003d Optional.of(ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_ENDTIME).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"        return new UpdateLessonCommand(names, index, new NamePredicate(nameKeywords),","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"            lessonName, startTime, endTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"     * Returns true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"     * @param argumentMultimap the argument multimap to check for prefixes.","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"     * @param prefixes the prefixes to be checked.","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"     * @return true if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"NBQian":107}},{"path":"src/main/java/seedu/address/logic/parser/lesson/ViewLessonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.logic.parser.lesson;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.commands.lesson.ViewLessonCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.LessonBelongsToDatePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.LessonDonePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.LessonSubjectPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":" * Parses input arguments and creates a new ViewHomeworkCommand object","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"public class ViewLessonCommandParser implements Parser\u003cViewLessonCommand\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewLessonCommand","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"     * and returns a ViewLessonCommand object for execution.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"     * @param args the user input to be parsed into a ViewLessonCommand object.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"     * @return a ViewLessonCommand object.","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    public ViewLessonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_SUBJECT,","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"            PREFIX_DONE);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"                ViewLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"        Predicate\u003cStudent\u003e namePredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        Predicate\u003cLesson\u003e subjectPredicate \u003d lesson -\u003e true;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        Predicate\u003cLesson\u003e donePredicate \u003d lesson -\u003e true;","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        boolean defaultPredicateFlag;","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        // If name is present, create a predicate to filter by name","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"            List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"            // for all the names, trim the name and only take the first word","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"            for (int i \u003d 0; i \u003c nameKeywords.size(); i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"                String name \u003d nameKeywords.get(i);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"                name \u003d name.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"                if (name.trim().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                        ViewLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"                int spaceIndex \u003d name.indexOf(\" \");","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"                //                if (spaceIndex !\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"                //                    name \u003d name.substring(0, spaceIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"                //                }","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"                nameKeywords.set(i, name);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"            nameList \u003d nameKeywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"            namePredicate \u003d new NamePredicate(nameKeywords);","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"            defaultPredicateFlag \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"            namePredicate \u003d PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"            defaultPredicateFlag \u003d true;","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_SUBJECT).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"            String subject \u003d argMultimap.getValue(PREFIX_SUBJECT).get();","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"            subjectPredicate \u003d new LessonSubjectPredicate(subject);","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_DONE).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"            String done \u003d argMultimap.getValue(PREFIX_DONE).get();","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"            if (!done.equals(\"done\") \u0026\u0026 !done.equals(\"not done\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"                    ViewLessonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"            donePredicate \u003d new LessonDonePredicate(done);","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        // If date is present, create a predicate to filter by status","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"            String date \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"            LocalDate targetDate \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"            LessonBelongsToDatePredicate datePredicate \u003d new LessonBelongsToDatePredicate(targetDate);","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"            return new ViewLessonCommand(nameList, namePredicate, datePredicate, subjectPredicate, donePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"                defaultPredicateFlag);","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"            return new ViewLessonCommand(nameList, namePredicate, subjectPredicate, donePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"                defaultPredicateFlag);","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"            || (other instanceof ViewLessonCommandParser // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"            \u0026\u0026 this.equals((ViewLessonCommandParser) other)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"NBQian":109,"Yufannnn":6}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        setStudents(newData.getPersonList());","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    public boolean hasPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        return students.contains(person);","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        students.add(p);","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson(Student target, Student editedPerson) {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"        students.setPerson(target, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    public void removePerson(Student key) {","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"        students.remove(key);","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        return students.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cStudent\u003e getPersonList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students));","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"        return students.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":20,"-":100}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" * The API of the Model component. Contains the data of the application in-memory.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    boolean hasPerson(Student person);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    void deletePerson(Student target);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    void addPerson(Student person);","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    void setStudent(Student target, Student editedPerson);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"    boolean hasDuplicateName(String name);","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"    boolean hasDuplicateNameEdit(String name, Integer index);","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"    boolean hasExtendedName(String name);","lastModifiedDate":"2023-04-02"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"    boolean hasExtendedNameEdit(String name, Integer index);","lastModifiedDate":"2023-04-02"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"    boolean noSuchStudent(String name);","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"    boolean hasDuplicateNameAdd(String toString);","lastModifiedDate":"2023-04-02"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"    boolean hasConflictingLessonTime(Lesson lesson);","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"    boolean hasConflictingExamTime(Lesson lesson);","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"NBQian":11,"Yufannnn":9,"-":78}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    private final FilteredList\u003cStudent\u003e filteredPersons;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    public boolean hasPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"    public void deletePerson(Student target) {","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"    public void addPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        addressBook.addStudent(person);","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"    public void setStudent(Student target, Student editedPerson) {","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"     * Returns true if the model has a student whose name is part of the input name.","lastModifiedDate":"2023-04-02"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"    public boolean hasDuplicateName(String name) {","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"        for (Student s : filteredPersons) {","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"            if (s.getName().toString().toLowerCase().contains(name.toLowerCase())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"                count++;","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"NBQian"},"content":"        return count \u003e\u003d 2;","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":"    public boolean hasDuplicateNameAdd(String name) {","lastModifiedDate":"2023-04-02"},{"lineNumber":167,"author":{"gitId":"NBQian"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":168,"author":{"gitId":"NBQian"},"content":"        for (Student s : filteredPersons) {","lastModifiedDate":"2023-04-02"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"            if (s.getName().toString().toLowerCase().contains(name.toLowerCase())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"                count++;","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"NBQian"},"content":"        return count \u003e\u003d 1;","lastModifiedDate":"2023-04-02"},{"lineNumber":174,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":175,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":177,"author":{"gitId":"NBQian"},"content":"    public boolean hasDuplicateNameEdit(String name, Integer index) {","lastModifiedDate":"2023-04-02"},{"lineNumber":178,"author":{"gitId":"NBQian"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":179,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c filteredPersons.size(); i++) {","lastModifiedDate":"2023-04-02"},{"lineNumber":180,"author":{"gitId":"NBQian"},"content":"            if (filteredPersons.get(i).getName().toString().toLowerCase().contains(name.toLowerCase()) \u0026\u0026 i !\u003d index) {","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"NBQian"},"content":"                count++;","lastModifiedDate":"2023-04-02"},{"lineNumber":182,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":183,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":184,"author":{"gitId":"NBQian"},"content":"        return count \u003e\u003d 1;","lastModifiedDate":"2023-04-02"},{"lineNumber":185,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":186,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":187,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":188,"author":{"gitId":"NBQian"},"content":"     * Returns true if the model has a student whose name is part of the input name.","lastModifiedDate":"2023-04-02"},{"lineNumber":189,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":190,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":191,"author":{"gitId":"NBQian"},"content":"    public boolean hasExtendedName(String name) {","lastModifiedDate":"2023-04-02"},{"lineNumber":192,"author":{"gitId":"NBQian"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":193,"author":{"gitId":"NBQian"},"content":"        for (Student s : filteredPersons) {","lastModifiedDate":"2023-04-02"},{"lineNumber":194,"author":{"gitId":"NBQian"},"content":"            if (name.toLowerCase().contains(s.getName().toString().toLowerCase())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":195,"author":{"gitId":"NBQian"},"content":"                count++;","lastModifiedDate":"2023-04-02"},{"lineNumber":196,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":197,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":198,"author":{"gitId":"NBQian"},"content":"        return count \u003e\u003d 1;","lastModifiedDate":"2023-04-02"},{"lineNumber":199,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":200,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":201,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":202,"author":{"gitId":"NBQian"},"content":"    public boolean hasExtendedNameEdit(String name, Integer index) {","lastModifiedDate":"2023-04-02"},{"lineNumber":203,"author":{"gitId":"NBQian"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":204,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c filteredPersons.size(); i++) {","lastModifiedDate":"2023-04-02"},{"lineNumber":205,"author":{"gitId":"NBQian"},"content":"            if (name.toLowerCase().contains(filteredPersons.get(i).getName().toString().toLowerCase()) \u0026\u0026 i !\u003d index) {","lastModifiedDate":"2023-04-05"},{"lineNumber":206,"author":{"gitId":"NBQian"},"content":"                count++;","lastModifiedDate":"2023-04-02"},{"lineNumber":207,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":208,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":209,"author":{"gitId":"NBQian"},"content":"        return count \u003e\u003d 1;","lastModifiedDate":"2023-04-02"},{"lineNumber":210,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":211,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":212,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"NBQian"},"content":"    public boolean noSuchStudent(String name) {","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"NBQian"},"content":"        for (Student s : filteredPersons) {","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"NBQian"},"content":"            if (s.getName().toString().toLowerCase().contains(name.toLowerCase())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":216,"author":{"gitId":"NBQian"},"content":"                return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"NBQian"},"content":"        return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":222,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":223,"author":{"gitId":"NBQian"},"content":"    public boolean hasConflictingLessonTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":224,"author":{"gitId":"NBQian"},"content":"        for (Student s : filteredPersons) {","lastModifiedDate":"2023-04-05"},{"lineNumber":225,"author":{"gitId":"NBQian"},"content":"            if (s.hasConflictingLessonTime(lesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":226,"author":{"gitId":"NBQian"},"content":"                return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":227,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":228,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":229,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":230,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":231,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":232,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":233,"author":{"gitId":"NBQian"},"content":"    public boolean hasConflictingExamTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":234,"author":{"gitId":"NBQian"},"content":"        for (Student s : filteredPersons) {","lastModifiedDate":"2023-04-05"},{"lineNumber":235,"author":{"gitId":"NBQian"},"content":"            if (s.hasConflictingExamTime(lesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":236,"author":{"gitId":"NBQian"},"content":"                return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":237,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":238,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":239,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":240,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NBQian":91,"Yufannnn":10,"-":140}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    ObservableList\u003cStudent\u003e getPersonList();","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":2,"-":15}},{"path":"src/main/java/seedu/address/model/student/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yufannnn":1,"-":56}},{"path":"src/main/java/seedu/address/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yufannnn":2,"-":69}},{"path":"src/main/java/seedu/address/model/student/Exam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":" * Represents an Exam in the TutorPro.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":" * Note: This class has a natural ordering that is inconsistent with equals.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":" * This is because the natural ordering is based on the start time of the exam,","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" * while equals is based on the description, start time, end time, weightage, status, and grade.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"public class Exam {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private final String description;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    private final Double weightage;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    private final Grade grade;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     * Creates a new Exam with the given description, start time, end time, weightage, and grade.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"     * @param description The description of the exam.","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"     * @param startTime   The start time of the exam.","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"     * @param endTime     The end time of the exam.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"     * @param weightage   The weightage of the exam.","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"     * @param grade       The grade of the exam.","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public Exam(String description, LocalDateTime startTime, LocalDateTime endTime,","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"                Double weightage, Grade grade) {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        Objects.requireNonNull(description);","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        Objects.requireNonNull(startTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        Objects.requireNonNull(endTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"            throw new IllegalArgumentException(\"Start time cannot be after end time.\");","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        if (weightage !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"            if (weightage \u003c 0 || weightage \u003e 100) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"                throw new IllegalArgumentException(\"Weightage must be a percentage between 0 and 100.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"     * Returns the description of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"     * @return The description of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        return description;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"     * Returns the start time of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"     * Note: This method is used for sorting exams by start time.","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"     * @return The start time of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        return startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"     * Returns the end time of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     * @return The end time of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        return endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"     * Returns the weightage of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"     * @return The weightage of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"    public Double getWeightage() {","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        return weightage;","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"szejiancheng"},"content":"    public String getStringWeightage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"szejiancheng"},"content":"        if (weightage \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"szejiancheng"},"content":"            return \"Undefined\";","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"szejiancheng"},"content":"        return String.format(\"%.2f\", weightage) + \"%\";","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"     * Returns the duration of the exam in minutes.","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"     * @return The duration of the exam in minutes.","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"    public int getDurationInMinutes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"        return (int) java.time.Duration.between(startTime, endTime).toMinutes();","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"     * Returns the grade of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"     * @return The grade of the exam.","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"     * @throws UnsupportedOperationException If the exam is not finished.","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"    public Grade getGrade() {","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"        return grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"szejiancheng"},"content":"    public String getStringGrade() {","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"szejiancheng"},"content":"        if (grade \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"szejiancheng"},"content":"            return \"Undefined\";","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"szejiancheng"},"content":"        return grade.toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if both exams have the same description and start time.","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"     * This defines a weaker notion of equality between two exams.","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"     * @param otherExam The other exam to compare with.","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"     * @return True if both exams have the same description and start time.","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"    public boolean isSameExam(Exam otherExam) {","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"        if (otherExam \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"Yufannnn"},"content":"        return otherExam !\u003d null","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherExam.getDescription().equals(getDescription())","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 otherExam.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 otherExam.getEndTime().equals(getEndTime())","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 compareWeightages(otherExam.getWeightage(), getWeightage())","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 compareGrades(otherExam.getGrade(), getGrade());","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"szejiancheng"},"content":"    private boolean compareWeightages(Double first, Double second) {","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"szejiancheng"},"content":"        if (first \u003d\u003d null \u0026\u0026 second \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"szejiancheng"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"szejiancheng"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"szejiancheng"},"content":"            if (first \u003d\u003d null || second \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"szejiancheng"},"content":"                return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"szejiancheng"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"szejiancheng"},"content":"                return Double.compare(first, second) \u003d\u003d 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"szejiancheng"},"content":"    private boolean compareGrades(Grade first, Grade second) {","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"szejiancheng"},"content":"        if (first \u003d\u003d null \u0026\u0026 second \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"szejiancheng"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"szejiancheng"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"szejiancheng"},"content":"            if (first \u003d\u003d null || second \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"szejiancheng"},"content":"                return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"szejiancheng"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"szejiancheng"},"content":"                return first.equals(second);","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"     * Returns true if both exams have the same description, start time, end time, weightage, and grade.","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"     * @param otherExam The other exam to compare with.","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"     * @return True if both exams have the same description, start time, end time, weightage, and grade.","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"NBQian"},"content":"    public boolean isSameTimeExam(Exam otherExam) {","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"NBQian"},"content":"        if (otherExam \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"NBQian"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"NBQian"},"content":"        return otherExam !\u003d null","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 otherExam.getStartTime().isBefore(getEndTime()) \u0026\u0026 otherExam.getEndTime().isAfter(getStartTime());","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"Yufannnn"},"content":"     * Creates a new Exam with the given description, start time, end time, weightage, and status.","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"Yufannnn"},"content":"     * @return The new Exam.","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"Yufannnn"},"content":"    public boolean isPastExam() {","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"Yufannnn"},"content":"        return LocalDateTime.now().isAfter(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof Exam)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"Yufannnn"},"content":"        Exam otherExam \u003d (Exam) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"Yufannnn"},"content":"        return otherExam.getDescription().equals(getDescription())","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherExam.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherExam.getEndTime().equals(getEndTime())","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherExam.getWeightage() \u003d\u003d getWeightage()","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherExam.getGrade().equals(getGrade());","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"Yufannnn"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"Yufannnn"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"Yufannnn"},"content":"        builder.append(getDescription())","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"Yufannnn"},"content":"                .append(\" Start Time: \")","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"Yufannnn"},"content":"                .append(getStartTime().format(formatter))","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"Yufannnn"},"content":"                .append(\" End Time: \")","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"Yufannnn"},"content":"                .append(getEndTime().format(formatter))","lastModifiedDate":"2023-03-04"},{"lineNumber":219,"author":{"gitId":"Yufannnn"},"content":"                .append(\" Weightage: \")","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"szejiancheng"},"content":"                .append(getStringWeightage())","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"NBQian"},"content":"                .append(\" Grade: \")","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"szejiancheng"},"content":"                .append(getStringGrade());","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"Yufannnn"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":226,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":227,"author":{"gitId":"NBQian"},"content":"     * Returns true if the given lesson is the same as this one.","lastModifiedDate":"2023-04-05"},{"lineNumber":228,"author":{"gitId":"NBQian"},"content":"     * @param lesson The other lesson to compare with.","lastModifiedDate":"2023-04-05"},{"lineNumber":229,"author":{"gitId":"NBQian"},"content":"     * @return True if the given lesson has the same time slot as this one.","lastModifiedDate":"2023-04-05"},{"lineNumber":230,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":231,"author":{"gitId":"NBQian"},"content":"    public boolean isSameTimeLesson(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":232,"author":{"gitId":"NBQian"},"content":"        return lesson !\u003d null","lastModifiedDate":"2023-04-05"},{"lineNumber":233,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 lesson.getStartTime().isBefore(getEndTime()) \u0026\u0026 lesson.getEndTime().isAfter(getStartTime());","lastModifiedDate":"2023-04-05"},{"lineNumber":234,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":235,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"szejiancheng":47,"NBQian":39,"Yufannnn":149}},{"path":"src/main/java/seedu/address/model/student/ExamDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":" * Tests that a {@code Lesson}\u0027s date matches the given date.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"public class ExamDatePredicate implements Predicate\u003cExam\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    private final LocalDate targetDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * Creates a predicate to test if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     * @param targetDate The LocalDate to test against.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    public ExamDatePredicate(LocalDate targetDate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        this.targetDate \u003d targetDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     * @param lesson The homework to test.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     * @return True if the lesson\u0027s date matches the given date.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public boolean test(Exam lesson) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        return lesson.getStartTime().toLocalDate().isEqual(targetDate);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"            || (other instanceof ExamDatePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 targetDate \u003d\u003d ((ExamDatePredicate) other).targetDate); // date check","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"NBQian":37}},{"path":"src/main/java/seedu/address/model/student/ExamDonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":" * Tests that a {@code Lesson}\u0027s title matches the given subject.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"public class ExamDonePredicate implements Predicate\u003cExam\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    private final String done;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * Creates a predicate to test if a Homework\u0027s title matches the specified subject","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     * @param done The String that represents date","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    public ExamDonePredicate(String done) {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     * @param exam The Exam to test.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     * @return True if the lesson\u0027s title matches the given subject.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public boolean test(Exam exam) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        if (done.equals(\"done\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"            return exam.getStartTime().isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        return exam.getStartTime().isAfter((LocalDateTime.now()));","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"            || (other instanceof ExamDonePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 done.equals(((ExamDonePredicate) other).done)); // date check","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"NBQian":40}},{"path":"src/main/java/seedu/address/model/student/ExamPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":" * Tests that a {@code Lesson}\u0027s title matches the given subject.","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"public class ExamPredicate implements Predicate\u003cExam\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    private final String examName;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"     * Creates a predicate to test if a Homework\u0027s title matches the specified subject","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * @param examName The String to test against.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    public ExamPredicate(String examName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"        this.examName \u003d examName;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     * @param exam The Exam to test.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     * @return True if the lesson\u0027s title matches the given subject.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    public boolean test(Exam exam) {","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        return exam.getDescription().contains(examName);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"            || (other instanceof ExamPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 examName.equals(((ExamPredicate) other).examName)); // date check","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"NBQian":36}},{"path":"src/main/java/seedu/address/model/student/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":" * Represents a Student\u0027s grade in the TutorPro.","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":" * Note: This class has a natural ordering that is inconsistent with equals.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":" * This is because the natural ordering is based on the percentage score obtained,","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":" * while equals is based on the score and full marks.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"public class Grade {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    private final double score;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    private final double fullMarks;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"     * Creates a new Grade with the given score and full marks.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"     * @param score the score obtained by the student","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"     * @param fullMarks the maximum score that could be obtained","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"     * @throws IllegalArgumentException if the score is negative or greater than full marks","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    public Grade(double score, double fullMarks) throws IllegalArgumentException {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        if (score \u003c 0 || score \u003e fullMarks) {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"            throw new IllegalArgumentException(\"Invalid score, score has to be positive and lesser than the \"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"                    + \"full marks achievable\");","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        if (fullMarks \u003c\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"            throw new IllegalArgumentException(\"Full marks must be positive!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"        this.fullMarks \u003d fullMarks;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"    //Dummy code that needs to be included for json-related classes to work, I don\u0027t know why, todo understand this","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"    //https://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    // found-for-type-simple-type-class","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"     * dummy code","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"    public Grade() {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"        score \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"        fullMarks \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"     * Returns the score obtained.","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"     * The score is guaranteed to be non-negative and less than or equal to the full marks.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     * @return the score obtained","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    public double getScore() {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        return score;","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"     * Returns the full marks.","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * The full marks is guaranteed to be non-negative.","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"     * @return the full marks","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    public double getFullMarks() {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        return fullMarks;","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"     * Calculates and returns the percentage score obtained.","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"     * The percentage score is guaranteed to be non-negative and less than or equal to 100.","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"     * @return the percentage score obtained","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    public double getPercentageScore() {","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        return score / fullMarks * 100;","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof Grade)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        Grade otherGrade \u003d (Grade) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        return Double.compare(otherGrade.score, score) \u003d\u003d 0","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 Double.compare(otherGrade.fullMarks, fullMarks) \u003d\u003d 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"        return requireNonNull(Double.valueOf(score)).hashCode()","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"                + requireNonNull(Double.valueOf(fullMarks)).hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"        return String.format(\"%.2f / %.2f (%.2f%%)\", score, fullMarks, getPercentageScore());","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"szejiancheng":18,"Yufannnn":85}},{"path":"src/main/java/seedu/address/model/student/Homework.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":" * Represents a Student\u0027s assignment in the TutorPro.","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"public class Homework {","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    private static final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    private static final String TO_STRING_FORMAT \u003d \"Status: %s, Description: %s, Deadline: %s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    private static final String COMPLETED_TAG \u003d \"[X]\";","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    private static final String PENDING_TAG \u003d \"[ ]\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private final String description;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private Status status;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"     * The status of the homework.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    public enum Status {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"        COMPLETED, PENDING;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    };","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"     * Creates a new Homework with the given description and deadline.","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     * @param description The description of the assignment.","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     * @param deadline The deadline of the assignment.","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    public Homework(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        Objects.requireNonNull(description);","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        Objects.requireNonNull(deadline);","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        this.status \u003d Status.PENDING;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        return description;","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        return deadline;","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        return status;","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        return status \u003d\u003d Status.COMPLETED;","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * Marks the homework as completed.","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        status \u003d Status.COMPLETED;","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"     * Marks the homework as not completed.","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"        status \u003d Status.PENDING;","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"     * Returns a tag to indicate whether the homework is completed or not.","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"     * @return A tag to indicate whether the homework is completed or not.","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    public String getStatusTag() {","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        return status \u003d\u003d Status.COMPLETED ? COMPLETED_TAG : PENDING_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if both homework have the same description.","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"     * This defines a weaker notion of equality between two homework.","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"     * @param otherHomework The other homework to compare with.","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"     * @return True if both homework have the same description.","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    public boolean isSameHomework(Homework otherHomework) {","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"        if (otherHomework \u003d\u003d this) {","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"        return otherHomework !\u003d null","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherHomework.getDescription().equals(getDescription());","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"     * Returns a string representation of the homework.","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"     * @return A string representation of the homework.","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        return deadline.format(PRINT_FORMATTER);","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof Homework)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"        Homework otherHomework \u003d (Homework) other;","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"        return otherHomework.getDescription().equals(getDescription())","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherHomework.getDeadline().equals(getDeadline());","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"        return Objects.hash(getDescription(), getDeadline());","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"        return String.format(TO_STRING_FORMAT, getStatusTag(), getDescription(), getDeadlineString());","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"Yufannnn":131}},{"path":"src/main/java/seedu/address/model/student/HomeworkIsCompletePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":" * Tests that a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"public class HomeworkIsCompletePredicate implements Predicate\u003cHomework\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    private final boolean isComplete;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"     * Creates a predicate to test if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"     * @param isComplete The boolean to test against.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkIsCompletePredicate(boolean isComplete) {","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"     * @param homework The homework to test.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"     * @return True if the homework\u0027s isCompleted matches the given boolean.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public boolean test(Homework homework) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        return homework.isCompleted() \u003d\u003d isComplete;","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof HomeworkIsCompletePredicate // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 isComplete \u003d\u003d ((HomeworkIsCompletePredicate) other).isComplete); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Yufannnn":37}},{"path":"src/main/java/seedu/address/model/student/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":" * Represents a Student\u0027s assignment in the TutorPro.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class Lesson {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    private final String title;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"     * Creates a new Homework with the given description and deadline.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"     * @param title The title of the lesson.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * @param startTime The time when the lesson starts.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     * @param endTime The time when the lesson ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    public Lesson(String title, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        Objects.requireNonNull(title);","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        Objects.requireNonNull(startTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        Objects.requireNonNull(endTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    public String getTitle() {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        return title;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        return startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        return endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"     * Returns the start time of the lesson in a String format.","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"     * @return The start time of the lesson in a String format.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    public String getStartTimeString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        return startTime.format(formatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"     * Returns the end time of the lesson in a String format.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"     * @return","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    public String getEndTimeString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        return endTime.format(formatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"     * Returns true if the 2 lessons\u0027 timeslot conflict with each other.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"     * @param otherLesson The other lesson to compare with.","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"     * @return True if the lessons\u0027 timeslots overlap each other.","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"    public boolean isSameTimeLesson(Lesson otherLesson) {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        if (otherLesson \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        return otherLesson !\u003d null","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 otherLesson.getStartTime().isBefore(getEndTime()) \u0026\u0026 otherLesson.getEndTime().isAfter(getStartTime());","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        if (!(other instanceof Lesson)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        Lesson otherLesson \u003d (Lesson) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        return otherLesson.getTitle().equals(getTitle())","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 otherLesson.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 otherLesson.getEndTime().equals(getEndTime());","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if the lesson has ended.","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"     * @return True if the lesson has ended.","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"    public boolean isPastLesson() {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        return getEndTime().isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        return Objects.hash(getTitle(), getStartTime(), getEndTime());","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        return String.format(\"%s, starts: %s, ends: %s\", title,","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"            startTime.format(formatter), endTime.format(formatter));","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"NBQian":85,"Yufannnn":28}},{"path":"src/main/java/seedu/address/model/student/LessonBelongsToDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":" * Tests that a {@code Lesson}\u0027s date matches the given date.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"public class LessonBelongsToDatePredicate implements Predicate\u003cLesson\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    private final LocalDate targetDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * Creates a predicate to test if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     * @param targetDate The LocalDate to test against.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    public LessonBelongsToDatePredicate(LocalDate targetDate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        this.targetDate \u003d targetDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     * @param lesson The homework to test.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     * @return True if the lesson\u0027s date matches the given date.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public boolean test(Lesson lesson) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        return lesson.getStartTime().toLocalDate().isEqual(targetDate);","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"            || (other instanceof LessonBelongsToDatePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 targetDate \u003d\u003d ((LessonBelongsToDatePredicate) other).targetDate); // date check","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"NBQian":37}},{"path":"src/main/java/seedu/address/model/student/LessonDonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":" * Tests that a {@code Lesson}\u0027s title matches the given subject.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"public class LessonDonePredicate implements Predicate\u003cLesson\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    private final String done;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * Creates a predicate to test if a Homework\u0027s title matches the specified subject","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     * @param done The String that represents date","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    public LessonDonePredicate(String done) {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     * @param lesson The Lesson to test.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     * @return True if the lesson\u0027s title matches the given subject.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public boolean test(Lesson lesson) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        if (done.equals(\"done\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"            return lesson.getStartTime().isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        return lesson.getStartTime().isAfter((LocalDateTime.now()));","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"            || (other instanceof LessonDonePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 done.equals(((LessonDonePredicate) other).done)); // date check","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"NBQian":40}},{"path":"src/main/java/seedu/address/model/student/LessonSubjectPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":" * Tests that a {@code Lesson}\u0027s title matches the given subject.","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"public class LessonSubjectPredicate implements Predicate\u003cLesson\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    private final String subject;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"     * Creates a predicate to test if a Homework\u0027s title matches the specified subject","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * @param subject The String to test against.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    public LessonSubjectPredicate(String subject) {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     * @param lesson The Lesson to test.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     * @return True if the lesson\u0027s title matches the given subject.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    public boolean test(Lesson lesson) {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        return lesson.getTitle().contains(subject);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"            || (other instanceof LessonSubjectPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 subject.equals(((LessonSubjectPredicate) other).subject)); // date check","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"NBQian":36}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"     * @param test String to be tested for validity as a name.","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     * Returns the first name of the student.","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"     * @return First name of the student.","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    public String getFirstName() {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        return fullName.split(\" \")[0];","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yufannnn":12,"-":56}},{"path":"src/main/java/seedu/address/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    public boolean test(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Yufannnn":3,"-":27}},{"path":"src/main/java/seedu/address/model/student/NamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":" * Tests that a {@code Lesson}\u0027s title matches the given subject.","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"public class NamePredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * Creates a predicate to test if a Homework\u0027s title matches the specified subject","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     * @param names The names to test against.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    public NamePredicate(List\u003cString\u003e names) {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * Tests if a {@code Homework}\u0027s {@code isCompleted} matches the given boolean.","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"     * @param student The Student to test.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"     * @return True if the student\u0027s name contains the given keyword.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        for (String name : names) {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"            if (student.getName().toString().toLowerCase().contains(name.toLowerCase())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"                return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"            || (other instanceof NamePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"            \u0026\u0026 names.equals(((NamePredicate) other).names)); // date check","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"NBQian":42}},{"path":"src/main/java/seedu/address/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yufannnn":1,"-":52}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.ConflictingExamsException;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.ConflictingLessonsException;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"public class Student {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    private final UniqueHomeworkList homeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    private final UniqueLessonsList lessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    private final UniqueExamList examList \u003d new UniqueExamList();","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"     * An overloaded constructor for Student class.","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"     * where homeworkList, lessonList and examList are empty.","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     * @param name name of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"     * @param phone phone number of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"     * @param email email of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"     * @param address address of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"     * @param tags tags of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    public Student(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * An overloaded constructor for Student class.","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"     * @param name name of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"     * @param phone phone number of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"     * @param email email of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"     * @param address address of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"     * @param tags tags of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkList list of homework of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"     * @param lessonList list of lessons of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"     * @param examList list of exams of student.","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"    public Student(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, List\u003cHomework\u003e homeworkList,","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"                   List\u003cLesson\u003e lessonList, List\u003cExam\u003e examList) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        requireAllNonNull(name, phone, email, address, tags, homeworkList, lessonList);","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        this.homeworkList.setHomeworks(homeworkList);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"        this.lessonsList.setLessons(lessonList);","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"        this.examList.setExams(examList);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"     * @return set of tags","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"     * @return list of homework","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cHomework\u003e getHomeworkList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"        return homeworkList.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"     * Returns an immutable lessons list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"     * @return list of lessons","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cLesson\u003e getLessonsList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"        return lessonsList.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable exam list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"     * @return list of exams","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cExam\u003e getExamsList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"Yufannnn"},"content":"        return examList.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"szejiancheng"},"content":"    //HOMEWORK########################################################################################","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"Yufannnn"},"content":"     * @return list of completed homework","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cHomework\u003e getCompletedHomeworkList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"Yufannnn"},"content":"        return homeworkList.asUnmodifiableObservableList().filtered(Homework::isCompleted);","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"Yufannnn"},"content":"     * @return list of pending homework","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":157,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cHomework\u003e getPendingHomeworkList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"Yufannnn"},"content":"        return homeworkList.asUnmodifiableObservableList().filtered(homework -\u003e !homework.isCompleted());","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":161,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"Yufannnn"},"content":"     * Adds a homework to the homework list.","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"Yufannnn"},"content":"     * @param homework homework to be added","lastModifiedDate":"2023-02-23"},{"lineNumber":165,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"Yufannnn"},"content":"    public void addHomework(Homework homework) throws DuplicateEntryException {","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":"        // check for duplicate homework","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"Yufannnn"},"content":"        if (homeworkList.contains(homework)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"Yufannnn"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"Yufannnn"},"content":"        this.homeworkList.addHomework(homework);","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":176,"author":{"gitId":"Yufannnn"},"content":"     * Returns a homework from the homework list.","lastModifiedDate":"2023-02-24"},{"lineNumber":177,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":178,"author":{"gitId":"Yufannnn"},"content":"     * @param index index of homework to be returned","lastModifiedDate":"2023-02-24"},{"lineNumber":179,"author":{"gitId":"Yufannnn"},"content":"     * @return homework","lastModifiedDate":"2023-02-24"},{"lineNumber":180,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"Yufannnn"},"content":"    public Homework getHomework(Index index) {","lastModifiedDate":"2023-02-24"},{"lineNumber":182,"author":{"gitId":"Yufannnn"},"content":"        return this.homeworkList.getHomework(index.getZeroBased());","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":184,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":185,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":186,"author":{"gitId":"Yufannnn"},"content":"     * Deletes a homework from the homework list.","lastModifiedDate":"2023-02-24"},{"lineNumber":187,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":188,"author":{"gitId":"Yufannnn"},"content":"     * @param index index of homework to be deleted","lastModifiedDate":"2023-02-24"},{"lineNumber":189,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":"    public void deleteHomework(Index index) {","lastModifiedDate":"2023-02-24"},{"lineNumber":191,"author":{"gitId":"Yufannnn"},"content":"        Homework homeworkToDelete \u003d this.homeworkList.getHomework(index.getZeroBased());","lastModifiedDate":"2023-02-24"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"        this.homeworkList.removeHomework(homeworkToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":194,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"     * Updates a homework from the homework list.","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"     * @param target homework to be updated","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"     * @param editedHomework homework to be updated to","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework(Homework target, Homework editedHomework) {","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"Yufannnn"},"content":"        requireAllNonNull(target, editedHomework);","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"Yufannnn"},"content":"        homeworkList.setHomework(target, editedHomework);","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"Yufannnn"},"content":"     * Marks a homework as done from the homework list.","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":209,"author":{"gitId":"Yufannnn"},"content":"     * @param index index of homework to be marked as done","lastModifiedDate":"2023-02-25"},{"lineNumber":210,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":211,"author":{"gitId":"Yufannnn"},"content":"    public void markHomeworkAsDone(Index index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":212,"author":{"gitId":"Yufannnn"},"content":"        Homework homeworkToMarkAsDone \u003d this.homeworkList.getHomework(index.getZeroBased());","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"Yufannnn"},"content":"        homeworkToMarkAsDone.markAsDone();","lastModifiedDate":"2023-02-25"},{"lineNumber":214,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":216,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":217,"author":{"gitId":"Yufannnn"},"content":"     * Marks a homework as undone from the homework list.","lastModifiedDate":"2023-02-25"},{"lineNumber":218,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"Yufannnn"},"content":"     * @param index index of homework to be marked as undone","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"Yufannnn"},"content":"    public void markHomeworkAsUndone(Index index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":222,"author":{"gitId":"Yufannnn"},"content":"        Homework homeworkToMarkAsUndone \u003d this.homeworkList.getHomework(index.getZeroBased());","lastModifiedDate":"2023-02-25"},{"lineNumber":223,"author":{"gitId":"Yufannnn"},"content":"        homeworkToMarkAsUndone.markAsUndone();","lastModifiedDate":"2023-02-25"},{"lineNumber":224,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":225,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"Yufannnn"},"content":"     * @return list of filtered homework","lastModifiedDate":"2023-03-19"},{"lineNumber":231,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cHomework\u003e getFilteredHomeworkList(Predicate\u003cHomework\u003e predicate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":233,"author":{"gitId":"Yufannnn"},"content":"        return homeworkList.getFilteredHomeworkList(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":234,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":235,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"Yufannnn"},"content":"     * Returns the pie chart data for the homework list.","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"Yufannnn"},"content":"     * @return pie chart data for the homework list","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cPieChart.Data\u003e getHomeworkPieChartData() {","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"Yufannnn"},"content":"        return homeworkList.getHomeworkPieChartData();","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"szejiancheng"},"content":"    //LESSONS########################################################################################","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":247,"author":{"gitId":"NBQian"},"content":"     * Returns a homework from the homework list.","lastModifiedDate":"2023-03-05"},{"lineNumber":248,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":249,"author":{"gitId":"NBQian"},"content":"     * @param index index of homework to be returned","lastModifiedDate":"2023-03-05"},{"lineNumber":250,"author":{"gitId":"NBQian"},"content":"     * @return homework","lastModifiedDate":"2023-03-05"},{"lineNumber":251,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":252,"author":{"gitId":"NBQian"},"content":"    public Lesson getLesson(Index index) {","lastModifiedDate":"2023-03-05"},{"lineNumber":253,"author":{"gitId":"NBQian"},"content":"        return this.lessonsList.getLesson(index.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":254,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":255,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":256,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":257,"author":{"gitId":"NBQian"},"content":"     * Deletes a homework from the homework list.","lastModifiedDate":"2023-03-05"},{"lineNumber":258,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":259,"author":{"gitId":"NBQian"},"content":"     * @param index index of homework to be deleted","lastModifiedDate":"2023-03-05"},{"lineNumber":260,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":261,"author":{"gitId":"NBQian"},"content":"    public void deleteLesson(Index index) {","lastModifiedDate":"2023-03-05"},{"lineNumber":262,"author":{"gitId":"NBQian"},"content":"        Lesson lessonToDelete \u003d this.lessonsList.getLesson(index.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"NBQian"},"content":"        this.lessonsList.remove(lessonToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":264,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":265,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":266,"author":{"gitId":"NBQian"},"content":"     * Adds a lesson to the lesson list","lastModifiedDate":"2023-03-05"},{"lineNumber":267,"author":{"gitId":"NBQian"},"content":"     * @param lesson the lesson to be added","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":269,"author":{"gitId":"NBQian"},"content":"    public void addLesson(Lesson lesson) throws ConflictingLessonsException {","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"NBQian"},"content":"        if (hasExamAtSameTime(lesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"NBQian"},"content":"            throw new ConflictingLessonsException(Messages.MESSAGE_CONFLICTING_EXAM_TIME);","lastModifiedDate":"2023-04-05"},{"lineNumber":272,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":273,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"NBQian"},"content":"            this.lessonsList.add(lesson);","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"NBQian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"NBQian"},"content":"            throw new ConflictingLessonsException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":279,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":280,"author":{"gitId":"NBQian"},"content":"    private boolean hasExamAtSameTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":281,"author":{"gitId":"NBQian"},"content":"        for (Exam exam : examList) {","lastModifiedDate":"2023-04-05"},{"lineNumber":282,"author":{"gitId":"NBQian"},"content":"            if (lesson.getStartTime().isBefore(exam.getEndTime()) \u0026\u0026 lesson.getEndTime().isAfter(exam.getStartTime())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":283,"author":{"gitId":"NBQian"},"content":"                return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":284,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":285,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":286,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":287,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":288,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":289,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":290,"author":{"gitId":"NBQian"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"NBQian"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":293,"author":{"gitId":"NBQian"},"content":"     * @return list of filtered homework","lastModifiedDate":"2023-03-05"},{"lineNumber":294,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":295,"author":{"gitId":"NBQian"},"content":"    @SafeVarargs","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"NBQian"},"content":"    public final List\u003cLesson\u003e getFilteredLessonsList(Predicate\u003cLesson\u003e... predicates) {","lastModifiedDate":"2023-03-05"},{"lineNumber":297,"author":{"gitId":"NBQian"},"content":"        List\u003cLesson\u003e filteredLessonsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":298,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":299,"author":{"gitId":"NBQian"},"content":"        for (Lesson l : lessonsList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":300,"author":{"gitId":"NBQian"},"content":"            boolean allPredicatesMatch \u003d true;","lastModifiedDate":"2023-03-05"},{"lineNumber":301,"author":{"gitId":"NBQian"},"content":"            for (Predicate\u003cLesson\u003e predicate : predicates) {","lastModifiedDate":"2023-03-05"},{"lineNumber":302,"author":{"gitId":"NBQian"},"content":"                if (!predicate.test(l)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":303,"author":{"gitId":"NBQian"},"content":"                    allPredicatesMatch \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":304,"author":{"gitId":"NBQian"},"content":"                    break;","lastModifiedDate":"2023-03-05"},{"lineNumber":305,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":306,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":307,"author":{"gitId":"NBQian"},"content":"            if (allPredicatesMatch) {","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"NBQian"},"content":"                filteredLessonsList.add(l);","lastModifiedDate":"2023-03-05"},{"lineNumber":309,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":310,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":311,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"NBQian"},"content":"        return Collections.unmodifiableList(filteredLessonsList);","lastModifiedDate":"2023-03-05"},{"lineNumber":313,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":314,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":315,"author":{"gitId":"NBQian"},"content":"    public void setLesson(Integer target, Lesson editedLesson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":316,"author":{"gitId":"NBQian"},"content":"        requireAllNonNull(target, editedLesson);","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"NBQian"},"content":"        //        UniqueLessonsList tempLessonList \u003d lessonsList.clone();","lastModifiedDate":"2023-03-29"},{"lineNumber":318,"author":{"gitId":"NBQian"},"content":"        //        tempLessonList.setLesson(target, editedLesson);","lastModifiedDate":"2023-03-29"},{"lineNumber":319,"author":{"gitId":"NBQian"},"content":"        //        if (!(tempLessonList.validLessons())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"NBQian"},"content":"        //            throw new ConflictingLessonsException();","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"NBQian"},"content":"        //        }","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"NBQian"},"content":"        lessonsList.setLesson(target, editedLesson);","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"szejiancheng"},"content":"    public void setExam(Integer target, Exam editedExam) {","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"szejiancheng"},"content":"        requireAllNonNull(target, editedExam);","lastModifiedDate":"2023-03-31"},{"lineNumber":327,"author":{"gitId":"NBQian"},"content":"        //        UniqueExamList tempExamList \u003d examList;","lastModifiedDate":"2023-03-29"},{"lineNumber":328,"author":{"gitId":"szejiancheng"},"content":"        //        tempExamList.setExam(target, editedExam);","lastModifiedDate":"2023-03-31"},{"lineNumber":329,"author":{"gitId":"NBQian"},"content":"        //        if (!(tempExamList.validExams())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":330,"author":{"gitId":"NBQian"},"content":"        //            throw new ConflictingExamsException();","lastModifiedDate":"2023-03-29"},{"lineNumber":331,"author":{"gitId":"NBQian"},"content":"        //        }","lastModifiedDate":"2023-03-29"},{"lineNumber":332,"author":{"gitId":"szejiancheng"},"content":"        examList.setExam(target, editedExam);","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":336,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-14"},{"lineNumber":337,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-14"},{"lineNumber":338,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":339,"author":{"gitId":"Yufannnn"},"content":"     * @return list of filtered homework","lastModifiedDate":"2023-03-14"},{"lineNumber":340,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":341,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cLesson\u003e getPastLessonsList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":342,"author":{"gitId":"Yufannnn"},"content":"        return lessonsList.getPastLessons();","lastModifiedDate":"2023-03-14"},{"lineNumber":343,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":344,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":345,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":346,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-14"},{"lineNumber":347,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-14"},{"lineNumber":348,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":349,"author":{"gitId":"Yufannnn"},"content":"     * @return list of filtered homework","lastModifiedDate":"2023-03-14"},{"lineNumber":350,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":351,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cLesson\u003e getUpcomingLessonsList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":352,"author":{"gitId":"Yufannnn"},"content":"        return lessonsList.getUpcomingLessons();","lastModifiedDate":"2023-03-14"},{"lineNumber":353,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":354,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":355,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":356,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-14"},{"lineNumber":357,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-14"},{"lineNumber":358,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":359,"author":{"gitId":"Yufannnn"},"content":"     * @return list of filtered homework","lastModifiedDate":"2023-03-14"},{"lineNumber":360,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":361,"author":{"gitId":"Yufannnn"},"content":"    public boolean hasLesson() {","lastModifiedDate":"2023-03-14"},{"lineNumber":362,"author":{"gitId":"Yufannnn"},"content":"        return this.lessonsList.hasLesson();","lastModifiedDate":"2023-03-14"},{"lineNumber":363,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":364,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":365,"author":{"gitId":"szejiancheng"},"content":"    //Exams########################################################################################","lastModifiedDate":"2023-03-09"},{"lineNumber":366,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":367,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":368,"author":{"gitId":"szejiancheng"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-09"},{"lineNumber":369,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":370,"author":{"gitId":"szejiancheng"},"content":"     * @return list of pending homework","lastModifiedDate":"2023-03-09"},{"lineNumber":371,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":372,"author":{"gitId":"szejiancheng"},"content":"    public List\u003cExam\u003e getUpcomingExamList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":373,"author":{"gitId":"szejiancheng"},"content":"        List\u003cExam\u003e upcomingExamList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":374,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":375,"author":{"gitId":"szejiancheng"},"content":"        // filter exam list for pending exams","lastModifiedDate":"2023-03-09"},{"lineNumber":376,"author":{"gitId":"szejiancheng"},"content":"        for (Exam exam : examList) {","lastModifiedDate":"2023-03-09"},{"lineNumber":377,"author":{"gitId":"NBQian"},"content":"            if (exam.getStartTime().isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"szejiancheng"},"content":"                upcomingExamList.add(exam);","lastModifiedDate":"2023-03-09"},{"lineNumber":379,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":380,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":381,"author":{"gitId":"szejiancheng"},"content":"        return Collections.unmodifiableList(upcomingExamList);","lastModifiedDate":"2023-03-09"},{"lineNumber":382,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":383,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":384,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":385,"author":{"gitId":"szejiancheng"},"content":"     * Returns an immutable exam list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-09"},{"lineNumber":386,"author":{"gitId":"szejiancheng"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-09"},{"lineNumber":387,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":388,"author":{"gitId":"szejiancheng"},"content":"     * @return list of filtered exams","lastModifiedDate":"2023-03-09"},{"lineNumber":389,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":390,"author":{"gitId":"NBQian"},"content":"    public List\u003cExam\u003e getFilteredExamList(Predicate\u003cExam\u003e... predicates) {","lastModifiedDate":"2023-03-15"},{"lineNumber":391,"author":{"gitId":"szejiancheng"},"content":"        List\u003cExam\u003e filteredExamList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":392,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":393,"author":{"gitId":"NBQian"},"content":"        for (Exam e : examList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":394,"author":{"gitId":"NBQian"},"content":"            boolean allPredicatesMatch \u003d true;","lastModifiedDate":"2023-03-15"},{"lineNumber":395,"author":{"gitId":"NBQian"},"content":"            for (Predicate\u003cExam\u003e predicate : predicates) {","lastModifiedDate":"2023-03-15"},{"lineNumber":396,"author":{"gitId":"NBQian"},"content":"                if (!predicate.test(e)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":397,"author":{"gitId":"NBQian"},"content":"                    allPredicatesMatch \u003d false;","lastModifiedDate":"2023-03-15"},{"lineNumber":398,"author":{"gitId":"NBQian"},"content":"                    break;","lastModifiedDate":"2023-03-15"},{"lineNumber":399,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":400,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":401,"author":{"gitId":"NBQian"},"content":"            if (allPredicatesMatch) {","lastModifiedDate":"2023-03-15"},{"lineNumber":402,"author":{"gitId":"NBQian"},"content":"                filteredExamList.add(e);","lastModifiedDate":"2023-03-15"},{"lineNumber":403,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":404,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":405,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":406,"author":{"gitId":"szejiancheng"},"content":"        return Collections.unmodifiableList(filteredExamList);","lastModifiedDate":"2023-03-09"},{"lineNumber":407,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":408,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":409,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":410,"author":{"gitId":"szejiancheng"},"content":"     * Adds an Exam to the exam list.","lastModifiedDate":"2023-03-09"},{"lineNumber":411,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":412,"author":{"gitId":"szejiancheng"},"content":"     * @param exam Exam to be added","lastModifiedDate":"2023-03-09"},{"lineNumber":413,"author":{"gitId":"szejiancheng"},"content":"     * @throws DuplicateEntryException when exam already exists","lastModifiedDate":"2023-03-09"},{"lineNumber":414,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":415,"author":{"gitId":"NBQian"},"content":"    public void addExam(Exam exam) throws DuplicateEntryException, ConflictingExamsException {","lastModifiedDate":"2023-03-29"},{"lineNumber":416,"author":{"gitId":"szejiancheng"},"content":"        // check for duplicate homework","lastModifiedDate":"2023-03-09"},{"lineNumber":417,"author":{"gitId":"szejiancheng"},"content":"        if (examList.contains(exam)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":418,"author":{"gitId":"szejiancheng"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-09"},{"lineNumber":419,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":420,"author":{"gitId":"szejiancheng"},"content":"        this.examList.add(exam);","lastModifiedDate":"2023-03-09"},{"lineNumber":421,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":422,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":423,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":424,"author":{"gitId":"NBQian"},"content":"     * Returns true if the exam\u0027s time clashes with any lesson\u0027s time.","lastModifiedDate":"2023-04-08"},{"lineNumber":425,"author":{"gitId":"NBQian"},"content":"     * @param exam Exam to be checked","lastModifiedDate":"2023-04-08"},{"lineNumber":426,"author":{"gitId":"NBQian"},"content":"     * @return boolean","lastModifiedDate":"2023-04-08"},{"lineNumber":427,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":428,"author":{"gitId":"NBQian"},"content":"    public boolean hasLessonAtSameTime(Exam exam) {","lastModifiedDate":"2023-04-08"},{"lineNumber":429,"author":{"gitId":"NBQian"},"content":"        for (Lesson lesson : lessonsList) {","lastModifiedDate":"2023-04-08"},{"lineNumber":430,"author":{"gitId":"NBQian"},"content":"            if (exam.getStartTime().isBefore(lesson.getEndTime()) \u0026\u0026 exam.getEndTime().isAfter(lesson.getStartTime())) {","lastModifiedDate":"2023-04-08"},{"lineNumber":431,"author":{"gitId":"NBQian"},"content":"                return true;","lastModifiedDate":"2023-04-08"},{"lineNumber":432,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":433,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":434,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":435,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":436,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":437,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":438,"author":{"gitId":"szejiancheng"},"content":"     * Returns an exam from the exam list.","lastModifiedDate":"2023-03-09"},{"lineNumber":439,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":440,"author":{"gitId":"szejiancheng"},"content":"     * @param index index of exam to be returned","lastModifiedDate":"2023-03-09"},{"lineNumber":441,"author":{"gitId":"szejiancheng"},"content":"     * @return Exam","lastModifiedDate":"2023-03-09"},{"lineNumber":442,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":443,"author":{"gitId":"szejiancheng"},"content":"    public Exam getExam(Index index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":444,"author":{"gitId":"szejiancheng"},"content":"        return this.examList.getExam(index.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":445,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":446,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":447,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":448,"author":{"gitId":"szejiancheng"},"content":"     * Deletes an exam from the exam list.","lastModifiedDate":"2023-03-09"},{"lineNumber":449,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":450,"author":{"gitId":"szejiancheng"},"content":"     * @param index index of exam to be deleted","lastModifiedDate":"2023-03-09"},{"lineNumber":451,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":452,"author":{"gitId":"szejiancheng"},"content":"    public void deleteExam(Index index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":453,"author":{"gitId":"szejiancheng"},"content":"        Exam examToDelete \u003d this.examList.getExam(index.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":454,"author":{"gitId":"szejiancheng"},"content":"        this.examList.remove(examToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":455,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":456,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":457,"author":{"gitId":"szejiancheng"},"content":"    //UTIL########################################################################################","lastModifiedDate":"2023-03-09"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":459,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":460,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":461,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":462,"author":{"gitId":"Yufannnn"},"content":"     * @param otherPerson other person to compare to","lastModifiedDate":"2023-02-23"},{"lineNumber":463,"author":{"gitId":"Yufannnn"},"content":"     * @return boolean","lastModifiedDate":"2023-02-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":465,"author":{"gitId":"Yufannnn"},"content":"    public boolean isSameStudent(Student otherPerson) {","lastModifiedDate":"2023-02-24"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":475,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":477,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":484,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":488,"author":{"gitId":"Yufannnn"},"content":"        Student otherPerson \u003d (Student) other;","lastModifiedDate":"2023-02-17"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":492,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":493,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2023-02-22"},{"lineNumber":494,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherPerson.getHomeworkList().equals(getHomeworkList())","lastModifiedDate":"2023-03-14"},{"lineNumber":495,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 otherPerson.getLessonsList().equals(getLessonsList());","lastModifiedDate":"2023-03-14"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":498,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":499,"author":{"gitId":"Yufannnn"},"content":"     * Returns a hash code for the person.","lastModifiedDate":"2023-02-24"},{"lineNumber":500,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":501,"author":{"gitId":"Yufannnn"},"content":"     * @return hash code","lastModifiedDate":"2023-02-24"},{"lineNumber":502,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":506,"author":{"gitId":"NBQian"},"content":"        return Objects.hash(name, phone, email, address, tags, homeworkList, lessonsList);","lastModifiedDate":"2023-03-04"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":509,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":510,"author":{"gitId":"Yufannnn"},"content":"     * Returns a string representation of the person.","lastModifiedDate":"2023-02-24"},{"lineNumber":511,"author":{"gitId":"Yufannnn"},"content":"     * Format: name; phone; email; address; tags; assignments","lastModifiedDate":"2023-02-24"},{"lineNumber":512,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":513,"author":{"gitId":"Yufannnn"},"content":"     * @return string representation of the person","lastModifiedDate":"2023-02-24"},{"lineNumber":514,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":519,"author":{"gitId":"NBQian"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2023-03-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":521,"author":{"gitId":"NBQian"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-03-23"},{"lineNumber":522,"author":{"gitId":"NBQian"},"content":"                .append(\"Email: \")","lastModifiedDate":"2023-03-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":524,"author":{"gitId":"NBQian"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-03-23"},{"lineNumber":525,"author":{"gitId":"NBQian"},"content":"                .append(\"Address: \")","lastModifiedDate":"2023-03-23"},{"lineNumber":526,"author":{"gitId":"Yufannnn"},"content":"                .append(getAddress())","lastModifiedDate":"2023-02-22"},{"lineNumber":527,"author":{"gitId":"NBQian"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-03-23"},{"lineNumber":528,"author":{"gitId":"NBQian"},"content":"                .append(\"Tags: \");","lastModifiedDate":"2023-03-23"},{"lineNumber":529,"author":{"gitId":"Yufannnn"},"content":"        getTags().forEach(builder::append);","lastModifiedDate":"2023-03-14"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":532,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":533,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":534,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-15"},{"lineNumber":535,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-15"},{"lineNumber":536,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":537,"author":{"gitId":"Yufannnn"},"content":"     * @return list of filtered homework","lastModifiedDate":"2023-03-15"},{"lineNumber":538,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":539,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cExam\u003e getPastExamsList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":540,"author":{"gitId":"Yufannnn"},"content":"        return examList.getPastExams();","lastModifiedDate":"2023-03-15"},{"lineNumber":541,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":542,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":543,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":544,"author":{"gitId":"Yufannnn"},"content":"     * Returns an immutable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-15"},{"lineNumber":545,"author":{"gitId":"Yufannnn"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-15"},{"lineNumber":546,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":547,"author":{"gitId":"Yufannnn"},"content":"     * @return list of filtered homework","lastModifiedDate":"2023-03-15"},{"lineNumber":548,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":549,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cExam\u003e getUpcomingExamsList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":550,"author":{"gitId":"Yufannnn"},"content":"        return examList.getUpcomingExams();","lastModifiedDate":"2023-03-15"},{"lineNumber":551,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":552,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":553,"author":{"gitId":"NBQian"},"content":"    public boolean hasConflictingLessonTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":554,"author":{"gitId":"NBQian"},"content":"        return this.lessonsList.hasConflictingLessonTime(lesson);","lastModifiedDate":"2023-04-05"},{"lineNumber":555,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":556,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":557,"author":{"gitId":"NBQian"},"content":"    public boolean hasConflictingExamTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":558,"author":{"gitId":"NBQian"},"content":"        return this.examList.hasConflictingExamTime(lesson);","lastModifiedDate":"2023-04-05"},{"lineNumber":559,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":560,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"szejiancheng":77,"NBQian":154,"Yufannnn":230,"-":99}},{"path":"src/main/java/seedu/address/model/student/UniqueExamList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.ConflictingExamsException;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.DuplicateExamsException;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.exceptions.EntryNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":" * A list of exams that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":" * An exam is considered unique by comparing using {@code Exam#isSameExam(Exam)}.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":" * As such, adding and updating of exam uses Exam#isSameExam(Exam) for equality","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":" * so as to ensure that the Exam being added or updated is unique in terms of identity in the","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":" * UniqueExamList. However, the removal of a homework uses Exam#equals(Object) so as to ensure","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":" * that the Exam with exactly the same fields will be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":" *","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"public class UniqueExamList implements Iterable\u003cExam\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"    private final ObservableList\u003cExam\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"    private final ObservableList\u003cExam\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"     * Returns true if the list contains an equivalent Exam as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"     * @param toCheck the Exam to be checked","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"     * @return true if the list contains the Exam","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"    public boolean contains(Exam toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"        return internalList.stream().anyMatch(toCheck::isSameExam);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"     * Adds an Exam to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"     * The Exam must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"     * @param toAdd the Exam to be added","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"    public void add(Exam toAdd) throws DuplicateExamsException, ConflictingExamsException {","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"            throw new DuplicateExamsException();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"        for (Exam exam : internalList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"            if (exam.isSameTimeExam(toAdd)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"                throw new ConflictingExamsException();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        internalList.sort((l1, l2) -\u003e l1.getStartTime().compareTo(l2.getStartTime()));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"szejiancheng"},"content":"     * Replaces the Exam {@code target} in the list with {@code editedExam}.","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"szejiancheng"},"content":"     * The Exam identity of {@code editedHomework} must not be the same as another existing homework in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"    public void setExam(Integer target, Exam editedExam) {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"        requireAllNonNull(target, editedExam);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"        if (contains(editedExam)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        Exam originalExam \u003d internalList.get(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        internalList.set(target, editedExam);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        if (!this.validExams()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"            internalList.set(target, originalExam);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"            throw new ConflictingExamsException();","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"szejiancheng"},"content":"     * Removes the equivalent Exam from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"szejiancheng"},"content":"     * The Exam must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"szejiancheng"},"content":"     * @param toRemove the Exam to be removed","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"szejiancheng"},"content":"    public void remove(Exam toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"szejiancheng"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"szejiancheng"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"szejiancheng"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"szejiancheng"},"content":"     * {@code replacement} must not contain duplicate Exams.","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"szejiancheng"},"content":"     * @param replacement the homeworks to be added to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"szejiancheng"},"content":"    public void setExams(UniqueExamList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"szejiancheng"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"szejiancheng"},"content":"     * Overloaded method that accepts a List of Exams item","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"szejiancheng"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"szejiancheng"},"content":"     * {@code replacement} must not contain duplicate Exams.","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"szejiancheng"},"content":"     * @param replacement the Exams to be added to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"szejiancheng"},"content":"    public void setExams(List\u003cExam\u003e replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"szejiancheng"},"content":"        requireAllNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"szejiancheng"},"content":"        if (!examsAreUnique(replacement)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"szejiancheng"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"szejiancheng"},"content":"        internalList.setAll(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"szejiancheng"},"content":"     * Returns the exam object of index \u0027index\u0027.","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"szejiancheng"},"content":"     * @param index of the Exam to be returned","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"szejiancheng"},"content":"     * @return the Exam at that index in the exam list.","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"szejiancheng"},"content":"    public Exam getExam(int index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"szejiancheng"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"szejiancheng"},"content":"     * Returns the Exam list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"szejiancheng"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"szejiancheng"},"content":"    public ObservableList\u003cExam\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"szejiancheng"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"szejiancheng"},"content":"     * Returns an iterator over the elements in this list in proper sequence.","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"szejiancheng"},"content":"     * @return the iterator over the Exam objects in this list.","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"szejiancheng"},"content":"    public Iterator\u003cExam\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"szejiancheng"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"szejiancheng"},"content":"     * Returns true if {@code exams} contains only unique Exams.","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"szejiancheng"},"content":"     * @param exams a list of exams to be checked","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"szejiancheng"},"content":"     * @return true if {@code exams} contains only unique homeworks","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"szejiancheng"},"content":"    private boolean examsAreUnique(List\u003cExam\u003e exams) {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"szejiancheng"},"content":"        for (int i \u003d 0; i \u003c exams.size() - 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"szejiancheng"},"content":"            for (int j \u003d i + 1; j \u003c exams.size(); j++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"szejiancheng"},"content":"                if (exams.get(i).isSameExam(exams.get(j))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"szejiancheng"},"content":"                    return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"szejiancheng"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"szejiancheng"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"szejiancheng"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"    private boolean examsAreCompatible(List\u003cExam\u003e exams) {","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c exams.size() - 1; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"            for (int j \u003d i + 1; j \u003c exams.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"                if (exams.get(i).isSameTimeExam(exams.get(j))) {","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"NBQian"},"content":"                    return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"NBQian"},"content":"        return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"NBQian"},"content":"    public boolean validExams() {","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"NBQian"},"content":"        return examsAreUnique(internalList) \u0026\u0026 examsAreCompatible(internalList);","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"szejiancheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"szejiancheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"szejiancheng"},"content":"                || (other instanceof UniqueExamList // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"szejiancheng"},"content":"                \u0026\u0026 internalList.equals(((UniqueExamList) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"szejiancheng"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"szejiancheng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"szejiancheng"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"szejiancheng"},"content":"     * Updates the list of exams to only contain exams that fufil a predicate.","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"szejiancheng"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"szejiancheng"},"content":"     * @param examStatusPredicate predicate object encapsulating qualifier","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"szejiancheng"},"content":"    public void updateFilteredExamList(Predicate\u003cExam\u003e examStatusPredicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"szejiancheng"},"content":"        requireNonNull(examStatusPredicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"szejiancheng"},"content":"        internalList.removeIf(examStatusPredicate.negate());","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"Yufannnn"},"content":"     * Returns a list of past exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"Yufannnn"},"content":"     * The list is sorted by start time and capped at 3 exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"Yufannnn"},"content":"     * @return a list of past exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cExam\u003e getPastExams() {","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cExam\u003e pastExams \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"Yufannnn"},"content":"        for (Exam exam : internalList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"Yufannnn"},"content":"            if (exam.isPastExam()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"Yufannnn"},"content":"                pastExams.add(exam);","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"Yufannnn"},"content":"        return pastExams;","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"Yufannnn"},"content":"     * Returns a list of upcoming exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"Yufannnn"},"content":"     * The list is sorted by start time and capped at 3 exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"Yufannnn"},"content":"     * @return a list of upcoming exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cExam\u003e getUpcomingExams() {","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"Yufannnn"},"content":"        List\u003cExam\u003e upcomingExams \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"Yufannnn"},"content":"        for (Exam exam : internalList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"Yufannnn"},"content":"            if (!exam.isPastExam()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"Yufannnn"},"content":"                upcomingExams.add(exam);","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"Yufannnn"},"content":"        upcomingExams.sort(Comparator.comparing(Exam::getStartTime));","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"Yufannnn"},"content":"        if (upcomingExams.size() \u003e 3) {","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"Yufannnn"},"content":"            upcomingExams \u003d upcomingExams.subList(0, 3);","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"Yufannnn"},"content":"        return FXCollections.observableArrayList(upcomingExams);","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":242,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":243,"author":{"gitId":"NBQian"},"content":"     * Returns true if the list contains an exam with the same time as the lesson.","lastModifiedDate":"2023-04-05"},{"lineNumber":244,"author":{"gitId":"NBQian"},"content":"     * @param lesson the lesson to be checked","lastModifiedDate":"2023-04-05"},{"lineNumber":245,"author":{"gitId":"NBQian"},"content":"     * @return true if the list contains an exam with the same time as the lesson.","lastModifiedDate":"2023-04-05"},{"lineNumber":246,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":247,"author":{"gitId":"NBQian"},"content":"    public boolean hasConflictingExamTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":248,"author":{"gitId":"NBQian"},"content":"        for (Exam exam : internalList) {","lastModifiedDate":"2023-04-05"},{"lineNumber":249,"author":{"gitId":"NBQian"},"content":"            if (exam.isSameTimeLesson(lesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":250,"author":{"gitId":"NBQian"},"content":"                return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":251,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":252,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":253,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":254,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":255,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"szejiancheng":171,"NBQian":47,"Yufannnn":37}},{"path":"src/main/java/seedu/address/model/student/UniqueHomeworkList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.EntryNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":" * A list of homework that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":" * A homework is considered unique by comparing using {@code Homework#isSameHomework(Homework)}.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":" * As such, adding and updating of homework uses Homework#isSameHomework(Homework) for equality","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":" * to ensure that the homework being added or updated is unique in terms of identity in the","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":" * UniqueHomeworkList. However, the removal of a homework uses Homework#equals(Object) so as to ensure","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":" * that the homework with exactly the same fields will be removed.","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"public class UniqueHomeworkList implements Iterable\u003cHomework\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    private final ObservableList\u003cHomework\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    private final ObservableList\u003cHomework\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if the list contains an equivalent homework as the given argument.","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     * @param toCheck the homework to be checked","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * @return true if the list contains the homework","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    public boolean contains(Homework toCheck) {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        return internalList.stream().anyMatch(toCheck::isSameHomework);","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"     * Adds a homework to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"     * The homework must not already exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"     * @param toAdd the homework to be added","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    public void addHomework(Homework toAdd) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"szejiancheng"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        internalList.sort(Comparator.comparing(Homework::getDeadline));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"     * Replaces the homework {@code target} in the list with {@code editedHomework}.","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"     * The homework identity of {@code editedHomework} must not be the same as another existing homework in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework(Homework target, Homework editedHomework) {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        requireAllNonNull(target, editedHomework);","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"szejiancheng"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"        if (!target.isSameHomework(editedHomework) \u0026\u0026 contains(editedHomework)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        internalList.set(index, editedHomework);","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     * Removes the equivalent homework from the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"     * The homework must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"     * @param toRemove the homework to be removed","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    public void removeHomework(Homework toRemove) {","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"szejiancheng"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"     * Replaces the contents of this list with {@code homeworks}.","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"     * {@code homeworks} must not contain duplicate homeworks.","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"     * @param replacement the homeworks to be added to the list","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"    public void setHomeworks(UniqueHomeworkList replacement) {","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"     * Replaces the contents of this list with {@code homeworks}.","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"     * {@code homeworks} must not contain duplicate homeworks.","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworks the homeworks to be added to the list","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"    public void setHomeworks(List\u003cHomework\u003e homeworks) {","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"        requireAllNonNull(homeworks);","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"        if (!homeworksAreUnique(homeworks)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"szejiancheng"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"        internalList.setAll(homeworks);","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"     * @param index of the homework to be returned","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"    public Homework getHomework(int index) {","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cHomework\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"Yufannnn"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":139,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":140,"author":{"gitId":"Yufannnn"},"content":"    public Iterator\u003cHomework\u003e iterator() {","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"Yufannnn"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-24"},{"lineNumber":142,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":143,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if {@code homeworks} contains only unique homeworks.","lastModifiedDate":"2023-02-24"},{"lineNumber":146,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":147,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworks the homeworks to be checked","lastModifiedDate":"2023-02-24"},{"lineNumber":148,"author":{"gitId":"Yufannnn"},"content":"     * @return true if {@code homeworks} contains only unique homeworks","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":150,"author":{"gitId":"Yufannnn"},"content":"    private boolean homeworksAreUnique(List\u003cHomework\u003e homeworks) {","lastModifiedDate":"2023-02-24"},{"lineNumber":151,"author":{"gitId":"Yufannnn"},"content":"        for (int i \u003d 0; i \u003c homeworks.size() - 1; i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":152,"author":{"gitId":"Yufannnn"},"content":"            for (int j \u003d i + 1; j \u003c homeworks.size(); j++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":153,"author":{"gitId":"Yufannnn"},"content":"                if (homeworks.get(i).isSameHomework(homeworks.get(j))) {","lastModifiedDate":"2023-02-24"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"                    return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":155,"author":{"gitId":"Yufannnn"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":156,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":157,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":158,"author":{"gitId":"Yufannnn"},"content":"        return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":159,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":160,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"Yufannnn"},"content":"     * Gets the filtered homework list.","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkStatusPredicate the predicate to filter the homework list","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"Yufannnn"},"content":"     * @return the filtered homework list","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cHomework\u003e getFilteredHomeworkList(Predicate\u003cHomework\u003e homeworkStatusPredicate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"Yufannnn"},"content":"        requireNonNull(homeworkStatusPredicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cHomework\u003e filteredHomeworkList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"Yufannnn"},"content":"        for (Homework homework : internalList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"Yufannnn"},"content":"            if (homeworkStatusPredicate.test(homework)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"Yufannnn"},"content":"                filteredHomeworkList.add(homework);","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"Yufannnn"},"content":"        return filteredHomeworkList;","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"Yufannnn"},"content":"     * Returns the pie chart data for the homework list.","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"Yufannnn"},"content":"     * @return the pie chart data for the homework list","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cPieChart.Data\u003e getHomeworkPieChartData() {","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"Yufannnn"},"content":"        int completedHomework \u003d 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"Yufannnn"},"content":"        int uncompletedHomework \u003d 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"Yufannnn"},"content":"        for (Homework homework : internalList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"Yufannnn"},"content":"            if (homework.isCompleted()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"Yufannnn"},"content":"                completedHomework++;","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"Yufannnn"},"content":"                uncompletedHomework++;","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"Yufannnn"},"content":"        pieChartData.add(new PieChart.Data(\"Completed\", completedHomework));","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"        pieChartData.add(new PieChart.Data(\"Uncompleted\", uncompletedHomework));","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"        return pieChartData;","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof UniqueHomeworkList // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 internalList.equals(((UniqueHomeworkList) other).internalList));","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"Yufannnn"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"Yufannnn"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"szejiancheng":5,"Yufannnn":206}},{"path":"src/main/java/seedu/address/model/student/UniqueLessonsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.ConflictingLessonsException;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.DuplicateLessonException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.LessonNotFoundException;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":" * A list of homework that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":" * A homework is considered unique by comparing using {@code Homework#isSameHomework(Homework)}.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":" * As such, adding and updating of homework uses Homework#isSameHomework(Homework) for equality","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":" * so as to ensure that the homework being added or updated is unique in terms of identity in the","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":" * UniqueHomeworkList. However, the removal of a homework uses Homework#equals(Object) so as to ensure","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":" * that the homework with exactly the same fields will be removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":" * @see Homework#isSameHomework(Homework)","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"public class UniqueLessonsList implements Iterable\u003cLesson\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    private final ObservableList\u003cLesson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    private final ObservableList\u003cLesson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"     * Returns true if the list contains a lesson that has time conflict as the given argument.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"     * @param toCheck the lesson to be checked","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"     * @return true if the list contains a lesson with conflicting timeslot","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"    public boolean contains(Lesson toCheck) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"     * Adds a lesson to the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"     * The lesson must not already exist in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"     * @param toAdd the lesson to be added","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    public void add(Lesson toAdd) throws DuplicateLessonException, ConflictingLessonsException {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"            throw new DuplicateLessonException();","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        for (Lesson lesson : internalList) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"            if (lesson.isSameTimeLesson(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"                throw new ConflictingLessonsException();","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        internalList.sort((l1, l2) -\u003e l1.getStartTime().compareTo(l2.getStartTime()));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"     * Removes the equivalent lesson from the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"     * The lesson must exist in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"     * @param toRemove the homework to be removed","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"    public void remove(Lesson toRemove) {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"            throw new LessonNotFoundException();","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        internalList.sort((l1, l2) -\u003e l1.getStartTime().compareTo(l2.getStartTime()));","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"     * @param index of the lesson to be returned","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"    public Lesson getLesson(int index) {","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"     * Replaces the contents of this list with {@code lessons}.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"     * {@code lessons} must not contain conflicting lessons.","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"     * @param lessons the lessons to be added to the list","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"    public void setLessons(List\u003cLesson\u003e lessons) {","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        requireAllNonNull(lessons);","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"        if (!lessonsAreCompatible(lessons)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"            throw new ConflictingLessonsException();","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"        internalList.setAll(lessons);","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"        internalList.sort((l1, l2) -\u003e l1.getStartTime().compareTo(l2.getStartTime()));","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"    public boolean validLessons() {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        return lessonsAreCompatible(internalList);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"    public void setLesson(Integer target, Lesson editedLesson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"        requireAllNonNull(target, editedLesson);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        if (target \u003e\u003d internalList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"            throw new LessonNotFoundException();","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"        if (contains(editedLesson)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"        Lesson originalLesson \u003d internalList.get(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"        internalList.set(target, editedLesson);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"        if (!this.validLessons()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"            internalList.set(target, originalLesson);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"            throw new ConflictingLessonsException();","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"    public ObservableList\u003cLesson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"NBQian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"     * @return the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"    public Iterator\u003cLesson\u003e iterator() {","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"     * Returns true if no lessons in {@code lessons} have conflicting time slots","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"NBQian"},"content":"     * @param lessons the lessons to be checked.","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"     * @return true if {@code lessons} contains only lessons with no conflicting timeslots.","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"    private boolean lessonsAreCompatible(List\u003cLesson\u003e lessons) {","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 0; i \u003c lessons.size() - 1; i++) {","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"            for (int j \u003d i + 1; j \u003c lessons.size(); j++) {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"                if (lessons.get(i).isSameTimeLesson(lessons.get(j))) {","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"                    return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"        return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"     * Checks the number of lessons in the list","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"NBQian"},"content":"     * @return an int that is the number of lessons in the list","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"NBQian"},"content":"    public int size() {","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"NBQian"},"content":"        return this.internalList.size();","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"NBQian"},"content":"    public List\u003cLesson\u003e getSortedLessonsList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"        List\u003cLesson\u003e tempList \u003d internalList;","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"        tempList.sort((l1, l2) -\u003e l1.getStartTime().compareTo(l2.getStartTime()));","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"        return tempList;","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"Yufannnn"},"content":"     * Returns a list of lessons that are upcoming.","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"Yufannnn"},"content":"     * @return a list of lessons that are upcoming.","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cLesson\u003e getPastLessons() {","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cLesson\u003e pastLessons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"Yufannnn"},"content":"        for (Lesson lesson : internalList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"Yufannnn"},"content":"            if (lesson.isPastLesson()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"Yufannnn"},"content":"                pastLessons.add(lesson);","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"Yufannnn"},"content":"        return pastLessons;","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":"     * Returns a list of lessons that are upcoming.","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"     * @return a list of lessons that are upcoming.","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cLesson\u003e getUpcomingLessons() {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cLesson\u003e upcomingLessons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"        for (Lesson lesson : internalList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"            if (!lesson.isPastLesson()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"                upcomingLessons.add(lesson);","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"Yufannnn"},"content":"        return upcomingLessons;","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"NBQian"},"content":"    public boolean hasLesson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"NBQian"},"content":"        return this.internalList.size() !\u003d 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":209,"author":{"gitId":"NBQian"},"content":"     * Returns true if the list contains a lesson that has time conflict as the given argument.","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"NBQian"},"content":"     * @param lesson the lesson to be checked","lastModifiedDate":"2023-04-05"},{"lineNumber":211,"author":{"gitId":"NBQian"},"content":"     * @return true if the list contains a lesson with conflicting timeslot","lastModifiedDate":"2023-04-05"},{"lineNumber":212,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":213,"author":{"gitId":"NBQian"},"content":"    public boolean hasConflictingLessonTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":214,"author":{"gitId":"NBQian"},"content":"        for (Lesson l : internalList) {","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"NBQian"},"content":"            if (l.isSameTimeLesson(lesson)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":216,"author":{"gitId":"NBQian"},"content":"                return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":217,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":218,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":219,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":220,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":221,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"NBQian":191,"Yufannnn":30}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":" * unique in terms of identity in the UniqueStudentList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     * Replaces the person {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"     * The person identity of {@code editedStudent} must not be the same as another existing person in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"        internalList.setAll(students);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yufannnn":39,"-":98}},{"path":"src/main/java/seedu/address/model/student/exceptions/ConflictingExamsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":" * Signals that the operation will result in duplicate Exams (Exams are considered duplicates if they have the same","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":" * description, start time, end time, weightage, status, and grade).","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public class ConflictingExamsException extends RuntimeException {","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    public ConflictingExamsException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"        super(\"The exam clashes with another exam/lesson\");","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"NBQian":11}},{"path":"src/main/java/seedu/address/model/student/exceptions/ConflictingLessonsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":" * Signals that the operation will result in lessons with conflicting timeslots","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"public class ConflictingLessonsException extends RuntimeException {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"    public ConflictingLessonsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"        super(\"Operation would result in lessons with overlapping timeslots\");","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    public ConflictingLessonsException(String message) {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"        super(message);","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"NBQian":13}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateEntryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":" * identity).","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"public class DuplicateEntryException extends RuntimeException {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"    public DuplicateEntryException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"        super(\"Operation would result in duplicate entries\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"szejiancheng":3,"Yufannnn":8}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateExamsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":" * Signals that the operation will result in duplicate Exams (Exams are considered duplicates if they have the same","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":" * description, start time, end time, weightage, status, and grade).","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public class DuplicateExamsException extends RuntimeException {","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    public DuplicateExamsException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"        super(\"The exam already exists\");","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"NBQian":11}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateLessonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":" * Signals that the operation will result in duplicate Lessons (Lesson are considered duplicates if they have the same","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":" * title, startTime, and endTime).","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public class DuplicateLessonException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    public DuplicateLessonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"        super(\"Operation would result in duplicate lessons\");","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"NBQian":11}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":" * Signals that the operation will result in duplicate Students (Students are considered","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":" * duplicates if they have the same identity).","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Yufannnn":6,"-":5}},{"path":"src/main/java/seedu/address/model/student/exceptions/EntryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":" * Signals that the operation is unable to find the specified entry.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"public class EntryNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"szejiancheng":6}},{"path":"src/main/java/seedu/address/model/student/exceptions/LessonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":" * Signals that the operation will result in lessons with conflicting timeslots","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"public class LessonNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"    public LessonNotFoundException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"        super(\"Sorry, the lesson does not exist\");","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"NBQian":10}},{"path":"src/main/java/seedu/address/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Yufannnn":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    public static final String MESSAGE_TAG_LENGTH \u003d \"Tag length should be below 30 characters\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} ]+\";","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    public static final int MAX_TAG_LENGTH \u003d 30;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        checkArgument(isValidTagLength(tagName), MESSAGE_TAG_LENGTH);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     * Returns true if a given string is a valid tag length.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    public static boolean isValidTagLength(String test) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        // tag length must be below 30 characters","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        if (test.length() \u003e MAX_TAG_LENGTH) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NBQian":1,"Yufannnn":14,"-":54}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    public static Student[] getSamplePersons() {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"        return new Student[] {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"                getTagSet(\"primary6\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"                getTagSet(\"NUS\", \"year1\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"                getTagSet(\"ACJC\", \"J1\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"                getTagSet(\"sec4\")","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"                ),","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"                getTagSet(\"sec3\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"                getTagSet(\"NUS\", \"year3\"))","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        for (Student samplePerson : getSamplePersons()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"            sampleAb.addStudent(samplePerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"fahim-tazz":7,"Yufannnn":15,"-":39}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"szejiancheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"szejiancheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"szejiancheng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"szejiancheng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Grade;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":" * Jackson-friendly version of {@link Exam}.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"public class JsonAdaptedExam {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"    private final String description;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    private final Double weightage;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"    private Grade grade;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"szejiancheng"},"content":"     * Constructs a {@code Exam} with the given exam details.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"szejiancheng"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"szejiancheng"},"content":"    public JsonAdaptedExam(@JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"szejiancheng"},"content":"                           @JsonProperty(\"startTime\") LocalDateTime startTime,","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"szejiancheng"},"content":"                           @JsonProperty(\"endTime\") LocalDateTime endTime,","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"                           @JsonProperty(\"weightage\") Double weightage,","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"                           @JsonProperty(\"grade\") Grade grade) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"szejiancheng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"szejiancheng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"szejiancheng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"szejiancheng"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"szejiancheng"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"     * Constructs a {@code Exam} with the given exam object.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"szejiancheng"},"content":"    public JsonAdaptedExam(Exam source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"szejiancheng"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"szejiancheng"},"content":"        startTime \u003d source.getStartTime();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"szejiancheng"},"content":"        endTime \u003d source.getEndTime();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"        weightage \u003d source.getWeightage();","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"        grade \u003d source.getGrade();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"szejiancheng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"     * Converts this Jackson-friendly adapted homework object into the model\u0027s {@code exam} object.","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"    public Exam toModelType() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"        Exam exam \u003d new Exam(description, startTime, endTime, weightage, grade);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"szejiancheng"},"content":"        return exam;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"szejiancheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"szejiancheng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"szejiancheng":50,"NBQian":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHomework.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework.Status;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" * Jackson-friendly version of {@link Homework}.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"public class JsonAdaptedHomework {","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private final String description;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private final Status status;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"     * Constructs a {@code JsonAdaptedHomework} with the given homework details.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    public JsonAdaptedHomework(@JsonProperty(\"description\") String description,","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"                               @JsonProperty(\"deadline\") LocalDateTime deadline,","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"                               @JsonProperty(\"status\") Status status) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     * Converts a given {@code Homework} into this class for Jackson use.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    public JsonAdaptedHomework(Homework source) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        deadline \u003d source.getDeadline();","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        status \u003d source.getStatus();","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    @JsonProperty(\"description\")","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        return description;","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    @JsonProperty(\"deadline\")","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        return deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    @JsonProperty(\"status\")","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        return status;","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"     * Converts this Jackson-friendly adapted homework object into the model\u0027s {@code Homework} object.","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    public Homework toModelType() {","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(description, deadline);","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        if (status \u003d\u003d Status.COMPLETED) {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"            homework.markAsDone();","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"            homework.markAsUndone();","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        return homework;","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof JsonAdaptedHomework // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 description.equals(((JsonAdaptedHomework) other).description)","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 deadline.equals(((JsonAdaptedHomework) other).deadline)","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 status.equals(((JsonAdaptedHomework) other).status)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        return description.hashCode() + deadline.hashCode() + status.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Yufannnn":82}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":" * Jackson-friendly version of {@link Homework}.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"public class JsonAdaptedLesson {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    private final String title;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * Constructs a {@code JsonAdaptedHomework} with the given homework details.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    public JsonAdaptedLesson(@JsonProperty(\"title\") String title,","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"                               @JsonProperty(\"startTime\") LocalDateTime startTime,","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"                               @JsonProperty(\"endTime\") LocalDateTime endTime) {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"     * Converts a given {@code Lesson} into this class for Jackson use.","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    public JsonAdaptedLesson(Lesson source) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        title \u003d source.getTitle();","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        startTime \u003d source.getStartTime();","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        endTime \u003d source.getEndTime();","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    @JsonProperty(\"title\")","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    public String getTitle() {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        return title;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    @JsonProperty(\"startTime\")","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        return startTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    @JsonProperty(\"endTime\")","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        return endTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"     * Converts this Jackson-friendly adapted lesson object into the model\u0027s {@code Lesson} object.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"    public Lesson toModelType() {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"        Lesson lesson \u003d new Lesson(title, startTime, endTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        return lesson;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"NBQian":63}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    private final List\u003cJsonAdaptedHomework\u003e homeworkList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    private final List\u003cJsonAdaptedLesson\u003e lessonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"szejiancheng"},"content":"    private final List\u003cJsonAdaptedExam\u003e examList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"                              @JsonProperty(\"homeworks\") List\u003cJsonAdaptedHomework\u003e homeworkList,","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"szejiancheng"},"content":"                              @JsonProperty(\"lessons\") List\u003cJsonAdaptedLesson\u003e lessonList,","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"szejiancheng"},"content":"                              @JsonProperty(\"exams\") List\u003cJsonAdaptedExam\u003e examList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        if (homeworkList !\u003d null) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"            this.homeworkList.addAll(homeworkList);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        if (lessonList !\u003d null) {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"            this.lessonList.addAll(lessonList);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"szejiancheng"},"content":"        if (examList !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"            this.examList.addAll(examList);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"        homeworkList.addAll(source.getHomeworkList().stream()","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"                .map(JsonAdaptedHomework::new)","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"        lessonList.addAll(source.getLessonsList().stream()","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"            .map(JsonAdaptedLesson::new)","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        examList.addAll(source.getExamsList().stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"            .map(JsonAdaptedExam::new)","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        // Convert homeworkList to modelHomeworkList","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"        final List\u003cHomework\u003e modelHomeworkList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"        for (JsonAdaptedHomework homework : homeworkList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"            modelHomeworkList.add(homework.toModelType());","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        // Convert lessonList to modelLessonList","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"        final List\u003cLesson\u003e modelLessonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"        for (JsonAdaptedLesson lesson : lessonList) {","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"            modelLessonList.add(lesson.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"szejiancheng"},"content":"        // Convert examList to modelExamList","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"szejiancheng"},"content":"        final List\u003cExam\u003e modelExamList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"szejiancheng"},"content":"        for (JsonAdaptedExam exam : examList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"szejiancheng"},"content":"            modelExamList.add(exam.toModelType());","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"szejiancheng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"szejiancheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"Yufannnn"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2023-02-24"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelHomeworkList,","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"szejiancheng"},"content":"            modelLessonList, modelExamList);","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"szejiancheng":21,"NBQian":17,"Yufannnn":28,"-":88}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private final List\u003cJsonAdaptedStudent\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedStudent\u003e persons) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : persons) {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"            Student person \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"            addressBook.addStudent(person);","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yufannnn":7,"-":53}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w13-4.github.io/tp/\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide of TutorPro:\\n\" + USERGUIDE_URL;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        getRoot().setResizable(false);","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"        if (!(obj instanceof HelpWindow)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"        HelpWindow other \u003d (HelpWindow) obj;","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"        return helpMessage.getText().equals(other.helpMessage.getText());","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Yufannnn":17,"-":100}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.command.CommandBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.command.ResultDisplay;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.detail.DetailedInfoRegion;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    private final Logic logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    private DetailedInfoRegion detailedInfoRegion;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    private StackPane detailedInfoRegionPlaceholder;","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        // set the resiza","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredPersonList(), this);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"        personListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"        detailedInfoRegion \u003d new DetailedInfoRegion(\"Welcome to the TutorPro!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"        detailedInfoRegionPlaceholder.getChildren().add(detailedInfoRegion.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"Yufannnn"},"content":"    public StudentListPanel getPersonListPanel() {","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"Yufannnn"},"content":"        return studentListPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"            detailedInfoRegion \u003d new DetailedInfoRegion(\"Welcome to the TutorPro!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"            detailedInfoRegionPlaceholder.getChildren().add(detailedInfoRegion.getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"szejiancheng"},"content":"        } catch (CommandException | ParseException | IllegalArgumentException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"Yufannnn"},"content":"    public void setDetailedContent(UiPart\u003cRegion\u003e detailedContent) {","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"Yufannnn"},"content":"        detailedInfoRegion.setDetailedContent(detailedContent);","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"Yufannnn"},"content":"     * Sets the header bar of the detailed info section to display the given text.","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"Yufannnn"},"content":"     * @param textToDisplay the text to display","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"Yufannnn"},"content":"    public void setDetailedHeaderBar(String textToDisplay, String iconPath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"Yufannnn"},"content":"        detailedInfoRegion.setHeaderBar(textToDisplay, iconPath);","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"szejiancheng":1,"Yufannnn":36,"-":189}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        if (!(obj instanceof StatusBarFooter)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        StatusBarFooter other \u003d (StatusBarFooter) obj;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        return saveLocationStatus.getText().equals(other.saveLocationStatus.getText());","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":13,"-":28}},{"path":"src/main/java/seedu/address/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.detail.ProfileContent;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.exam.EmptyExamsContent;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.exam.FilledExamsContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.homework.EmptyHomeworkContent;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.homework.FilledHomeworkContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.lesson.EmptyLessonsContent;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.lesson.FilledLessonsContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    private static final String PROFILE_ICON \u003d \"images/profile_icon.png\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    private static final String HOMEWORK_ICON \u003d \"images/homework_icon.png\";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    private static final String LESSONS_ICON \u003d \"images/lessons_icon.png\";","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    private static final String EXAMS_ICON \u003d \"images/exams_icon.png\";","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    private Button viewProfileButton;","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    private Button viewSchoolTasksButton;","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    @FXML","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    private Button viewLessonsButton;","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    private Button viewExamsButton;","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    private final Student student;","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    public StudentCard(Student student, int displayedIndex, MainWindow mainWindow) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        student.getTags().stream()","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        viewProfileButton.setOnAction(event -\u003e handleViewProfileClick());","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        viewSchoolTasksButton.setOnAction(event -\u003e handleViewHomeworkClick());","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        viewLessonsButton.setOnAction(event -\u003e handleViewLessonsClick());","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        viewExamsButton.setOnAction(event -\u003e handleViewExamsClick());","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"     * Handles the view profile button click event.","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"     * Displays the student profile.","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    private void handleViewProfileClick() {","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        mainWindow.setDetailedHeaderBar(String.format(\"Student Profile: %s\",","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"                student.getName().getFirstName()), PROFILE_ICON);","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        mainWindow.setDetailedContent(new ProfileContent(student));","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"     * Handles the view school tasks button click event.","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"     * Displays the student homework list with a pie chart of the homework completion status.","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"    private void handleViewHomeworkClick() {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"        mainWindow.setDetailedHeaderBar(String.format(\"Homework List: %s\",","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"                student.getName().getFirstName()), HOMEWORK_ICON);","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"        if (student.getHomeworkList().isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"            mainWindow.setDetailedContent(new EmptyHomeworkContent(student));","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"            mainWindow.setDetailedContent(new FilledHomeworkContent(student));","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"     * Handles the view student lessons button click event","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"     * Displays the student past lessons history and upcoming lessons.","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"    private void handleViewLessonsClick() {","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"        mainWindow.setDetailedHeaderBar(String.format(\"Lessons List: %s\",","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"                student.getName().getFirstName()), LESSONS_ICON);","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"        if (student.getLessonsList().isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"            mainWindow.setDetailedContent(new EmptyLessonsContent(student));","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"            mainWindow.setDetailedContent(new FilledLessonsContent(student));","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"     * Handles the view student exams button click event","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"     * Displays all the student exams and upcoming exams in a quick glance.","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"    private void handleViewExamsClick() {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"        mainWindow.setDetailedHeaderBar(String.format(\"Exams List: %s\",","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"                student.getName().getFirstName()), EXAMS_ICON);","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"        if (student.getExamsList().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"            mainWindow.setDetailedContent(new EmptyExamsContent(student));","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"            mainWindow.setDetailedContent(new FilledExamsContent(student));","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":139,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":146,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"NBQian":10,"Yufannnn":85,"-":53}},{"path":"src/main/java/seedu/address/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private ListView\u003cStudent\u003e personListView;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e personList, MainWindow mainWindow) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code StudentCard}.","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    class PersonListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        protected void updateItem(Student person, boolean empty) {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"                setGraphic(new StudentCard(person, getIndex() + 1, mainWindow).getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof StudentListPanel)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        StudentListPanel panel \u003d (StudentListPanel) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        return personListView.equals(panel.personListView);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Yufannnn":30,"-":37}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    private final Logic logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/stylesheet/LightTheme.css\");","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Yufannnn":2,"-":85}},{"path":"src/main/java/seedu/address/ui/UiUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":" * A class that contains the UI-related constants and utility methods.","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"public class UiUtil {","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    private static final String LINE_BREAK \u003d System.lineSeparator();","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    private static final String INDENT \u003d \"            \";","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"     * Adds line breaks to a string so that each line is at most n characters long.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"     * @param text The string to be formatted.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"     * @param n The maximum number of characters per line.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    public static String addLineBreaksWithIndent(String text, int n) {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        String[] words \u003d text.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"        int lineLength \u003d 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"        for (String word : words) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"            if (lineLength + word.length() \u003e n) {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"                sb.append(LINE_BREAK);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"                sb.append(INDENT);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"                sb.append(word);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"                lineLength \u003d 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"                sb.append(SPACE);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"                sb.append(word);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"                lineLength +\u003d word.length() + 1;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"     * Adds line breaks to a string so that each line is at most n characters long.","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"     * @param text The string to be formatted.","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"     * @param n The maximum number of characters per line.","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    public static String addLineBreaksWithoutIndent(String text, int n) {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        String[] words \u003d text.split(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        int lineLength \u003d 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        for (String word : words) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"            if (lineLength + word.length() \u003e n) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"                sb.append(LINE_BREAK);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"                sb.append(word);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"                lineLength \u003d 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"                sb.append(SPACE);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"                sb.append(word);","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"                lineLength +\u003d word.length() + 1;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":63}},{"path":"src/main/java/seedu/address/ui/command/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final String PROMPT_TEXT \u003d \"Enter command here\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"     * @param commandExecutor The command executor to be used.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        commandTextField.setPromptText(PROMPT_TEXT);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Yufannnn":7,"-":84}},{"path":"src/main/java/seedu/address/ui/command/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":" * A UI for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code ResultDisplay} with the given {@code Stage}.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"     * Sets the feedback to be displayed.","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     * @param feedbackToUser The feedback to be displayed.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Yufannnn":11,"-":25}},{"path":"src/main/java/seedu/address/ui/detail/DetailedContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.detail;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" * An abstract class that represents the detailed content of a student.","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"public abstract class DetailedContent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    protected static final int MAX_LINE_LENGTH \u003d 40;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    public DetailedContent(String fxml) {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"        super(fxml);","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":15}},{"path":"src/main/java/seedu/address/ui/detail/DetailedInfoRegion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.detail;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" * An ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"public class DetailedInfoRegion extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DetailedInfoRegion.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"DetailedInfoRegion.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String DEFAULT_ICON_PATH \u003d \"/images/info_icon.png\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final String DEFAULT_TITLE_TEXT \u003d \"Detailed Information\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private StackPane headerBarPlaceholder;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private StackPane detailedContentPlaceholder;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code DetailedInfoRegion} with the given {@code Stage} and {@code Student}.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"     * @param textToDisplay The text to display in the header bar.","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    public DetailedInfoRegion(String textToDisplay) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        HeaderBar headerBar \u003d new HeaderBar(DEFAULT_TITLE_TEXT, DEFAULT_ICON_PATH);","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        headerBarPlaceholder.getChildren().add(headerBar.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        UiPart\u003cRegion\u003e detailedContent \u003d new WelcomeContent();","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        detailedContentPlaceholder.getChildren().add(detailedContent.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"     * Sets the header bar to display the given text.","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     * @param titleText The text to display in the header bar.","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"     * @param iconPath The path to the icon to display in the header bar.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    public void setHeaderBar(String titleText, String iconPath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        HeaderBar headerBar \u003d new HeaderBar(titleText, iconPath);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        headerBarPlaceholder.getChildren().add(headerBar.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     * Sets the detailed content to display the given UiPart.","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"     * @param detailedContent The UiPart to display.","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    public void setDetailedContent(UiPart\u003cRegion\u003e detailedContent) {","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        detailedContentPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        detailedContentPlaceholder.getChildren().add(detailedContent.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof DetailedInfoRegion // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 headerBarPlaceholder.equals(((DetailedInfoRegion) other).headerBarPlaceholder)","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 detailedContentPlaceholder.equals(((DetailedInfoRegion) other).detailedContentPlaceholder));","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Yufannnn":69}},{"path":"src/main/java/seedu/address/ui/detail/HeaderBar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.detail;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":" * An ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"public class HeaderBar extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HeaderBar.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"HeaderBar.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private ImageView icon;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private Label title;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code HeaderBar} with the given {@code Stage} and {@code Student}.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"     * @param titleText The text to display in the header bar.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     * @param iconPath The path to the icon to display in the header bar.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public HeaderBar(String titleText, String iconPath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        title.setText(titleText);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        icon.setImage(new Image(iconPath));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof HeaderBar // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 title.getText().equals(((HeaderBar) other).title.getText())); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Yufannnn":44}},{"path":"src/main/java/seedu/address/ui/detail/ProfileContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.detail;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" * A UI component that displays detailed information of a {@code Student}.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"public class ProfileContent extends DetailedContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ProfileContent.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"ProfileContent.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final int MAX_LINE_LENGTH \u003d 35;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final String NAME_LABEL \u003d \"Full Name: %s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final String PHONE_LABEL \u003d \"Phone Number: %s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private static final String ADDRESS_LABEL \u003d \"Address: %s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private static final String EMAIL_LABEL \u003d \"Email: %s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private Label name;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    private Label phone;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    private Label address;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    private Label email;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code ProfileContent} with the given {@code Student}.","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     * @param student The student to display the profile content for.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    public ProfileContent(Student student) {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        name.setText(UiUtil.addLineBreaksWithIndent(","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"                String.format(NAME_LABEL, student.getName().fullName), MAX_LINE_LENGTH));","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        phone.setText(UiUtil.addLineBreaksWithIndent(","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"                String.format(PHONE_LABEL, student.getPhone().value), MAX_LINE_LENGTH));","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        address.setText(UiUtil.addLineBreaksWithIndent(","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"                String.format(ADDRESS_LABEL, student.getAddress().value), MAX_LINE_LENGTH));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        email.setText(UiUtil.addLineBreaksWithIndent(","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"                String.format(EMAIL_LABEL, student.getEmail().value), MAX_LINE_LENGTH));","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        return obj \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"                || (obj instanceof ProfileContent // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 name.equals(((ProfileContent) obj).name)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":56}},{"path":"src/main/java/seedu/address/ui/detail/WelcomeContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.detail;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.exam.EmptyExamsContent;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":" * An ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" * This is the welcome screen that is displayed when the application is first opened.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"public class WelcomeContent extends DetailedContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(WelcomeContent.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"WelcomeContent.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Welcome to TutorPro!\\n\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"            + \"Your one-stop solution for managing\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"            + \"all your students and lessons.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private Label welcomeMessage;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code WelcomeContent} with the given {@code Stage} and {@code Student}.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public WelcomeContent() {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        welcomeMessage.setText(WELCOME_MESSAGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof EmptyExamsContent // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 welcomeMessage.getText().equals(((WelcomeContent) other).welcomeMessage.getText())); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":38}},{"path":"src/main/java/seedu/address/ui/exam/EmptyExamsContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.exam;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.lesson.EmptyLessonsContent;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" * An empty UI component that is displayed when there is no exams to be displayed.","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"public class EmptyExamsContent extends GeneralExamsContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EmptyLessonsContent.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"EmptyContent.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final String MESSAGE \u003d \"No exams to display for %s!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private Label message;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"     * Creates an empty {@code FilledLessonsContent} with the given {@code Student}.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"     * @param student The student to display the empty exams content for.","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    public EmptyExamsContent(Student student) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        String textToDisplay \u003d String.format(MESSAGE, student.getName().fullName);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        message.setText(UiUtil.addLineBreaksWithoutIndent(textToDisplay, MAX_LINE_LENGTH));","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        if (!(obj instanceof EmptyExamsContent)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        EmptyExamsContent other \u003d (EmptyExamsContent) obj;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        return message.getText().equals(other.message.getText());","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":47}},{"path":"src/main/java/seedu/address/ui/exam/ExamCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"public class ExamCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"ExamListCard.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private Label title;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private Label startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    private Label endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code ExamCard} with the given {@code Exam} and index to display.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     * @param exam the exam to be displayed","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     * @param id the index of the exam","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    public ExamCard(Exam exam, int id) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        title.setText(exam.getDescription());","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        startTime.setText(exam.getStartTime().format(PRINT_FORMATTER));","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        endTime.setText(exam.getEndTime().format(PRINT_FORMATTER));","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof ExamCard)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        ExamCard card \u003d (ExamCard) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        return title.getText().equals(card.title.getText())","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 startTime.getText().equals(card.startTime.getText())","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 endTime.getText().equals(card.endTime.getText());","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":57}},{"path":"src/main/java/seedu/address/ui/exam/ExamsListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":" * Panel containing the list of Homeworks.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"public class ExamsListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ExamsListPanel.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"ExamsListPanel.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private ListView\u003cExam\u003e examsListView;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code HomeworkListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"     * @param examsList The list of exams to display.","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    public ExamsListPanel(ObservableList\u003cExam\u003e examsList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        examsListView.setItems(examsList);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        examsListView.setCellFactory(listView -\u003e new ExamListViewCell());","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Homework} using a {@code HomeworkCard}.","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    static class ExamListViewCell extends ListCell\u003cExam\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        protected void updateItem(Exam exam, boolean empty) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"            super.updateItem(exam, empty);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"            if (empty || exam \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"                setText(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"                setGraphic(new ExamCard(exam, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof ExamsListPanel)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        ExamsListPanel otherExamsListPanel \u003d (ExamsListPanel) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        return examsListView.equals(otherExamsListPanel.examsListView);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":68}},{"path":"src/main/java/seedu/address/ui/exam/FilledExamsContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.homework.FilledHomeworkContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":" * Panel containing the list of Exams.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"public class FilledExamsContent extends GeneralExamsContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FilledHomeworkContent.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private static final String PAST_EXAMS_LIST_NAME \u003d \"Past Exams: \";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private static final String UPCOMING_EXAMS_LIST_NAME \u003d \"Upcoming Exams: \";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"ExamsContent.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    private final Name studentName;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    private Label name;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    private Label pastExamsListName;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    private StackPane pastExamsListPlaceholder;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    private Label upcomingExamsListName;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    private StackPane upcomingExamsListPlaceholder;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code FilledHomeworkContent} with the given {@code Student}.","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    public FilledExamsContent(Student student) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        studentName \u003d student.getName();","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        name.setText(String.format(\"First Name: %s\", student.getName().getFirstName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        pastExamsListName.setText(PAST_EXAMS_LIST_NAME);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        // Set the past exams list panel to display the past exams of the student","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cExam\u003e pastExamsList \u003d student.getPastExamsList();","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        ExamsListPanel pastExamsListPanel \u003d new ExamsListPanel(pastExamsList);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        pastExamsListPlaceholder.getChildren().add(pastExamsListPanel.getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        upcomingExamsListName.setText(UPCOMING_EXAMS_LIST_NAME);","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        // Set the upcoming exams list panel to display the upcoming exams of the student","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cExam\u003e upcomingExamsList \u003d student.getUpcomingExamsList();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        ExamsListPanel upcomingExamsListPanel \u003d new ExamsListPanel(upcomingExamsList);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        upcomingExamsListPlaceholder.getChildren().add(upcomingExamsListPanel.getRoot());","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof FilledExamsContent)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        FilledExamsContent card \u003d (FilledExamsContent) other;","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        return studentName.equals(card.studentName);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":78}},{"path":"src/main/java/seedu/address/ui/exam/GeneralExamsContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.exam;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.detail.DetailedContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":" * An abstract class that represents the detailed content of a student.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"public abstract class GeneralExamsContent extends DetailedContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    public GeneralExamsContent(String fxml) {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"        super(fxml);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":12}},{"path":"src/main/java/seedu/address/ui/homework/EmptyHomeworkContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.homework;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":" * An empty UI component that is displayed when there is no homework to be displayed.","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"public class EmptyHomeworkContent extends GeneralHomeworkContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EmptyHomeworkContent.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"EmptyContent.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final String MESSAGE \u003d \"No homework to display for %s!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private Label message;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"     * Creates an empty {@code FilledHomeworkContent} with the given {@code Student}.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"     * @param student The student to display the empty homework content for.","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    public EmptyHomeworkContent(Student student) {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        String textToDisplay \u003d String.format(MESSAGE, student.getName().fullName);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        message.setText(UiUtil.addLineBreaksWithoutIndent(textToDisplay, MAX_LINE_LENGTH));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"                || (other instanceof EmptyHomeworkContent // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 message.getText().equals(((EmptyHomeworkContent) other).message.getText())); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":38}},{"path":"src/main/java/seedu/address/ui/homework/FilledHomeworkContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.homework;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":" * A UI component that displays detailed information of a {@code Student}.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"public class FilledHomeworkContent extends GeneralHomeworkContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FilledHomeworkContent.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"HomeworkContent.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private static final String NAME_LABEL \u003d \"First Name: %s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private static final String LIST_NAME_LABEL \u003d \"Homework List: \";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private static final String PIE_CHART_TITLE \u003d \"Completed/Uncompleted Homework\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    private Label name;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    private Label listName;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    private PieChart homeworkPieChart;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    private StackPane homeworkListPlaceholder;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code FilledHomeworkContent} with the given {@code Student}.","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    public FilledHomeworkContent(Student student) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        name.setText(String.format(NAME_LABEL, student.getName().getFirstName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        listName.setText(String.format(LIST_NAME_LABEL));","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        // Set the homework pie chart to display the homework data of the student","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        homeworkPieChart.setData(student.getHomeworkPieChartData());","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        homeworkPieChart.setTitle(PIE_CHART_TITLE);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        // Set the homework list panel to display the homework list of the student","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cHomework\u003e homeworkList \u003d student.getHomeworkList();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        HomeworkListPanel homeworkListPanel \u003d new HomeworkListPanel(homeworkList);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        homeworkListPlaceholder.getChildren().add(homeworkListPanel.getRoot());","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        return obj \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"                || (obj instanceof FilledHomeworkContent // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 name.equals(((FilledHomeworkContent) obj).name)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":58}},{"path":"src/main/java/seedu/address/ui/homework/GeneralHomeworkContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.homework;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.detail.DetailedContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":" * An abstract class that represents the detailed content of a student.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"public abstract class GeneralHomeworkContent extends DetailedContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    public GeneralHomeworkContent(String fxml) {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"        super(fxml);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":12}},{"path":"src/main/java/seedu/address/ui/homework/HomeworkCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.homework;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"public class HomeworkCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"HomeworkListCard.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String COMPLETED_ICON \u003d \"images/completed.png\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final String UNCOMPLETED_ICON \u003d \"images/uncompleted.png\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final String DOT \u003d \". \";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private static final String DEADLINE_LABEL \u003d \"(by: %s)\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    private Label id;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    private ImageView statusIcon;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    private Label description;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    private Label deadline;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code HomeworkCard} with the given {@code Homework} and index to display.","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"     * @param homework to be displayed in the card","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"     * @param id of the homework in the list","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkCard(Homework homework, int id) {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        this.id.setText(id + DOT);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        description.setText(homework.getDescription());","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        deadline.setText(String.format(DEADLINE_LABEL, homework.getDeadlineString()));","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        // Set the status icon to completed or uncompleted","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        if (homework.isCompleted()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"            statusIcon.setImage(new Image(COMPLETED_ICON));","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"            statusIcon.setImage(new Image(UNCOMPLETED_ICON));","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof HomeworkCard)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        HomeworkCard card \u003d (HomeworkCard) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        return description.getText().equals(card.description.getText());","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Yufannnn":68}},{"path":"src/main/java/seedu/address/ui/homework/HomeworkListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.homework;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":" * Panel containing the list of Homeworks.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"public class HomeworkListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HomeworkListPanel.class);","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"HomeworkListPanel.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private ListView\u003cHomework\u003e homeworkListView;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code HomeworkListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkListPanel(ObservableList\u003cHomework\u003e homeworkList) {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        homeworkListView.setItems(homeworkList);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        homeworkListView.setCellFactory(listView -\u003e new HomeworkListViewCell());","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Homework} using a {@code HomeworkCard}.","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    static class HomeworkListViewCell extends ListCell\u003cHomework\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        protected void updateItem(Homework homework, boolean empty) {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"            super.updateItem(homework, empty);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"            if (empty || homework \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"                setText(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"                setGraphic(new HomeworkCard(homework, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof HomeworkListPanel)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        HomeworkListPanel panel \u003d (HomeworkListPanel) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        return homeworkListView.equals(panel.homeworkListView);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Yufannnn":66}},{"path":"src/main/java/seedu/address/ui/lesson/EmptyLessonsContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.lesson;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":" * An empty UI component that is displayed when there is no lessons to be displayed.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"public class EmptyLessonsContent extends GeneralLessonsContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EmptyLessonsContent.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"EmptyContent.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String MESSAGE \u003d \"No lessons to display for %s!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private Label message;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"     * Creates an empty {@code FilledLessonsContent} with the given {@code Student}.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     * @param student The student to display the empty exams content for.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public EmptyLessonsContent(Student student) {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        String textToDisplay \u003d String.format(MESSAGE, student.getName().fullName);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        message.setText(UiUtil.addLineBreaksWithoutIndent(textToDisplay, MAX_LINE_LENGTH));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        if (!(obj instanceof EmptyLessonsContent)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        EmptyLessonsContent other \u003d (EmptyLessonsContent) obj;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        return message.getText().equals(other.message.getText());","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":46}},{"path":"src/main/java/seedu/address/ui/lesson/FilledLessonsContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.lesson;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.homework.FilledHomeworkContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.homework.GeneralHomeworkContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":" * A UI component that displays detailed information of a {@code Student}.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"public class FilledLessonsContent extends GeneralHomeworkContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FilledHomeworkContent.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"LessonsContent.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private static final String NAME_LABEL \u003d \"First Name: %s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    private static final String PAST_LESSONS_LIST_NAME \u003d \"Past Lessons: \";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private static final String UPCOMING_LESSONS_LIST_NAME \u003d \"Upcoming Lessons: \";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    private final Name studentName;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    private Label name;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    private Label pastLessonsListName;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    private StackPane pastLessonsListPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    private Label upcomingLessonsListName;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    private StackPane upcomingLessonsListPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code FilledHomeworkContent} with the given {@code Student}.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    public FilledLessonsContent(Student student) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        studentName \u003d student.getName();","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        name.setText(String.format(NAME_LABEL, student.getName().getFirstName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        pastLessonsListName.setText(PAST_LESSONS_LIST_NAME);","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        // Set the past lessons list panel to display the past lessons of the student","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cLesson\u003e pastLessonsList \u003d student.getPastLessonsList();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        LessonsListPanel pastLessonsListPanel \u003d new LessonsListPanel(pastLessonsList);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        pastLessonsListPlaceholder.getChildren().add(pastLessonsListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        upcomingLessonsListName.setText(UPCOMING_LESSONS_LIST_NAME);","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        // Set the upcoming lessons list panel to display the upcoming lessons of the student","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        ObservableList\u003cLesson\u003e upcomingLessonsList \u003d student.getUpcomingLessonsList();","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        LessonsListPanel upcomingLessonsListPanel \u003d new LessonsListPanel(upcomingLessonsList);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        upcomingLessonsListPlaceholder.getChildren().add(upcomingLessonsListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        return obj \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"                || (obj instanceof FilledLessonsContent // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 studentName.equals(((FilledLessonsContent) obj).studentName)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":71}},{"path":"src/main/java/seedu/address/ui/lesson/GeneralLessonsContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.lesson;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.detail.DetailedContent;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":" * An abstract class that represents the detailed content of a student.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"public abstract class GeneralLessonsContent extends DetailedContent {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    public GeneralLessonsContent(String fxml) {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"        super(fxml);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yufannnn":12}},{"path":"src/main/java/seedu/address/ui/lesson/LessonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.lesson;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"public class LessonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private static final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"LessonListCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final String DOT \u003d \". \";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    private Label title;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    private Label startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    private Label endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code LessonCode} with the given {@code Lesson} and index to display.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     * @param lesson The lesson to be displayed.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     * @param id The index of the lesson to be displayed.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    public LessonCard(Lesson lesson, int id) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        title.setText(lesson.getTitle());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        startTime.setText(lesson.getStartTime().format(PRINT_FORMATTER));","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        endTime.setText(lesson.getEndTime().format(PRINT_FORMATTER));","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof LessonCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        LessonCard card \u003d (LessonCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        return title.getText().equals(card.title.getText())","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 startTime.getText().equals(card.startTime.getText())","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"                \u0026\u0026 endTime.getText().equals(card.endTime.getText());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Yufannnn":58}},{"path":"src/main/java/seedu/address/ui/lesson/LessonsListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.ui.lesson;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":" * Panel containing the list of Homeworks.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"public class LessonsListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LessonsListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private static final String FXML \u003d \"LessonsListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    private ListView\u003cLesson\u003e lessonsListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code HomeworkListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public LessonsListPanel(ObservableList\u003cLesson\u003e lessonsList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        lessonsListView.setItems(lessonsList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        lessonsListView.setCellFactory(listView -\u003e new LessonsListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Homework} using a {@code HomeworkCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    static class LessonsListViewCell extends ListCell\u003cLesson\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        protected void updateItem(Lesson lesson, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"            super.updateItem(lesson, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"            if (empty || lesson \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"                setGraphic(new LessonCard(lesson, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        if (!(other instanceof LessonsListPanel)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        LessonsListPanel panel \u003d (LessonsListPanel) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        return lessonsListView.equals(panel.lessonsListView);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Yufannnn":66}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003cStackPane fx:id\u003d\"commandBoxPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Yufannnn":1,"-":7}},{"path":"src/main/resources/view/DetailedInfoRegion.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003cVBox fx:id\u003d\"detailedInfoRegion\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    \u003cStackPane fx:id\u003d\"headerBarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    \u003cStackPane fx:id\u003d\"detailedContentPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Yufannnn":9}},{"path":"src/main/resources/view/EmptyContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003cStackPane fx:id\u003d\"detailedContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    \u003cLabel fx:id\u003d\"message\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"studentNameLabel\" text\u003d\"Full Name\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":8}},{"path":"src/main/resources/view/ExamListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003cHBox fx:id\u003d\"cardPane\" alignment\u003d\"CENTER_LEFT\"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"        \u003cHBox spacing\u003d\"3\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"title\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"startTime\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"endTime\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":21}},{"path":"src/main/resources/view/ExamsContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"\u003cStackPane fx:id\u003d\"detailedContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    \u003cVBox id\u003d\"studentExamsContainer\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" spacing\u003d\"5\"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"          prefHeight\u003d\"300.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"name\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"studentNameLabel\" text\u003d\"Full Name\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"pastExamsListName\" alignment\u003d\"TOP_LEFT\" text\u003d\"List Name\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"        \u003cStackPane fx:id\u003d\"pastExamsListPlaceholder\" prefHeight\u003d\"400.0\" prefWidth\u003d\"300.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"upcomingExamsListName\" alignment\u003d\"TOP_LEFT\" text\u003d\"List Name\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"        \u003cStackPane fx:id\u003d\"upcomingExamsListPlaceholder\" prefHeight\u003d\"400.0\" prefWidth\u003d\"300.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":22}},{"path":"src/main/resources/view/ExamsListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/ListPanel.css\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    \u003cListView fx:id\u003d\"examsListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    \u003ccursor\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"        \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    \u003c/cursor\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":17}},{"path":"src/main/resources/view/HeaderBar.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/HeaderBar.css\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"                \u003cInsets left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"            \u003cImageView fx:id\u003d\"icon\" fitHeight\u003d\"30\" fitWidth\u003d\"30\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"title\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Yufannnn":27}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/HelpWindow.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Yufannnn":3,"-":41}},{"path":"src/main/resources/view/HomeworkContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"\u003cStackPane fx:id\u003d\"detailedContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    \u003cVBox id\u003d\"studentHomeworkContainer\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" spacing\u003d\"5\"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"          prefHeight\u003d\"300.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"name\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"studentNameLabel\" text\u003d\"Full Name\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"listName\" alignment\u003d\"TOP_LEFT\" text\u003d\"List Name\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        \u003cStackPane fx:id\u003d\"homeworkListPlaceholder\" prefHeight\u003d\"400.0\" prefWidth\u003d\"300.0\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"        \u003cPieChart fx:id\u003d\"homeworkPieChart\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":22}},{"path":"src/main/resources/view/HomeworkListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"\u003cHBox fx:id\u003d\"cardPane\" alignment\u003d\"CENTER_LEFT\"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"            \u003cImageView fx:id\u003d\"statusIcon\"  fitHeight\u003d\"20\" fitWidth\u003d\"20\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"3\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"                \u003cInsets left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"description\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"deadline\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Yufannnn":26}},{"path":"src/main/resources/view/HomeworkListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/ListPanel.css\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003cListView fx:id\u003d\"homeworkListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    \u003ccursor\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"        \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    \u003c/cursor\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Yufannnn":16}},{"path":"src/main/resources/view/LessonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003cHBox fx:id\u003d\"cardPane\" alignment\u003d\"CENTER_LEFT\"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"        \u003cHBox spacing\u003d\"3\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"title\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"startTime\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"endTime\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Yufannnn":21}},{"path":"src/main/resources/view/LessonsContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"\u003cStackPane fx:id\u003d\"detailedContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    \u003cVBox id\u003d\"studentLessonsContainer\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" spacing\u003d\"5\"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"          prefHeight\u003d\"300.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"name\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"studentNameLabel\" text\u003d\"Full Name\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"pastLessonsListName\" alignment\u003d\"TOP_LEFT\" text\u003d\"List Name\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"        \u003cStackPane fx:id\u003d\"pastLessonsListPlaceholder\" prefHeight\u003d\"400.0\" prefWidth\u003d\"300.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        \u003cLabel fx:id\u003d\"upcomingLessonsListName\" alignment\u003d\"TOP_LEFT\" text\u003d\"List Name\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"        \u003cStackPane fx:id\u003d\"upcomingLessonsListPlaceholder\" prefHeight\u003d\"400.0\" prefWidth\u003d\"300.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":22}},{"path":"src/main/resources/view/LessonsListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/ListPanel.css\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003cListView fx:id\u003d\"lessonsListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    \u003ccursor\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"        \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    \u003c/cursor\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Yufannnn":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"         title\u003d\"TutorPro\" minWidth\u003d\"950\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/LightTheme.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/Extensions.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/MenuBar.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/StudentList.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/CommandBox.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        \u003cURL value\u003d\"@stylesheet/DetailedInfoRegion.css\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"      \u003cVBox minWidth\u003d\"1000\" prefHeight\u003d\"1000\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        \u003cGridPane fx:id\u003d\"contentSection\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"550.0\" prefWidth\u003d\"1200.0\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"350.0\" prefWidth\u003d\"1000.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"            \u003cColumnConstraints /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"            \u003cColumnConstraints /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"          \u003cVBox GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"                         minWidth\u003d\"360\" prefWidth\u003d\"1000\" maxWidth\u003d\"Infinity\"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"                         minHeight\u003d\"200\" prefHeight\u003d\"500\" maxHeight\u003d\"Infinity\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" VBox.vgrow\u003d\"NEVER\"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"                       minWidth\u003d\"360\" prefWidth\u003d\"1000\" maxHeight\u003d\"Infinity\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"                       minHeight\u003d\"200\" prefHeight\u003d\"400\" maxWidth\u003d\"Infinity\"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"                       minWidth\u003d\"360\" prefWidth\u003d\"1000\" maxHeight\u003d\"Infinity\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"15\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"          \u003cVBox GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"              \u003cInsets top\u003d\"11\" right\u003d\"12\" bottom\u003d\"15\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"            \u003cStackPane fx:id\u003d\"detailedInfoRegionPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"                       minHeight\u003d\"100\" prefHeight\u003d\"2000\" maxHeight\u003d\"Infinity\"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"                       minWidth\u003d\"325\" prefWidth\u003d\"500\" maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Yufannnn":46,"-":46}},{"path":"src/main/resources/view/ProfileContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"\u003cStackPane fx:id\u003d\"detailedContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    \u003cScrollPane fx:id\u003d\"detailedContentScroll\" hbarPolicy\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"        \u003cVBox fx:id\u003d\"profileContent\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"name\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"studentNameLabel\" text\u003d\"Name\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"phone\" alignment\u003d\"TOP_LEFT\" text\u003d\"Phone\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"address\" alignment\u003d\"TOP_LEFT\" text\u003d\"Address\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"            \u003cLabel fx:id\u003d\"email\" alignment\u003d\"TOP_LEFT\" text\u003d\"Email\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"            \u003cVBox fx:id\u003d\"tagsContainer\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":25}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    \u003cURL value\u003d\"@stylesheet/ResultDisplay.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Yufannnn":5,"-":8}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    \u003cURL value\u003d\"@stylesheet/StatusBarFooter.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"Yufannnn":4,"-":12}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    \u003cURL value\u003d\"@stylesheet/Button.css\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"125.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"      \u003cColumnConstraints hgrow\u003d\"NEVER\" minWidth\u003d\"250.0\" prefWidth\u003d\"300.0\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"      \u003cColumnConstraints /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"      \u003cColumnConstraints /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"      \u003cButton fx:id\u003d\"viewProfileButton\" styleClass\u003d\"oddButton\" text\u003d\"Profile\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"      \u003cButton fx:id\u003d\"viewSchoolTasksButton\" styleClass\u003d\"evenButton\" text\u003d\"Homework\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"      \u003cButton fx:id\u003d\"viewLessonsButton\" styleClass\u003d\"oddButton\" text\u003d\"Lessons\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"      \u003cButton fx:id\u003d\"viewExamsButton\" styleClass\u003d\"evenButton\" text\u003d\"Exams\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NBQian":5,"Yufannnn":19,"-":25}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"  \u003ccursor\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"  \u003c/cursor\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":4,"-":8}},{"path":"src/main/resources/view/WelcomeContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"\u003cStackPane fx:id\u003d\"detailedContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"    \u003cLabel fx:id\u003d\"welcomeMessage\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yufannnn":7}},{"path":"src/main/resources/view/stylesheet/Button.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"/*","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":".oddButton {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    -fx-min-width: 65px;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    -fx-min-height: 25px;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 5 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-margin: 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #AED6F1;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 1, 2);","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":".evenButton {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    -fx-min-width: 65px;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    -fx-min-height: 25px;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 5 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    -fx-margin: 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #BFEAF5;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 1, 2);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":".oddButton:hover {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: innerShadow(gaussian, grey, 5, 0.5, 1, 2);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":".evenButton:hover {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: innerShadow(gaussian, grey, 5, 0.5, 1, 2);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":".oddButton:focused {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":".evenButton:focused {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-insets: 1 1 1 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Yufannnn":50}},{"path":"src/main/resources/view/stylesheet/CommandBox.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"#commandTextField {","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #fffceb;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"#commandBoxPane {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"     -fx-border-color: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"     -fx-border-width: 2;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"     -fx-border-radius: 3;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"     -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 2, 3);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Yufannnn":19}},{"path":"src/main/resources/view/stylesheet/DetailedInfoRegion.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"#detailedInfoRegion {","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 2, 3);","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"#detailedContentPlaceholder {","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-style: solid none none none;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #fffceb;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"#detailedContent {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #fffceb;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"#welcomeMessage {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":".label {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"#detailedInfoRegion .list-view {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 7;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-radius: 7;","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 1, 2);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":".chart-legend {","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":".chart-pie-label {","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"#homeworkPieChart.default-color0.chart-pie { -fx-pie-color: #ffd700; }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"#homeworkPieChart.default-color1.chart-pie { -fx-pie-color: #ffa500; }","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"#detailedContentScroll {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Yufannnn":61}},{"path":"src/main/resources/view/stylesheet/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #fa4d2a !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-weight: bold !important;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\" !important;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-background: #f7f7f7;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":4,"-":17}},{"path":"src/main/resources/view/stylesheet/HeaderBar.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":".status-bar {","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#acc9fc, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":".status-bar .label {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 5 5 5 10;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#acc9fc, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: derive(#acc9fc, 25%);","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Yufannnn":22}},{"path":"src/main/resources/view/stylesheet/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -text-fill: #1d1d1d;","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    -fx-min-width: 65px;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-min-height: 25px;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 5 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-margin: 5;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #BFEAF5;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 1, 2);","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #AED6F1;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Yufannnn":15,"-":15}},{"path":"src/main/resources/view/stylesheet/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":".background {","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":".label {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":".label-bright {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":".label-header {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":".text-field {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":".tab-pane {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":".table-view {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    -fx-control-inner-background: #f7f7f7;","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        transparent","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        transparent","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":".list-view {","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":".list-cell {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #dbdbdb;","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #b4c5d4;","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-style: solid solid solid none;","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":".list-cell .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":".cell_big_label {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #f7f7f7;","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":".cell_small_label {","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #f7f7f7;","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":".stack-pane {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"     -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":".grid-pane {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Yufannnn"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#f7f7f7, 30%);","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"Yufannnn"},"content":".dialog-pane {","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"Yufannnn"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f7f7f7;","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"Yufannnn"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"Yufannnn"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#f7f7f7, 25%);","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"Yufannnn"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"Yufannnn"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":".scroll-bar {","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#f7f7f7, 20%);","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"Yufannnn"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#6b6b6b, 50%);","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 7;","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"Yufannnn"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"Yufannnn"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"Yufannnn"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"Yufannnn"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"Yufannnn"},"content":"#cardPane {","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"Yufannnn"},"content":"#contentSection {","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #e8f5fc;","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Yufannnn":205}},{"path":"src/main/resources/view/stylesheet/ListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"#homeworkListView .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"#lessonsListView .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"#upcomingLessonsListView .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"#examsListView .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"#upcomingExamsListView .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"#endTime {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 0 0 0 10;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"#upcomingLessonsListName {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 15 15 15 15;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Yufannnn":37}},{"path":"src/main/resources/view/stylesheet/MenuBar.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":".context-menu {","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#004175, 50%);","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":".context-menu .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":".menu-bar {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#004175, 20%);","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":".menu .left-container {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Yufannnn":22}},{"path":"src/main/resources/view/stylesheet/ResultDisplay.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"#resultDisplay {","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 7;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 2, 3);","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: transparent, #fffceb, transparent, #fffceb;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 7;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"#result-display .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Yufannnn":20}},{"path":"src/main/resources/view/stylesheet/StatusBarFooter.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":".status-bar {","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#004175, 30%);","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":".status-bar .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 5 5 5 10;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: derive(#004175, 30%);","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-color: derive(#004175, 25%);","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Yufannnn":21}},{"path":"src/main/resources/view/stylesheet/StudentList.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"#personListPanelPlaceholder {","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"     -fx-border-color: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"     -fx-border-width: 2;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"     -fx-border-radius: 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"     -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 2, 3);","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"#tags {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"#tags .label {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-color: #f2e2a7;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    -fx-padding: 2 5 2 5;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    -fx-effect: dropshadow(gaussian, grey, 5, 0.5, 0, 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Yufannnn":21}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    //    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"    //    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"    //        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"    //        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    //    }","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"    //","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"    //    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"    //    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"    //        String deleteCommand \u003d \"delete index/10\";","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"    //        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"    //    }","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"        Student expectedPerson \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"        //        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"        assertNotEquals(expectedModel, model);","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"NBQian":14,"Yufannnn":4,"-":143}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        Student personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Yufannnn":6,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    //    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"    //    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    //        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    //        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    //","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    //        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"    //","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    //        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"    //        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    //    }","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"        public void addPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"        public boolean hasPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"        public void deletePerson(Student target) {","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"        public void setStudent(Student target, Student editedPerson) {","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"Yufannnn"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"Yufannnn"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"        public boolean hasDuplicateName(String name) {","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"this method should not be called.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"        public boolean hasExtendedName(String name) {","lastModifiedDate":"2023-04-02"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"this method should not be called.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"        public boolean noSuchStudent(String name) {","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"this method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":164,"author":{"gitId":"NBQian"},"content":"        public boolean hasDuplicateNameEdit(String name, Integer index) {","lastModifiedDate":"2023-04-02"},{"lineNumber":165,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"this method should not be called.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":167,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":168,"author":{"gitId":"NBQian"},"content":"        public boolean hasExtendedNameEdit(String name, Integer index) {","lastModifiedDate":"2023-04-02"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"this method should not be called.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"        public boolean hasDuplicateNameAdd(String name) {","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"this method should not be called.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":174,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":175,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"NBQian"},"content":"        public boolean hasConflictingLessonTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":178,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"NBQian"},"content":"        public boolean hasConflictingExamTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"Yufannnn"},"content":"        private final Student person;","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"        ModelStubWithPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"Yufannnn"},"content":"        public boolean hasPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"Yufannnn"},"content":"            return this.person.isSameStudent(person);","lastModifiedDate":"2023-02-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"Yufannnn"},"content":"        final ArrayList\u003cStudent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"Yufannnn"},"content":"        public boolean hasPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"Yufannnn"},"content":"            return personsAdded.stream().anyMatch(person::isSameStudent);","lastModifiedDate":"2023-02-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"Yufannnn"},"content":"        public void addPerson(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":227,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":228,"author":{"gitId":"NBQian"},"content":"        public boolean hasConflictingLessonTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":229,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":230,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":231,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":232,"author":{"gitId":"NBQian"},"content":"        @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":233,"author":{"gitId":"NBQian"},"content":"        public boolean hasConflictingExamTime(Lesson lesson) {","lastModifiedDate":"2023-04-05"},{"lineNumber":234,"author":{"gitId":"NBQian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":235,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"NBQian":54,"Yufannnn":20,"-":164}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Yufannnn":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"        Student person \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Yufannnn":13,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        Student personToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, personToDelete);","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        Student personToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, personToDelete);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Yufannnn":11,"-":98}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        Student editedPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        Student lastPerson \u003d model.getFilteredStudentList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        StudentBuilder personInList \u003d new StudentBuilder(lastPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        Student editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        expectedModel.setStudent(lastPerson, editedPerson);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditStudentDescriptor());","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        Student editedPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        Student personInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        Student editedPerson \u003d new StudentBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"    //    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"    //    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"    //        Student firstPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"    //        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"    //        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"    //","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"    //        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-04-02"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"    //    }","lastModifiedDate":"2023-04-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"        Student personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"                new EditStudentDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"Yufannnn"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"NBQian":8,"Yufannnn":28,"-":137}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Yufannnn":9,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        NamePredicate firstPredicate \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"                new NamePredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        NamePredicate secondPredicate \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"                new NamePredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"szejiancheng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0, \"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        NamePredicate predicate \u003d new NamePredicate(Collections.emptyList());","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3, \"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"        NamePredicate predicate \u003d new NamePredicate(Arrays.asList(\"Kurz\", \"Elle\", \"Kunz\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"szejiancheng":2,"NBQian":7,"Yufannnn":10,"-":65}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Yufannnn":1,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        Student expectedPerson \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        Student expectedPersonMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        Student expectedPerson \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Yufannnn":11,"-":130}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentUtil;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        Student person \u003d new StudentBuilder().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(person));","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"index/\" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        Student person \u003d new StudentBuilder().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(person).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"                + \"index/\" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"                + StudentUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"                FindCommand.COMMAND_WORD + \" \" + \"name/foo name/bar name/baz\");","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        assertEquals(new FindCommand(new NamePredicate(keywords)), command);","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"NBQian":6,"Yufannnn":9,"-":86}},{"path":"src/test/java/seedu/address/logic/parser/CreateExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exam.CreateExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exam.CreateExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"public class CreateExamCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"    private static final String VALID_START_TIME \u003d \"2027-04-30T12:00\";","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"    private static final String VALID_END_TIME \u003d \"2027-04-30T:14:00\";","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"    private static final String VALID_EXAM_NAME \u003d \"Math\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"    private static final String VALID_STUDENT_NAME \u003d \"Amy\";","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"    private CreateExamCommandParser parser \u003d new CreateExamCommandParser();","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_fieldsMissing_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"                                        CreateExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"        //Missing end time","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/\" + VALID_STUDENT_NAME","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"                + \" exam/\" + VALID_EXAM_NAME","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"                + \" start/\" + VALID_START_TIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"        //Missing start time","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" name/\" + VALID_STUDENT_NAME","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"                + \" exam/\" + VALID_EXAM_NAME","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"                + \" end/\" + VALID_END_TIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"        //Missing student name","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"        String input3 \u003d \" exam/\" + VALID_EXAM_NAME","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"                + \" start/\" + VALID_START_TIME","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"                + \" end/\" + VALID_END_TIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input3, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"        //Missing exam name","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"        String input4 \u003d \" name/\" + VALID_STUDENT_NAME","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"fahim-tazz"},"content":"                + \" start/\" + VALID_START_TIME","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"fahim-tazz"},"content":"                + \" end/\" + VALID_END_TIME;","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input4, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"fahim-tazz":44,"Yufannnn":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        assertParseSuccess(parser, \" index/1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"NBQian":1,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exam.DeleteExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exam.DeleteExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"class DeleteExamCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"    private DeleteExamCommandParser parser \u003d new DeleteExamCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_missingArs_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"                                        DeleteExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"        //Missing index","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/Amy\";","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"        //Missing name","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" index/1\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_indexNonPositive_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"        //Negative index","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/Amy\"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/-2\";","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"        //Zero index","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" name/Amy\"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/0\";","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"fahim-tazz":38,"Yufannnn":2}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"            EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"            Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \" index/1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"        String userInput \u003d \" index/\" + targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"        String userInput \u003d \" index/\" + targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"    public void parse_oneFieldSpecified_fail() {","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"        String userInput \u003d \" index/\" + targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"        userInput \u003d \" index/\" + targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"Yufannnn"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"        userInput \u003d \" index/\" + targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"Yufannnn"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"        userInput \u003d \" index/\" + targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"Yufannnn"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":"        userInput \u003d \" index/\" + targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"NBQian"},"content":"        String userInput \u003d \" index/\" + targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"NBQian"},"content":"        String userInput \u003d \" index/\" + targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"NBQian"},"content":"        userInput \u003d \" index/\" + targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-04-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"Yufannnn"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"NBQian"},"content":"        String userInput \u003d \" index/\" + targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-04-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"Yufannnn"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"NBQian":31,"Yufannnn":17,"-":167}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        assertParseFailure(parser, \"   \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"                new FindCommand(new NamePredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        assertParseSuccess(parser, \" name/Alice name/Bob\", expectedFindCommand);","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        assertParseSuccess(parser, \" \\n name/Alice \\n \\t name/Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"NBQian":6,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Yufannnn":4,"-":192}},{"path":"src/test/java/seedu/address/logic/parser/UpdateExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exam.UpdateExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exam.UpdateExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"class UpdateExamCommandParserTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"    private static final String VALID_START_TIME \u003d \"2027-04-30T12:00\";","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"    private static final String VALID_END_TIME \u003d \"2027-04-30T14:00\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"    private UpdateExamCommandParser parser \u003d new UpdateExamCommandParser();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"                                        UpdateExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"        //Missing name","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" index/1\"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"                + \" exam/Math\"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"                + \" start/\" + VALID_START_TIME","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"                + \" end/\" + VALID_END_TIME;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"        //Missing index","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" name/Amy\"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"                + \" exam/Math\"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"                + \" start/\" + VALID_START_TIME","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"                + \" end/\" + VALID_END_TIME;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_allOptionalFieldsMissing_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"                                        UpdateExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/Amy\"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"fahim-tazz":41,"Yufannnn":2}},{"path":"src/test/java/seedu/address/logic/parser/ViewExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.exam.ViewExamCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exam.ViewExamCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"class ViewExamCommandParserTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"    private ViewExamCommandParser parser \u003d new ViewExamCommandParser();","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_wrongPrefixes_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"        String input \u003d \" index/1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"                                        ViewExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input, expected);","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"fahim-tazz":18,"Yufannnn":2}},{"path":"src/test/java/seedu/address/logic/parser/homework/CreateHomeworkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.commands.homework.CreateHomeworkCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"public class CreateHomeworkCommandParserTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"    public static final String VALID_DEADLINE \u003d \"2027-04-31T12:00\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"    private static final String VALID_HOMEWORK_NAME \u003d \"Biology\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"    private CreateHomeworkCommandParser parser \u003d new CreateHomeworkCommandParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"    private AddressBookParser mainParser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"    public void clearTutorPro() {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"            mainParser.parseCommand(\"clear\");","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"            //Clear command will not cause a ParseException","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_fieldsMissing_exceptionThrown() throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"        clearTutorPro();","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"        //Add a new student","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"        mainParser.parseCommand(\"new-student name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"                + \" phone/\" + VALID_PHONE_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"                + \" email/\" + VALID_EMAIL_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"                + \" address/\" + VALID_ADDRESS_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"fahim-tazz"},"content":"        );","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"fahim-tazz"},"content":"        //Deadline missing","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"fahim-tazz"},"content":"                                         CreateHomeworkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \"name/Amy\"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"fahim-tazz"},"content":"                    + \" homework/\" + VALID_HOMEWORK_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"fahim-tazz"},"content":"        //Homework Name missing","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \"name/Amy\"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"fahim-tazz"},"content":"                + \" deadline/\" + VALID_DEADLINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_allFieldsInAnyOrder_success() throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"fahim-tazz"},"content":"        clearTutorPro();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"fahim-tazz"},"content":"        //Add a new student","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"fahim-tazz"},"content":"        mainParser.parseCommand(\"new-student name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"fahim-tazz"},"content":"                                         + \" phone/\" + VALID_PHONE_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"fahim-tazz"},"content":"                                         + \" email/\" + VALID_EMAIL_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"fahim-tazz"},"content":"                                         + \" address/\" + VALID_ADDRESS_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"fahim-tazz"},"content":"        );","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"fahim-tazz"},"content":"        //Ideal ordering: name-hw-deadline","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"fahim-tazz"},"content":"        String idealInput \u003d \"new-homework name/Amy homework/Biology deadline/\" + VALID_DEADLINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"fahim-tazz"},"content":"        CreateHomeworkCommand expected \u003d (CreateHomeworkCommand) mainParser.parseCommand(idealInput);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"fahim-tazz"},"content":"        //hw-deadline-name","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" homework/\" + VALID_HOMEWORK_NAME","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"fahim-tazz"},"content":"                + \" deadline/\" + VALID_DEADLINE","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"fahim-tazz"},"content":"                + \" name/Amy\";","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"fahim-tazz"},"content":"        assertParseSuccess(parser, input1, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"fahim-tazz"},"content":"        //deadline-hw-name","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" deadline/\" + VALID_DEADLINE","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"fahim-tazz"},"content":"                + \" homework/\" + VALID_HOMEWORK_NAME","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"fahim-tazz"},"content":"                + \" name/Amy\";","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"fahim-tazz"},"content":"        assertParseSuccess(parser, input2, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"fahim-tazz"},"content":"        //hw-name-deadline","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"fahim-tazz"},"content":"        String input3 \u003d \" homework/\" + VALID_HOMEWORK_NAME","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"fahim-tazz"},"content":"                + \" name/Amy\"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"fahim-tazz"},"content":"                + \" deadline/\" + VALID_DEADLINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"fahim-tazz"},"content":"        assertParseSuccess(parser, input3, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"fahim-tazz"},"content":"        //deadline-name-hw","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"fahim-tazz"},"content":"        String input4 \u003d \" deadline/\" + VALID_DEADLINE","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"fahim-tazz"},"content":"                + \" name/Amy\"","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"fahim-tazz"},"content":"                + \" homework/\" + VALID_HOMEWORK_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"fahim-tazz"},"content":"        assertParseSuccess(parser, input4, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"fahim-tazz"},"content":"        //name-deadline-hw","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"fahim-tazz"},"content":"        String input5 \u003d \" name/Amy\"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"fahim-tazz"},"content":"                + \" deadline/\" + VALID_DEADLINE","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"fahim-tazz"},"content":"                + \" homework/\" + VALID_HOMEWORK_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"fahim-tazz"},"content":"        assertParseSuccess(parser, input5, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_studentDoesNotExist_failure() {","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"fahim-tazz"},"content":"        clearTutorPro();","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"fahim-tazz"},"content":"        //Add homework to student that does not exist","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"fahim-tazz"},"content":"                           \"name/Roy homework/Biology deadline/\" + VALID_DEADLINE,","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"fahim-tazz"},"content":"                           String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"fahim-tazz"},"content":"                                                   CreateHomeworkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"fahim-tazz":114}},{"path":"src/test/java/seedu/address/logic/parser/homework/DeleteHomeworkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"public class DeleteHomeworkCommandParserTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"    public static final String VALID_DEADLINE \u003d \"2027-04-31T12:00\";","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"    private AddressBookParser mainParser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"    private DeleteHomeworkCommandParser parser \u003d new DeleteHomeworkCommandParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_indexIsNonPositive_failure() {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"        //Negative index","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/-1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"        //Zero index","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/0\";","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"        //Non-numeric index","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"        String input3 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/abc\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input3, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"fahim-tazz":33}},{"path":"src/test/java/seedu/address/logic/parser/homework/MarkHomeworkAsDoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.homework.DeleteHomeworkCommandParserTest.VALID_DEADLINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.commands.homework.MarkHomeworkAsDoneCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"public class MarkHomeworkAsDoneCommandParserTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"    private MarkHomeworkAsDoneCommandParser parser \u003d new MarkHomeworkAsDoneCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"    private AddressBookParser mainParser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_allFieldsNotPresent_failure() {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/Amy\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"                                        MarkHomeworkAsDoneCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" index/1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_indexIsNonPositive_failure() {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"        //Add a new student","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"            mainParser.parseCommand(\"new-student name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"                                            + \" phone/\" + VALID_PHONE_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"                                            + \" email/\" + VALID_EMAIL_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"fahim-tazz"},"content":"                                            + \" address/\" + VALID_ADDRESS_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"fahim-tazz"},"content":"            );","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"fahim-tazz"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"fahim-tazz"},"content":"            //The above command will not throw any ParseException.","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"fahim-tazz"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"fahim-tazz"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"fahim-tazz"},"content":"        //Add 4 homeworks","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"fahim-tazz"},"content":"        for (int i \u003d 1; i \u003c 5; i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"fahim-tazz"},"content":"            String input \u003d \"new-homework\"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"fahim-tazz"},"content":"                    + \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"fahim-tazz"},"content":"                    + \" homework/\" + \"Biology Chapter \" + i","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"fahim-tazz"},"content":"                    + \" deadline/\" + VALID_DEADLINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"fahim-tazz"},"content":"            try {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"fahim-tazz"},"content":"                mainParser.parseCommand(input);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"fahim-tazz"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"fahim-tazz"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"fahim-tazz"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"fahim-tazz"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"fahim-tazz"},"content":"        //Negative index","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/-1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"fahim-tazz"},"content":"        //Zero index","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/0\";","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"fahim-tazz"},"content":"        //Non-numeric index","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"fahim-tazz"},"content":"        String input3 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/abc\";","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input3, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"fahim-tazz":78}},{"path":"src/test/java/seedu/address/logic/parser/homework/MarkHomeworkAsUndoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.homework.DeleteHomeworkCommandParserTest.VALID_DEADLINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.commands.homework.MarkHomeworkAsUndoCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"public class MarkHomeworkAsUndoCommandParserTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"    private MarkHomeworkAsUndoCommandParser parser \u003d new MarkHomeworkAsUndoCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"    private AddressBookParser mainParser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_allFieldsNotPresent_failure() {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/Amy\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"                                        MarkHomeworkAsUndoCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" index/1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected);","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_indexIsNonPositive_failure() {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"        //Add a new student","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"            mainParser.parseCommand(\"new-student name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"                                            + \" phone/\" + VALID_PHONE_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"fahim-tazz"},"content":"                                            + \" email/\" + VALID_EMAIL_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"fahim-tazz"},"content":"                                            + \" address/\" + VALID_ADDRESS_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"fahim-tazz"},"content":"            );","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"fahim-tazz"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"fahim-tazz"},"content":"            //The above command will not throw any ParseException.","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"fahim-tazz"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"fahim-tazz"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"fahim-tazz"},"content":"        //Add 4 homeworks","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"fahim-tazz"},"content":"        for (int i \u003d 1; i \u003c 5; i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"fahim-tazz"},"content":"            String input \u003d \"new-homework\"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"fahim-tazz"},"content":"                    + \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"fahim-tazz"},"content":"                    + \" homework/\" + \"Biology Chapter \" + i","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"fahim-tazz"},"content":"                    + \" deadline/\" + VALID_DEADLINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"fahim-tazz"},"content":"            try {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"fahim-tazz"},"content":"                mainParser.parseCommand(input);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"fahim-tazz"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"fahim-tazz"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"fahim-tazz"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"fahim-tazz"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"fahim-tazz"},"content":"        //Negative index","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/-1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"fahim-tazz"},"content":"        //Zero index","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/0\";","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"fahim-tazz"},"content":"        //Non-numeric index","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"fahim-tazz"},"content":"        String input3 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/abc\";","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input3, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"fahim-tazz":79}},{"path":"src/test/java/seedu/address/logic/parser/homework/UpdateHomeworkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"fahim-tazz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"fahim-tazz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.commands.homework.UpdateHomeworkCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"fahim-tazz"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"fahim-tazz"},"content":"public class UpdateHomeworkCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"fahim-tazz"},"content":"    private UpdateHomeworkCommandParser parser \u003d new UpdateHomeworkCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"    private AddressBookParser mainParser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_compulsoryArgsNotPresent_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"fahim-tazz"},"content":"        //Index missing","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"fahim-tazz"},"content":"        String input1 \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"fahim-tazz"},"content":"                + \" homework/Maths\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"fahim-tazz"},"content":"        String expected1 \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"fahim-tazz"},"content":"                                        UpdateHomeworkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input1, expected1);","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"fahim-tazz"},"content":"        //Index missing","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"fahim-tazz"},"content":"        String input2 \u003d \" index/1\"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"fahim-tazz"},"content":"                + \" homework/Maths\";","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"fahim-tazz"},"content":"        String expected2 \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"fahim-tazz"},"content":"                                        UpdateHomeworkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input2, expected2);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"fahim-tazz"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"fahim-tazz"},"content":"    public void parse_allOptionalArgsAbsent_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"fahim-tazz"},"content":"        String input \u003d \" name/\" + VALID_NAME_AMY","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"fahim-tazz"},"content":"                + \" index/1\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"fahim-tazz"},"content":"        String expected \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"fahim-tazz"},"content":"                                        UpdateHomeworkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"fahim-tazz"},"content":"        assertParseFailure(parser, input, expected);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"fahim-tazz"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"fahim-tazz"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"fahim-tazz":44}},{"path":"src/test/java/seedu/address/logic/parser/homework/ViewHomeworkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fahim-tazz"},"content":"package seedu.address.logic.parser.homework;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.homework.ViewHomeworkCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.HomeworkIsCompletePredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.NamePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"fahim-tazz"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"class ViewHomeworkCommandParserTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private ViewHomeworkCommandParser parser \u003d new ViewHomeworkCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    public void parse_validArgsWithMultipleKeywords_returnsViewHomeworkCommand() throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"        String args \u003d \" name/alice name/bob name/charlie \" + PREFIX_STATUS + \" completed\";","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e names \u003d List.of(\"alice\", \"bob\", \"charlie\");","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        ViewHomeworkCommand expectedCommand \u003d new ViewHomeworkCommand(names, new NamePredicate(","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"                List.of(\"alice\", \"bob\", \"charlie\")), new HomeworkIsCompletePredicate(true), false);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedCommand, new ViewHomeworkCommandParser().parse(args));","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    public void parse_validArgsWithCompletedStatus_returnsViewHomeworkCommand() throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        String args \u003d \" \" + PREFIX_STATUS + \" completed\";","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e names \u003d List.of(\"alice\", \"bob\", \"charlie\");","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        ViewHomeworkCommand expectedCommand \u003d new ViewHomeworkCommand(names, PREDICATE_SHOW_ALL_STUDENTS,","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"                new HomeworkIsCompletePredicate(true), true);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedCommand, new ViewHomeworkCommandParser().parse(args));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    public void parse_validArgsWithIncompleteStatus_returnsViewHomeworkCommand() throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        String args \u003d \" \" + PREFIX_STATUS + \" pending\";","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        List\u003cString\u003e names \u003d List.of(\"alice\", \"bob\", \"charlie\");","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        ViewHomeworkCommand expectedCommand \u003d new ViewHomeworkCommand(names, PREDICATE_SHOW_ALL_STUDENTS,","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"                new HomeworkIsCompletePredicate(false), true);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedCommand, new ViewHomeworkCommandParser().parse(args));","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"fahim-tazz":3,"NBQian":7,"Yufannnn":37}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"        private final ObservableList\u003cStudent\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"        AddressBookStub(Collection\u003cStudent\u003e persons) {","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"        public ObservableList\u003cStudent\u003e getPersonList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Yufannnn":14,"-":88}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Yufannnn":8,"-":124}},{"path":"src/test/java/seedu/address/model/student/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Yufannnn":1,"-":35}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Yufannnn":1,"-":67}},{"path":"src/test/java/seedu/address/model/student/ExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"class ExamTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_validInputs_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 14, 59);","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        Exam exam \u003d new Exam(\"Midterm\", startTime, endTime, 0.4, grade);","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(\"Midterm\", exam.getDescription());","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(80, exam.getGrade().getScore());","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(100, exam.getGrade().getFullMarks());","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(80.0, exam.getGrade().getPercentageScore());","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_startTimeAfterEndTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 12, 59);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"szejiancheng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Exam(\"Midterm\", startTime, endTime, 40d, null));","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_invalidWeightage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 14, 59);","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"szejiancheng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Exam(\"Midterm\", startTime, endTime, 104d, null));","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_invalidWeightage2_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 14, 59);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                new Exam(\"Midterm\", startTime, endTime, -0.4, null));","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    //    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    //    public void constructor_upcomingExamWithGrade_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"    //        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"    //        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 14, 59);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"    //        Grade grade \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"    //        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"    //                new Exam(\"Midterm\", startTime, endTime, 0.4, grade));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"    //    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"    //","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"    //    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    //    public void constructor_absentExamWithGrade_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"    //        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"    //        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 14, 59);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"    //        Grade grade \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"    //        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"    //                new Exam(\"Midterm\", startTime, endTime, 0.4, grade));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"    //    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"    //","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"    //    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"    //    public void constructor_finishedExamWithoutGrade_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"    //        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"    //        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 14, 59);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"    //        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"    //                new Exam(\"Midterm\", startTime, endTime, 0.4, null));","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"    //    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_finishedExamWithGrade_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2023, 3, 31, 13, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2023, 3, 31, 14, 59);","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        Exam exam \u003d new Exam(\"Midterm\", startTime, endTime, 0.4, grade);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"        assertNotNull(exam.getGrade());","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"szejiancheng":2,"NBQian":28,"Yufannnn":50}},{"path":"src/test/java/seedu/address/model/student/GradeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"public class GradeTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_validScoreAndFullMarks_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(80, grade.getScore());","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(100, grade.getFullMarks());","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(80.0, grade.getPercentageScore());","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_invalidScore_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Grade(-10, 100));","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_scoreGreaterThanFullMarks_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Grade(110, 100));","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(grade, grade);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    public void equals_differentObjectsWithSameFields_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        Grade grade1 \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        Grade grade2 \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(grade1, grade2);","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public void equals_differentObjectsWithDifferentFields_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        Grade grade1 \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        Grade grade2 \u003d new Grade(70, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        assertNotEquals(grade1, grade2);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    public void toString_validGrade_returnsFormattedString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(80, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        String expectedString \u003d \"80.00 / 100.00 (80.00%)\";","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedString, grade.toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    public void equals_differentScore_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        Grade grade1 \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        Grade grade2 \u003d new Grade(70, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        assertNotEquals(grade1, grade2);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    public void equals_differentFullMarks_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        Grade grade1 \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        Grade grade2 \u003d new Grade(50, 200);","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        assertNotEquals(grade1, grade2);","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    public void equals_differentTypes_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        String notGrade \u003d \"not a grade\";","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        assertNotEquals(grade, notGrade);","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    public void hashCode_equalGrades_returnsEqualHashCodes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        Grade grade1 \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        Grade grade2 \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(grade1.hashCode(), grade2.hashCode());","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    public void hashCode_differentScores_returnsDifferentHashCodes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        Grade grade1 \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        Grade grade2 \u003d new Grade(70, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        assertNotEquals(grade1.hashCode(), grade2.hashCode());","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    public void hashCode_differentFullMarks_returnsDifferentHashCodes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"        Grade grade1 \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"        Grade grade2 \u003d new Grade(50, 200);","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"        assertNotEquals(grade1.hashCode(), grade2.hashCode());","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"    public void getPercentageScore_maxScore_returns100() {","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(100, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(100, grade.getPercentageScore(), 0.0001);","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    public void getPercentageScore_halfScore_returns50() {","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"        Grade grade \u003d new Grade(50, 100);","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(50, grade.getPercentageScore(), 0.0001);","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Yufannnn":109}},{"path":"src/test/java/seedu/address/model/student/HomeworkIsCompletePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"class HomeworkIsCompletePredicateTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    public void test_isComplete_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"        HomeworkIsCompletePredicate predicate \u003d new HomeworkIsCompletePredicate(true);","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"CS2103T Quiz\", LocalDateTime.parse(\"2021-03-31T23:59:00\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(predicate.test(homework));","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    public void test_isComplete_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"        HomeworkIsCompletePredicate predicate \u003d new HomeworkIsCompletePredicate(true);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"CS2103T Quiz\", LocalDateTime.parse(\"2021-03-31T23:59:00\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(predicate.test(homework));","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    public void test_isNotComplete_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        HomeworkIsCompletePredicate predicate \u003d new HomeworkIsCompletePredicate(false);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"CS2103T Quiz\", LocalDateTime.parse(\"2021-03-31T23:59:00\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(predicate.test(homework));","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    public void test_isNotComplete_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        HomeworkIsCompletePredicate predicate \u003d new HomeworkIsCompletePredicate(false);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"CS2103T Quiz\", LocalDateTime.parse(\"2021-03-31T23:59:00\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(predicate.test(homework));","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Yufannnn":41}},{"path":"src/test/java/seedu/address/model/student/HomeworkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"class HomeworkTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Homework(null, deadline));","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_nullDeadline_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Homework(\"Math homework\", null));","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    public void getDescription_validDescription_returnsDescription() {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(\"Math homework\", homework.getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public void getDeadline_validDeadline_returnsDeadline() {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(deadline, homework.getDeadline());","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    public void getStatus_defaultStatus_returnsPending() {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(Homework.Status.PENDING, homework.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    public void isCompleted_completedStatus_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(homework.isCompleted());","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    public void markAsDone_setStatusToCompleted_statusIsCompleted() {","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(Homework.Status.COMPLETED, homework.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    public void markAsNotDone_setStatusToPending_statusIsPending() {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsUndone();","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(Homework.Status.PENDING, homework.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    public void getStatusTag_pendingStatus_returnsOpenBracket() {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(\"[ ]\", homework.getStatusTag());","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"    public void getStatusTag_completedStatus_returnsClosedBracket() {","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 31, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Math homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(\"[X]\", homework.getStatusTag());","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"    public void equals_sameDescriptionDifferentDeadline_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline1 \u003d LocalDateTime.of(2023, 3, 15, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline2 \u003d LocalDateTime.of(2023, 3, 16, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        Homework homework1 \u003d new Homework(\"Complete Math Homework\", deadline1);","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"        Homework homework2 \u003d new Homework(\"Complete Math Homework\", deadline2);","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(homework1.equals(homework2));","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"    public void isSameHomework_sameObject_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 15, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Complete Math Homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(homework.isSameHomework(homework));","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"    public void isCompleted_homeworkMarkedAsDone_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 15, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Complete Math Homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(homework.isCompleted());","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"    public void markAsNotDone_homeworkMarkedAsDoneThenMarkedAsNotDone_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 15, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Complete Math Homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsUndone();","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(homework.isCompleted());","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"    public void getStatusTag_homeworkCompleted_returnsX() {","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"        LocalDateTime deadline \u003d LocalDateTime.of(2023, 3, 15, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"        Homework homework \u003d new Homework(\"Complete Math Homework\", deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"        homework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(homework.getStatusTag(), \"[X]\");","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Yufannnn":125}},{"path":"src/test/java/seedu/address/model/student/LessonBelongsToDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class LessonBelongsToDatePredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    private final LessonBelongsToDatePredicate predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public LessonBelongsToDatePredicateTest() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        predicate \u003d new LessonBelongsToDatePredicate(LocalDate.of(2022, 12, 31));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    public void test_dateMatches_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        // Lesson on the same date as target date","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", LocalDateTime.of(2022, 12, 31,","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"            8, 0), LocalDateTime.of(2022, 12, 31, 10, 0));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        assertTrue(predicate.test(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        // Lesson on a different time on the same date as target date","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", LocalDateTime.of(2022, 12, 31,","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"            12, 0), LocalDateTime.of(2022, 12, 31, 14, 0));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        assertTrue(predicate.test(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    public void test_dateNotMatches_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        // Lesson on a different date","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", LocalDateTime.of(2023, 1, 1,","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"            8, 0), LocalDateTime.of(2023, 1, 1, 10, 0));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        assertFalse(predicate.test(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        // Lesson on a different time on a different date","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", LocalDateTime.of(2022, 12, 30,","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"            12, 0), LocalDateTime.of(2022, 12, 30, 14, 0));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        assertFalse(predicate.test(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"NBQian":44}},{"path":"src/test/java/seedu/address/model/student/LessonDonePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"public class LessonDonePredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    private final Lesson lesson1 \u003d new Lesson(\"Maths\", LocalDateTime.of(2022, 1, 1, 12, 0),","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"        LocalDateTime.of(2022, 1, 1, 13, 0));","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    private final Lesson lesson2 \u003d new Lesson(\"Science\", LocalDateTime.of(2023, 9, 15, 9, 0),","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        LocalDateTime.of(2023, 9, 15, 10, 0));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    public void test_lessonDonePredicate_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        // lesson has already started","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        LessonDonePredicate predicate \u003d new LessonDonePredicate(\"done\");","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        assertTrue(predicate.test(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        // lesson has not started yet","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        predicate \u003d new LessonDonePredicate(\"not done\");","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        assertTrue(predicate.test(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    public void test_lessonDonePredicate_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        // lesson has not started yet","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        LessonDonePredicate predicate \u003d new LessonDonePredicate(\"done\");","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        assertFalse(predicate.test(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        // lesson has already ended","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        predicate \u003d new LessonDonePredicate(\"not done\");","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        assertFalse(predicate.test(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"NBQian":38}},{"path":"src/test/java/seedu/address/model/student/LessonSubjectPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class LessonSubjectPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public void testLessonSubjectPredicate_matchesSubject_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        // Set up test data","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        Lesson lesson \u003d new Lesson(\"Maths Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        LessonSubjectPredicate predicate \u003d new LessonSubjectPredicate(\"Maths\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        // Test predicate","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"        boolean result \u003d predicate.test(lesson);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        // Verify result","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        assertTrue(result);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    public void testLessonSubjectPredicate_doesNotMatchSubject_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        // Set up test data","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        Lesson lesson \u003d new Lesson(\"Science Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        LessonSubjectPredicate predicate \u003d new LessonSubjectPredicate(\"Maths\");","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        // Test predicate","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        boolean result \u003d predicate.test(lesson);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        // Verify result","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        assertFalse(result);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"    public void testLessonSubjectPredicate_partialMatch_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"        // Set up test data","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        Lesson lesson \u003d new Lesson(\"Maths 101 Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"        LessonSubjectPredicate predicate \u003d new LessonSubjectPredicate(\"Maths\");","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        // Test predicate","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        boolean result \u003d predicate.test(lesson);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        // Verify result","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"        assertTrue(result);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"NBQian":59}},{"path":"src/test/java/seedu/address/model/student/LessonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"public class LessonTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"        LocalDateTime start1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        LocalDateTime end1 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        LocalDateTime start2 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        LocalDateTime end2 \u003d LocalDateTime.of(2022, 3, 6, 13, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Maths Lesson\", start1, end1);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Science Lesson\", start1, end1);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        Lesson lesson3 \u003d new Lesson(\"Maths Lesson\", start2, end2);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        Lesson lesson4 \u003d new Lesson(\"Maths Lesson\", start1, end1);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.equals(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.equals(lesson4));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        // different titles -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        // different start times -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(lesson3));","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"    public void isSameTimeLesson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"        LocalDateTime start1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        LocalDateTime end1 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"        LocalDateTime start2 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"        LocalDateTime end2 \u003d LocalDateTime.of(2022, 3, 6, 13, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        LocalDateTime start3 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        LocalDateTime end3 \u003d LocalDateTime.of(2022, 3, 6, 14, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        LocalDateTime start4 \u003d LocalDateTime.of(2022, 3, 6, 8, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"        LocalDateTime end4 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Maths Lesson\", start1, end1);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Science Lesson\", start2, end2);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"        Lesson lesson3 \u003d new Lesson(\"History Lesson\", start3, end3);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        Lesson lesson4 \u003d new Lesson(\"Geography Lesson\", start4, end4);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.isSameTimeLesson(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.isSameTimeLesson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"        // lessons with different timeslots -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.isSameTimeLesson(lesson3));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.isSameTimeLesson(lesson4));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"        // lessons with overlapping timeslots -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.isSameTimeLesson(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.isSameTimeLesson(new Lesson(\"Maths Lesson\", start2, end3)));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.isSameTimeLesson(new Lesson(\"Maths Lesson\", start4, end1)));","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"    public void constructor_nullTitle_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(null, LocalDateTime.now(), LocalDateTime.now()));","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"    public void constructor_nullStartTime_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(\"Math Lesson\", null, LocalDateTime.now()));","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"    public void constructor_nullEndTime_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(\"Math Lesson\", LocalDateTime.now(), null));","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"    public void isSameTimeLesson_sameLesson_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.isSameTimeLesson(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"    public void isSameTimeLesson_differentLessonSameTime_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson1.isSameTimeLesson(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"        assertTrue(lesson2.isSameTimeLesson(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"    public void isSameTimeLesson_differentLessonDifferentTime_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2022, 3, 6, 13, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", startTime2, endTime2);","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.isSameTimeLesson(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson2.isSameTimeLesson(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"    public void equals_sameLesson_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"        assertEquals(lesson1, lesson2);","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"NBQian"},"content":"        assertEquals(lesson2, lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"NBQian"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"NBQian"},"content":"    public void equals_differentTitle_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Science Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson2.equals(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"    public void equals_differentStartTime_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2022, 3, 7, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2022, 3, 7, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Math Lesson\", startTime2, endTime2);","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson2.equals(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"    public void equals_differentEndTime_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Math Lesson\", startTime2, endTime2);","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson1.equals(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"NBQian"},"content":"        assertFalse(lesson2.equals(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"NBQian"},"content":"    public void toString_validLesson_returnsExpectedString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"NBQian"},"content":"        Lesson lesson \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"NBQian"},"content":"        String expectedString \u003d \"Math Lesson, starts: 2022-03-06 10:00, ends: 2022-03-06 11:00\";","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"NBQian"},"content":"        assertEquals(expectedString, lesson.toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"NBQian"},"content":"    public void equals_dameEndTime_returnTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Math Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"NBQian"},"content":"        assertEquals(lesson1, lesson2);","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"NBQian"},"content":"        assertEquals(lesson2, lesson1);","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"NBQian":205}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Yufannnn":9,"-":66}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Yufannnn":1,"-":39}},{"path":"src/test/java/seedu/address/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Yufannnn":1,"-":39}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"public class StudentTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Yufannnn":23,"-":68}},{"path":"src/test/java/seedu/address/model/student/UniqueHomeworkListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.exceptions.EntryNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"public class UniqueHomeworkListTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private UniqueHomeworkList uniqueHomeworkList;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"    private Homework homework1;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    private Homework homework2;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"        homework1 \u003d new Homework(\"Complete math assignment\", LocalDateTime.of(2022, 4, 1, 23, 59));","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"        homework2 \u003d new Homework(\"Write an essay\", LocalDateTime.of(2022, 5, 15, 12, 0));","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    public void contains_homeworkNotInList_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(uniqueHomeworkList.contains(homework1));","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    public void contains_homeworkInList_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(uniqueHomeworkList.contains(homework1));","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    public void contains_homeworkWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        Homework editedHomework \u003d new Homework(\"Complete math assignment\", LocalDateTime.of(2022, 4, 1, 23, 59));","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(uniqueHomeworkList.contains(editedHomework));","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    public void add_nullHomework_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueHomeworkList.addHomework(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    public void add_duplicateHomework_throwsDuplicateHomeworkException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e uniqueHomeworkList.addHomework(homework1));","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_nullTargetHomework_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueHomeworkList.setHomework(null, homework1));","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_nullEditedHomework_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueHomeworkList.setHomework(homework1, null));","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_targetHomeworkNotInList_throwsHomeworkNotFoundException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"szejiancheng"},"content":"        assertThrows(EntryNotFoundException.class, () -\u003e uniqueHomeworkList.setHomework(homework1, homework2));","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_editedHomeworkIsSameHomework_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.setHomework(homework1, homework1);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"        UniqueHomeworkList expectedUniqueHomeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueHomeworkList, uniqueHomeworkList);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_editedHomeworkHasSameIdentity_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"        Homework editedHomework \u003d new Homework(\"Complete math assignment\", LocalDateTime.of(2022, 4, 1, 23, 59));","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.setHomework(homework1, editedHomework);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        UniqueHomeworkList expectedUniqueHomeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueHomeworkList.addHomework(editedHomework);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueHomeworkList, uniqueHomeworkList);","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"    public void remove_homeworkInList_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.removeHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"        UniqueHomeworkList expectedUniqueHomeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueHomeworkList, uniqueHomeworkList);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"    public void remove_homeworkNotInList_throwsHomeworkNotFoundException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(EntryNotFoundException.class, () -\u003e uniqueHomeworkList.removeHomework(homework1));","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_editedHomeworkHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.setHomework(homework1, homework2);","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"        UniqueHomeworkList expectedUniqueHomeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueHomeworkList.addHomework(homework2);","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueHomeworkList, uniqueHomeworkList);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_editedHomeworkHasDifferentDeadline_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"        Homework editedHomework \u003d new Homework(\"Complete math assignment\", LocalDateTime.of(2022, 5, 1, 23, 59));","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.setHomework(homework1, editedHomework);","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"        UniqueHomeworkList expectedUniqueHomeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueHomeworkList.addHomework(editedHomework);","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueHomeworkList, uniqueHomeworkList);","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"    public void setHomework_editedHomeworkHasDifferentDescription_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.addHomework(homework1);","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"        Homework editedHomework \u003d new Homework(\"Do physics homework\", LocalDateTime.of(2022, 4, 1, 23, 59));","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"        uniqueHomeworkList.setHomework(homework1, editedHomework);","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"        UniqueHomeworkList expectedUniqueHomeworkList \u003d new UniqueHomeworkList();","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueHomeworkList.addHomework(editedHomework);","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueHomeworkList, uniqueHomeworkList);","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"szejiancheng":3,"Yufannnn":130}},{"path":"src/test/java/seedu/address/model/student/UniqueLessonsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import seedu.address.model.student.exceptions.DuplicateLessonException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"public class UniqueLessonsListTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    public void addLesson_nullLesson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueLessonsList.add(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    public void addLesson_duplicateLesson_throwsDuplicateLessonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Maths Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"Maths Lesson\", startTime, endTime);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"        assertThrows(DuplicateLessonException.class, () -\u003e uniqueLessonsList.add(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    public void containsLesson_nullLesson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueLessonsList.contains(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"    public void containsLesson_lessonNotInList_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2022, 3, 6, 13, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", startTime2, endTime2);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        assertFalse(uniqueLessonsList.contains(lesson2));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    public void containsLesson_lessonInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2022, 3, 6, 13, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", startTime2, endTime2);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        assertTrue(uniqueLessonsList.contains(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"    public void removeLesson_validLesson_removesLessonFromList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        assertTrue(uniqueLessonsList.contains(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.remove(lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        assertFalse(uniqueLessonsList.contains(lesson1));","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"    public void size_addAndRemoveLessons_correctSize() {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2022, 3, 6, 13, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", startTime2, endTime2);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime3 \u003d LocalDateTime.of(2022, 3, 6, 14, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime3 \u003d LocalDateTime.of(2022, 3, 6, 15, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"        Lesson lesson3 \u003d new Lesson(\"Science Lesson\", startTime3, endTime3);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson2);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson3);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.remove(lesson2);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"        assertEquals(2, uniqueLessonsList.size());","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"    public void getSortedLessonsList_addLessons_returnsSortedList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime1 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime1 \u003d LocalDateTime.of(2022, 3, 6, 11, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"        Lesson lesson1 \u003d new Lesson(\"Math Lesson\", startTime1, endTime1);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime2 \u003d LocalDateTime.of(2022, 3, 6, 12, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime2 \u003d LocalDateTime.of(2022, 3, 6, 13, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"        Lesson lesson2 \u003d new Lesson(\"English Lesson\", startTime2, endTime2);","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"        LocalDateTime startTime3 \u003d LocalDateTime.of(2022, 3, 6, 9, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"        LocalDateTime endTime3 \u003d LocalDateTime.of(2022, 3, 6, 10, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"        Lesson lesson3 \u003d new Lesson(\"Science Lesson\", startTime3, endTime3);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"        UniqueLessonsList uniqueLessonsList \u003d new UniqueLessonsList();","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson1);","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson2);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"        uniqueLessonsList.add(lesson3);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"        assertEquals(lesson3, uniqueLessonsList.getSortedLessonsList().get(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"        assertEquals(lesson1, uniqueLessonsList.getSortedLessonsList().get(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"        assertEquals(lesson2, uniqueLessonsList.getSortedLessonsList().get(2));","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"NBQian":118}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"                .build();","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setPerson(null, ALICE));","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setPerson(ALICE, null));","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setPerson(ALICE, ALICE));","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.setPerson(ALICE, ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Yufannnn"},"content":"                .build();","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"Yufannnn"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.setPerson(ALICE, BOB);","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"Yufannnn"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setPerson(ALICE, BOB));","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"Yufannnn"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"Yufannnn"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"Yufannnn"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"Yufannnn"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"Yufannnn"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2023-02-24"},{"lineNumber":147,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"Yufannnn"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"Yufannnn"},"content":"        uniqueStudentList.setStudents(personList);","lastModifiedDate":"2023-02-24"},{"lineNumber":154,"author":{"gitId":"Yufannnn"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"Yufannnn"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"Yufannnn"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"Yufannnn"},"content":"        List\u003cStudent\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicatePersons));","lastModifiedDate":"2023-02-24"},{"lineNumber":163,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"Yufannnn"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"Yufannnn"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Yufannnn":170}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedHomeworkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework.Status;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.HomeworkBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"public class JsonAdaptedHomeworkTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private static final Homework HOMEWORK_ONE \u003d new HomeworkBuilder()","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"            .withDescription(\"Complete maths homework\")","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"            .withDeadline(LocalDateTime.of(2022, 3, 5, 23, 59))","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"            .build();","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private static final Homework HOMEWORK_TWO \u003d new HomeworkBuilder()","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"            .withDescription(\"Submit science report\")","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"            .withDeadline(LocalDateTime.of(2022, 4, 10, 16, 0))","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"            .withStatus(Status.COMPLETED)","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"            .build();","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_validHomeworkDetails_success() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomework \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(HOMEWORK_ONE.getDescription(), adaptedHomework.getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(HOMEWORK_ONE.getDeadline(), adaptedHomework.getDeadline());","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(HOMEWORK_ONE.getStatus(), adaptedHomework.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    public void toModelType_validHomeworkDetails_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomework \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(HOMEWORK_ONE, adaptedHomework.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    public void toModelType_completedStatus_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomework \u003d new JsonAdaptedHomework(HOMEWORK_TWO);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(HOMEWORK_TWO, adaptedHomework.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomework \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(adaptedHomework, adaptedHomework);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    public void equals_equalObjects_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomeworkOne \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomeworkTwo \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(adaptedHomeworkOne, adaptedHomeworkTwo);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"    public void equals_differentObjects_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomeworkOne \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomeworkTwo \u003d new JsonAdaptedHomework(HOMEWORK_TWO);","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        assertNotEquals(adaptedHomeworkOne, adaptedHomeworkTwo);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"    public void hashCode_equalObjects_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomeworkOne \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomeworkTwo \u003d new JsonAdaptedHomework(HOMEWORK_ONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        assertEquals(adaptedHomeworkOne.hashCode(), adaptedHomeworkTwo.hashCode());","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomework \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"                new JsonAdaptedHomework(null, HOMEWORK_ONE.getDeadline(), HOMEWORK_ONE.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, adaptedHomework::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    public void constructor_nullDeadline_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedHomework adaptedHomework \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"                new JsonAdaptedHomework(HOMEWORK_ONE.getDescription(), null, HOMEWORK_ONE.getStatus());","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"        assertThrows(NullPointerException.class, adaptedHomework::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Yufannnn":87}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"    private static final List\u003cJsonAdaptedHomework\u003e VALID_HOMEWORK_LIST \u003d BENSON.getHomeworkList().stream()","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"            .map(JsonAdaptedHomework::new)","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"    private static final List\u003cJsonAdaptedLesson\u003e VALID_LESSON_LIST \u003d BENSON.getLessonsList().stream()","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        .map(JsonAdaptedLesson::new)","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    private static final List\u003cJsonAdaptedExam\u003e VALID_EXAM_LIST \u003d BENSON.getExamsList().stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"szejiancheng"},"content":"            .map(JsonAdaptedExam::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"szejiancheng"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"szejiancheng"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"szejiancheng"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"szejiancheng"},"content":"                        VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"szejiancheng"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"szejiancheng"},"content":"                        VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"szejiancheng"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Yufannnn"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"szejiancheng"},"content":"                        INVALID_ADDRESS, VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"szejiancheng"},"content":"                VALID_TAGS, VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"Yufannnn"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"Yufannnn"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"szejiancheng"},"content":"                        VALID_HOMEWORK_LIST, VALID_LESSON_LIST, VALID_EXAM_LIST);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"szejiancheng":11,"NBQian":3,"Yufannnn":27,"-":88}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.HOON;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.IDA;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yufannnn":6,"-":104}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yufannnn":2,"-":45}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":3,"-":31}},{"path":"src/test/java/seedu/address/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"    private EditCommand.EditStudentDescriptor descriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setAddress(student.getAddress());","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Address} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"     * that we are building.","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    public EditCommand.EditStudentDescriptor build() {","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Yufannnn"},"content":"        return descriptor;","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Yufannnn":88}},{"path":"src/test/java/seedu/address/testutil/HomeworkBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yufannnn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Yufannnn"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Yufannnn"},"content":" * A utility class to help with building Homework objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Yufannnn"},"content":" * Example usage: {@code Homework homework \u003d new HomeworkBuilder() }","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Yufannnn"},"content":"public class HomeworkBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Complete math worksheet\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"    public static final LocalDateTime DEFAULT_DEADLINE \u003d LocalDateTime.of(2023, 3, 10, 23, 59);","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Yufannnn"},"content":"    public static final Homework.Status DEFAULT_STATUS \u003d Homework.Status.PENDING;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Yufannnn"},"content":"    private String description;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Yufannnn"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Yufannnn"},"content":"    private Homework.Status status;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code HomeworkBuilder} with the default details.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkBuilder() {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Yufannnn"},"content":"        deadline \u003d DEFAULT_DEADLINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"        status \u003d DEFAULT_STATUS;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"     * Initializes the HomeworkBuilder with the data of {@code homeworkToCopy}.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkBuilder(Homework homeworkToCopy) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Yufannnn"},"content":"        description \u003d homeworkToCopy.getDescription();","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"        deadline \u003d homeworkToCopy.getDeadline();","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Yufannnn"},"content":"        status \u003d homeworkToCopy.getStatus();","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Description} of the {@code Homework} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"     * @param description The description of the homework.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkBuilder withDescription(String description) {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Deadline} of the {@code Homework} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Yufannnn"},"content":"     * @param deadline The deadline of the homework.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkBuilder withDeadline(LocalDateTime deadline) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Status} of the {@code Homework} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"     * @param status The status of the homework.","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Yufannnn"},"content":"    public HomeworkBuilder withStatus(Homework.Status status) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Yufannnn"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Yufannnn"},"content":"     * Builds a {@code Homework} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Yufannnn"},"content":"     * @return The {@code Homework} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Yufannnn"},"content":"    public Homework build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Yufannnn"},"content":"        Homework newHomework \u003d new Homework(description, deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"        // If the status is completed, mark the homework as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Yufannnn"},"content":"        if (status \u003d\u003d Homework.Status.COMPLETED) {","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Yufannnn"},"content":"            newHomework.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Yufannnn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Yufannnn"},"content":"        return newHomework;","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Yufannnn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Yufannnn":83}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"Yufannnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"Yufannnn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Exam;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Homework;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Lesson;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"szejiancheng"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"Yufannnn"},"content":"public class StudentBuilder {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    private List\u003cHomework\u003e homeworkList;","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    private List\u003cLesson\u003e lessonList;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"szejiancheng"},"content":"    private List\u003cExam\u003e examList;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder() {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"Yufannnn"},"content":"        homeworkList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        lessonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"szejiancheng"},"content":"        examList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Yufannnn"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Yufannnn"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Yufannnn"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Yufannnn"},"content":"        address \u003d studentToCopy.getAddress();","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Yufannnn"},"content":"        homeworkList \u003d new ArrayList\u003c\u003e(studentToCopy.getHomeworkList());","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"        lessonList \u003d new ArrayList\u003c\u003e(studentToCopy.getLessonsList());","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"Yufannnn"},"content":"        examList \u003d new ArrayList\u003c\u003e(studentToCopy.getExamsList());","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder withAddress(String address) {","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"Yufannnn"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Yufannnn"},"content":"     * Sets the {@code Homework} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Yufannnn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Yufannnn"},"content":"     * @param homeworkList The homework list of the student.","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Yufannnn"},"content":"     *                     {@code homeworkList} is a list of {@code Homework} objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Yufannnn"},"content":"    public StudentBuilder withHomeworkList(List\u003cHomework\u003e homeworkList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Yufannnn"},"content":"        this.homeworkList \u003d homeworkList;","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Yufannnn"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Yufannnn"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Yufannnn"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"     * Sets the {@code Lesson} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"    public StudentBuilder withLessonList(List\u003cLesson\u003e lessonList) {","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"        this.lessonList \u003d lessonList;","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"        return this;","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"Yufannnn"},"content":"     * Builds a student with the given details.","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Yufannnn"},"content":"     * @return a student with the given details.","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Yufannnn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Yufannnn"},"content":"    public Student build() {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"szejiancheng"},"content":"        return new Student(name, phone, email, address, tags, homeworkList, lessonList, examList);","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"szejiancheng":11,"NBQian":11,"Yufannnn":36,"-":73}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"public class StudentUtil {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"    public static String getAddCommand(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"Yufannnn"},"content":"    public static String getPersonDetails(Student person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"Yufannnn"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    public static String getEditPersonDescriptorDetails(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Yufannnn":7,"-":55}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Yufannnn"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    public static Student getPerson(Model model, Index index) {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Yufannnn"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yufannnn":5,"-":50}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"Yufannnn"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Yufannnn"},"content":"public class TypicalStudents {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"Yufannnn"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"Yufannnn"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"Yufannnn"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Yufannnn"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"Yufannnn"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"Yufannnn"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Yufannnn"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"Yufannnn"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"Yufannnn"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"Yufannnn"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"Yufannnn"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"Yufannnn"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"Yufannnn"},"content":"        for (Student person : getTypicalPersons()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Yufannnn"},"content":"            ab.addStudent(person);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"Yufannnn"},"content":"    public static List\u003cStudent\u003e getTypicalPersons() {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Yufannnn":17,"-":59}}]
