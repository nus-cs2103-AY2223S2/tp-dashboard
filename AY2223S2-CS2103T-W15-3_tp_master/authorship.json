[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"# CS2103T-W15-3 tP : Pied Piper ","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"Pied Piper is a task management app to help project team leaders stay organized and focused on their priorities. With a clean and intuitive interface, this app will include features that will allow users to easily create tasks, assign them to team members, and set due dates. Whether you\u0027re managing personal projects or collaborating with a team, Pied Piper can help streamline your workflow and keep you on track.","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W15-3/tp/actions)","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PawanPatil19":10,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"### Cyrus Krispin Vijikumar","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cimg src\u003d\"images/cyrus-krispin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"[[github](https://github.com/cyrus-krispin)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"[[portfolio](team/cyrus-krispin.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"### Lim Xuan Zheng","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"\u003cimg src\u003d\"images/zhengsterz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"[[github](http://github.com/zhengsterz)]","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"[[portfolio](team/zhengsterz.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"* Role: Team Member","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"### Pawan Kishor Patil","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"\u003cimg src\u003d\"images/pawanpatil19.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"[[github](http://github.com/PawanPatil19)]","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"[[portfolio](team/pawanpatil19.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"* Role: Team Member","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"### Jerome Seet","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"\u003cimg src\u003d\"images/yaladah.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"[[github](http://github.com/yaldah)]","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"[[portfolio](team/yaladah.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"* Role: Member","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"### Jereld Lim","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"\u003cimg src\u003d\"images/jereldlimjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"[[github](http://github.com/jereldlimjy)]","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"[[portfolio](team/jereldlimjy.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"* Role: Team Member","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"zhengsterz":6,"Yaladah":6,"-":33,"PawanPatil19":6,"jereldlimjy":6,"Cyrus-Krispin":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"## **Introduction**","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"Pied Piper is a desktop application for managing projects with a significant level of complexity. It functions","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"via a Command-Line Interface (CLI) that allows more efficient management of events.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"zhengsterz"},"content":"- NUS Computing Students","lastModifiedDate":"2023-03-07"},{"lineNumber":267,"author":{"gitId":"zhengsterz"},"content":"- has a need to manage a project with significant complexity","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"zhengsterz"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-03-07"},{"lineNumber":269,"author":{"gitId":"zhengsterz"},"content":"- can type fast","lastModifiedDate":"2023-03-07"},{"lineNumber":270,"author":{"gitId":"zhengsterz"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-03-07"},{"lineNumber":271,"author":{"gitId":"zhengsterz"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-03-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"zhengsterz"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"zhengsterz"},"content":"- Adding of various tasks with descriptions.","lastModifiedDate":"2023-03-07"},{"lineNumber":276,"author":{"gitId":"zhengsterz"},"content":"- Get an overview via the List view so that you can find the event that you need easily.","lastModifiedDate":"2023-03-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"zhengsterz"},"content":"### User Stories","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":280,"author":{"gitId":"zhengsterz"},"content":"**Priorities**: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2023-03-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":282,"author":{"gitId":"zhengsterz"},"content":"| Priority | As a …​ | I want to …​                  | So that I can…​                                                     |","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"zhengsterz"},"content":"| -------- | ---- |-------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2023-03-07"},{"lineNumber":284,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | create tasks                  | keep track of the tasks I need to accomplish                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":285,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | delete tasks                  | remove tasks that are outdated or specified incorrectly             |","lastModifiedDate":"2023-03-07"},{"lineNumber":286,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | view each team member\u0027s tasks | have a clear and easily understandable list of what they have to do |","lastModifiedDate":"2023-03-07"},{"lineNumber":287,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | assign tasks                  | keep track of who is responsible for which task                     |","lastModifiedDate":"2023-03-07"},{"lineNumber":288,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | assign roles                  | remember the responsibilities of each member                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"zhengsterz"},"content":"(For all use cases below, the **System** is `Pied Piper` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"zhengsterz"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-03-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"zhengsterz"},"content":"2.  Pied Piper shows a list of persons","lastModifiedDate":"2023-03-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"zhengsterz"},"content":"4.  Pied Piper deletes the person","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"zhengsterz"},"content":"    * 3a1. Pied Piper shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":314,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":315,"author":{"gitId":"zhengsterz"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":316,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":317,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":318,"author":{"gitId":"zhengsterz"},"content":"**Use case: Create a task**","lastModifiedDate":"2023-03-07"},{"lineNumber":319,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":320,"author":{"gitId":"zhengsterz"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":321,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":322,"author":{"gitId":"Yaladah"},"content":"1. User requests to add a specific task in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":323,"author":{"gitId":"Yaladah"},"content":"2. Pied Piper adds the task.","lastModifiedDate":"2023-03-07"},{"lineNumber":324,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":325,"author":{"gitId":"zhengsterz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":326,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":327,"author":{"gitId":"zhengsterz"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":328,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":329,"author":{"gitId":"zhengsterz"},"content":"* 1a. The task already exists.","lastModifiedDate":"2023-03-07"},{"lineNumber":330,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":331,"author":{"gitId":"zhengsterz"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":332,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":333,"author":{"gitId":"zhengsterz"},"content":"* 1a. The given specifications are invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":334,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":335,"author":{"gitId":"zhengsterz"},"content":"    * 1a1. Pied Piper shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"Yaladah"},"content":"**Use case: Delete a task**","lastModifiedDate":"2023-03-07"},{"lineNumber":340,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":341,"author":{"gitId":"Yaladah"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":342,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":343,"author":{"gitId":"Yaladah"},"content":"1. User requests to delete a specified task in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":344,"author":{"gitId":"Yaladah"},"content":"2. Pied Piper removes the task.","lastModifiedDate":"2023-03-07"},{"lineNumber":345,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":346,"author":{"gitId":"Yaladah"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":347,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":348,"author":{"gitId":"Yaladah"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":349,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":350,"author":{"gitId":"Yaladah"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":352,"author":{"gitId":"Yaladah"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":353,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":354,"author":{"gitId":"Yaladah"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":355,"author":{"gitId":"Yaladah"},"content":"  * 1a1. Pied Piper shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":356,"author":{"gitId":"Yaladah"},"content":"  ","lastModifiedDate":"2023-03-07"},{"lineNumber":357,"author":{"gitId":"Yaladah"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"Cyrus-Krispin"},"content":"**Use Case: view tasks**","lastModifiedDate":"2023-03-07"},{"lineNumber":360,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":361,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":362,"author":{"gitId":"Cyrus-Krispin"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":363,"author":{"gitId":"Cyrus-Krispin"},"content":"1. User requests to view all tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":364,"author":{"gitId":"Cyrus-Krispin"},"content":"2. Pied Piper displays all existing tasks as a numbered list","lastModifiedDate":"2023-03-07"},{"lineNumber":365,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":366,"author":{"gitId":"Cyrus-Krispin"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":367,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":368,"author":{"gitId":"Cyrus-Krispin"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":369,"author":{"gitId":"Cyrus-Krispin"},"content":"* 1a. No existing tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":370,"author":{"gitId":"Cyrus-Krispin"},"content":"  * 1a1. Display message to user that there are no existing tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":371,"author":{"gitId":"Cyrus-Krispin"},"content":"  ","lastModifiedDate":"2023-03-07"},{"lineNumber":372,"author":{"gitId":"Cyrus-Krispin"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":374,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"PawanPatil19"},"content":"4.  The response to any use action should become visible within 2 seconds.","lastModifiedDate":"2023-03-07"},{"lineNumber":380,"author":{"gitId":"PawanPatil19"},"content":"5.  The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2023-03-07"},{"lineNumber":381,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zhengsterz":49,"Yaladah":20,"-":354,"PawanPatil19":3,"Cyrus-Krispin":14}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"Pied Piper is a task management app to help project team leaders stay organized and focused on their priorities. With a clean and intuitive interface, this app will include features that will allow users to easily create tasks, assign them to team members, and set due dates. Whether you\u0027re managing personal projects or collaborating with a team, Pied Piper can help streamline your workflow and keep you on track.","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Download the latest `piedpiper.jar` from [here](https://github.com/AY2223S2-CS2103T-W15-3/tp/releases).","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Pied Piper.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar piedpiper.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"* Words within `Curly Brackert {}` are must have parameters.","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `view`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"  e.g. if the command specifies `view 123`, it will be interpreted as `view`.","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"### Creating a deadline: `deadline task`","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"Pied Piper creates a new deadline","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"Format: `deadline task/{TASK_NAME} by/{DD/MM/YYYY}`","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"Example:","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Cyrus-Krispin"},"content":"* `deadline task/Complete Assignment by/12/09/2021`","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":"### Assigning roles to members: `role`","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Cyrus-Krispin"},"content":"Gives a role to a member","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Cyrus-Krispin"},"content":"Format: `role n/{MEMBER_NAME} r/{ROLE}`","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Cyrus-Krispin"},"content":"Example:","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Cyrus-Krispin"},"content":"* `role n/John Doe r/Leader`","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Cyrus-Krispin"},"content":"### Assigning task to member: `assign`","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"Assign a task to a person","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"Format: `assign  t/{TASK_ID} n/{MEMBER_NAME}`","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Cyrus-Krispin"},"content":"*  `assign t/1 n/John Doe`","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"### Delete a person: `delete`","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"Deletes an existing person","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"Format: `delete {MEMBER_ID}`","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"* `delete 1`","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"### Delete a task","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"Deletes an existing task","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"Format: `deletetask {TASK_ID}`","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"* `deletetask 2`","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"Cyrus-Krispin"},"content":"### View tasks: `view`","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Cyrus-Krispin"},"content":"Shows all tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Cyrus-Krispin"},"content":"Format: `view`","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"Cyrus-Krispin"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Pied Piper home folder.","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Cyrus-Krispin"},"content":"**Deadline** | `deadline task/{TASK_NAME}  by/{DD/MM/YYYY}` \u003cbr\u003e e.g., `deadline task/Complete Assignment by/12/09/2021`","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"Cyrus-Krispin"},"content":"**Role** | `role n/{MEMBER_NAME} r/{ROLE}` \u003cbr\u003e e.g., `role n/John Doe r/Leader`","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"Cyrus-Krispin"},"content":"**Assign** | `assign  t/{TASK_ID} n/{MEMBER_NAME}`\u003cbr\u003e e.g., `assign t/1 n/John Doe`","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"**Delete person** | `delete {MEMBER_ID}`\u003cbr\u003e e.g.,`delete 1`","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"**Delete task** | `deletetask  {TASK_ID}`\u003cbr\u003e e.g.,`deletetask 2`","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"Cyrus-Krispin"},"content":"**View** | `view`","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Yaladah":11,"-":78,"Cyrus-Krispin":29}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"PawanPatil19"},"content":"    content: \"Pied Piper\";","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"PawanPatil19":1}},{"path":"docs/team/cyrus-krispin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cyrus-Krispin"},"content":"## Cyrus-Krispin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"### Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Cyrus-Krispin"},"content":"`To be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"Code contributed","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"Enhancements implemented","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions to the UG","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions to the DG","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions to team-based tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"Review/mentoring contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions beyond the project team","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Cyrus-Krispin":28}},{"path":"docs/team/jereldlimjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"title: Jereld\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"        * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"        * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jereldlimjy":34}},{"path":"docs/team/pawanpatil19.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"## Pawan Kishor Patil","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"Hi 👋","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"I am a Year 2 Computer Science Student from India.","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"![My Picture](../images/pawanpatil19.png)","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PawanPatil19":6}},{"path":"docs/team/yaladah.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"## Jerome Seet How Ee","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"I’m a Y2 CS student. I’m from Singapore and I enjoy getting in calls with friends and playing casual games.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"![My picture](../images/yaladah.png)","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Yaladah":5}},{"path":"docs/team/zhengsterz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"title: zhengsterz\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zhengsterz":1,"-":45}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yaladah":1,"-":12}},{"path":"src/main/java/seedu/address/logic/commands/DeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" * Adds a DeadlineTask to the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task with the specified deadline \"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"TASK_DESCRIPTION \"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"buy groceries\"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_DATE + \"02/11/2023\";","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    private final DeadlineTask toAdd;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     * Creates an AddCommand to add the specified {@code DeadlineTask}","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineCommand(DeadlineTask task) {","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof DeadlineCommand // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 toAdd.equals(((DeadlineCommand) other).toAdd));","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"            + \": Deletes the person identified by the index number in the displayed person list.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    private final Index personIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    public DeleteCommand(Index personIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"        Person personToDelete \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"                \u0026\u0026 personIndex.equals(((DeleteCommand) other).personIndex)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yaladah":8,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":" * Deletes a task identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yaladah":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.DeadlineCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"            return new DeadlineCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zhengsterz":4,"Yaladah":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"task/\");","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"by/\");","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zhengsterz":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.DeadlineCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":" * Parses input arguments and creates a new DeadlineCommand object","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineCommandParser implements Parser\u003cDeadlineCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK, PREFIX_DATE);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK, PREFIX_DATE)","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        TaskDescription description \u003d ParserUtil.parseTaskDescription(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        Date deadlineDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(description, deadlineDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        return new DeadlineCommand(deadlineTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":52}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Yaladah":10,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yaladah":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"     * Parses a {@code String des} into a {@code TaskDescription}.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the given {@code des} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"    public static TaskDescription parseTaskDescription(String des) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(des);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        String trimmedDes \u003d des.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        if (!TaskDescription.isValidTaskDescription(trimmedDes)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        return new TaskDescription(trimmedDes);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zhengsterz":32,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        tasks.add(p);","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Yaladah"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":137,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Yaladah"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Yaladah"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhengsterz":20,"Yaladah":13,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a task with the same specifications as {@code task} exists in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"     * Task must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"     * Adds the given task.","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"     * @param person","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"    void addTask(DeadlineTask person);","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Yaladah"},"content":"    List\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zhengsterz":15,"Yaladah":9,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"    public void addTask(DeadlineTask task) {","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"Yaladah"},"content":"    public List\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"Yaladah"},"content":"        return filteredTasks;","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhengsterz":16,"Yaladah":13,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yaladah":2,"-":17}},{"path":"src/main/java/seedu/address/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" * Represents a Date in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class Date {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"            \"Dates should only contain numeric characters and be in the format dd/mm/yyyy , and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{2}$\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public final String fullDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public Date(String date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        fullDate \u003d date;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        return fullDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof seedu.address.model.person.Name // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 fullDate.equals(((seedu.address.model.task.Date) other).fullDate)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        return fullDate.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zhengsterz":61}},{"path":"src/main/java/seedu/address/model/task/DeadlineTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * This class is for tasks that have a deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    private final Date deadlineDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a DeadlineTask that takes in a String description as well as String date","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"     * and String time.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     * @param date The date of the event.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask(TaskDescription description, Date date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        super(description);","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        this.deadlineDate \u003d date;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * Supplies deadline date of the current task when requested.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * @return Date deadline date of the task","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public Date getDate() {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        return this.deadlineDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        return \"[D]\" + super.toString() + \" (Before: \" + deadlineDate + \")\";","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"     * Compares this object to the specified object.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     * @return true if the objects are the same; false otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        if (!(obj instanceof DeadlineTask)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask checkedObj \u003d (DeadlineTask) obj;","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDescription \u003d this.getDescription().equals(checkedObj.getDescription());","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDate \u003d this.getDate().equals(checkedObj.getDate());","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        boolean isSame \u003d isSameDescription \u0026\u0026 isSameDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        if (isSame) {","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zhengsterz":63}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" * This class is the parent class of tasks that make up the tasklist.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"public class Task {","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    private final TaskDescription description;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of the Task that takes in description of the task.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public Task(TaskDescription description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * Supplies description of the current task when requested.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     * @return TaskDescription description of the task","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    public TaskDescription getDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        return this.description;","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"     * Supplies description of the completeness of current task when requested.","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     * @return String description of the completeness of current task","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * Changes status of current task as done by assigning isDone as true.","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public String mark() {","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        return \"This task has been marked as completed:\\n\" + this + \"\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"     * Changes status of current task as not done by assigning isDone as false.","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    public String unmark() {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        return \"This task has been marked as uncompleted:\\n\" + this + \"\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"        str \u003d String.format(\"[\" + statusIcon + \"] \" + this.description);","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        return str;","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if both tasks have the same description.","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"        Task checkedObj \u003d (Task) obj;","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDescription \u003d this.description.equals(checkedObj.description);","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"        if (isSameDescription) {","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zhengsterz":96}},{"path":"src/main/java/seedu/address/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" * Represents a Task\u0027s description in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskDescription(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class TaskDescription {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"            \"Task descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public final String fullTaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * Constructs a {@code TaskDescription}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        checkArgument(isValidTaskDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        fullTaskDescription \u003d description;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public static boolean isValidTaskDescription(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        return fullTaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof seedu.address.model.person.Name // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 fullTaskDescription.equals(((seedu.address.model.task.TaskDescription) other).fullTaskDescription));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        return fullTaskDescription.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zhengsterz":60}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":" * Tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a Tas uses Task#equals(Object) so","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":" * as to ensure that the Task with exactly the same fields will be removed.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":" *","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":" *","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"     * Replaces the contents of this list with {@code Tasks}.","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"     * {@code Tasks} must not contain duplicate Tasks.","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof seedu.address.model.task.UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 internalList.equals(((seedu.address.model.task.UniqueTaskList) other).internalList));","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"                    return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"        return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":138}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * Signals that the operation will result in duplicate Tasks (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" * description).","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":6}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"        public void addTask(DeadlineTask person) {","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"Yaladah"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Yaladah"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"Yaladah"},"content":"        public List\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"Yaladah"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"zhengsterz":9,"Yaladah":14,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/DeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_nullDeadlineTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeadlineCommand(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    public void execute_deadlineTaskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        ModelStubAcceptingDeadlineTaskAdded modelStub \u003d new ModelStubAcceptingDeadlineTaskAdded();","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        CommandResult commandResult \u003d new DeadlineCommand(validDeadlineTask).execute(modelStub);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(String.format(DeadlineCommand.MESSAGE_SUCCESS, validDeadlineTask),","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(Arrays.asList(validDeadlineTask), modelStub.tasksAdded);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    public void execute_duplicateDeadlineTask_throwsCommandException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(validDeadlineTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        ModelStub modelStub \u003d new ModelStubWithDeadlineTask(validDeadlineTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"                DeadlineCommand.MESSAGE_DUPLICATE_TASK, () -\u003e deadlineCommand.execute(modelStub));","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask firstTask \u003d new DeadlineTaskBuilder().withTaskDescription(\"obtain team approval\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask secondTask \u003d new DeadlineTaskBuilder().withTaskDescription(\"proofread documents\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand addFirstTaskCommand \u003d new DeadlineCommand(firstTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand addSecondTaskCommand \u003d new DeadlineCommand(secondTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand addFirstTaskCommandCopy \u003d new DeadlineCommand(firstTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommandCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(1));","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(addSecondTaskCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"        public void addTask(DeadlineTask person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"Yaladah"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"Yaladah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"Yaladah"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"zhengsterz"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"zhengsterz"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"zhengsterz"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"Yaladah"},"content":"        public List\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"Yaladah"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"zhengsterz"},"content":"    private class ModelStubWithDeadlineTask extends ModelStub {","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"zhengsterz"},"content":"        private final DeadlineTask task;","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"zhengsterz"},"content":"        ModelStubWithDeadlineTask(DeadlineTask task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"zhengsterz"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"zhengsterz"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that always accept the deadline task being added.","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"zhengsterz"},"content":"    private class ModelStubAcceptingDeadlineTaskAdded extends ModelStub {","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"zhengsterz"},"content":"        final ArrayList\u003cDeadlineTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"zhengsterz"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"zhengsterz"},"content":"        public void addTask(DeadlineTask task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"zhengsterz"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"zhengsterz"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":207,"Yaladah":14}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Yaladah":3,"-":107}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"            return null;","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Yaladah":7,"-":102}},{"path":"src/test/java/seedu/address/model/task/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class DateTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // null address","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        // valid addresses","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Date.isValidDate(\"11/12/2012\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Date.isValidDate(\"1/12/2012\")); // different format of date","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Date.isValidDate(\"11/1/2012\")); // another different format of date","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":36}},{"path":"src/test/java/seedu/address/model/task/DeadlineTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.THIRD;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void isSameDeadlineTask() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.isSameTask(FIRST));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.isSameTask(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // same description, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"03/04/2024\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.isSameTask(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        // different description, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        editedFirst \u003d new DeadlineTaskBuilder(FIRST).withTaskDescription(\"kick rocks\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.isSameTask(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        String taskDescriptionWithTrailingSpaces \u003d \"eat berries\" + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedSecond \u003d new DeadlineTaskBuilder(SECOND)","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"                .withTaskDescription(taskDescriptionWithTrailingSpaces).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(SECOND.isSameTask(editedSecond));","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask firstCopy \u003d new DeadlineTaskBuilder(FIRST).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.equals(firstCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.equals(FIRST));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(THIRD));","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        // different task description -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withTaskDescription(\"kill Mufasa\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"01/06/2015\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":65}},{"path":"src/test/java/seedu/address/model/task/TaskDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class TaskDescriptionTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDescription(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_invalidTaskDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskDescription(invalidName));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public void isValidTaskDescription() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // null name","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskDescription.isValidTaskDescription(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        // invalid name","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\"eat food*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        // valid name","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"eat salmon\")); // alphabets only","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"12345\")); // numbers only","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"eat 2 times\")); // alphanumeric characters","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"Eat FooD\")); // with capital letters","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"Eat Salmon And Turtles And Tigers\")); // long description","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":40}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.THREE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.TWO;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class TaskTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(ONE.isSameTask(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.isSameTask(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        String taskDescriptionWithTrailingSpaces \u003d \"eat berries\" + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        Task editedSecond \u003d new TaskBuilder(TWO)","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"                .withTaskDescription(taskDescriptionWithTrailingSpaces).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TWO.isSameTask(editedSecond));","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        Task firstCopy \u003d new TaskBuilder(ONE).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(ONE.equals(firstCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(ONE.equals(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(THREE));","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        // different task description -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        Task editedFirst \u003d new TaskBuilder(ONE).withTaskDescription(\"kill Mufasa\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":55}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.TWO;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(uniqueTaskList.contains(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(uniqueTaskList.contains(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public void contains_deadlineTaskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"4/12/1089\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(uniqueTaskList.contains(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"    public void add_duplicateDeadlineTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(SECOND));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(ONE, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_targetTaskNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(ONE, ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTask(SECOND, SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"    public void setDeadlineTask_editedDeadlineTaskHasSameIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"31/12/2021\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTask(FIRST, editedFirst);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(editedFirst);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTask(ONE, TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(ONE, TWO));","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.remove(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"zhengsterz"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"zhengsterz"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(ONE, ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"zhengsterz"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"zhengsterz"},"content":"                -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":175}},{"path":"src/test/java/seedu/address/testutil/DeadlineTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * A utility class to help with building DeadlineTask objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineTaskBuilder {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Do assignments\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_DATE \u003d \"11/11/2011\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    private TaskDescription description;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    private Date date;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     * Creates a {@code DeadlineTaskBuilder} with the default details.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     * Initializes the DeadlineTaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder(DeadlineTask taskToCopy) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        date \u003d taskToCopy.getDate();","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code TaskDescription} of the {@code DeadlineTask} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder withTaskDescription(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code Date} of the {@code DeadlineTask} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder withDate(String date) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        return new DeadlineTask(description, date);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":55}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class TaskBuilder {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Do assignments\";","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    private TaskDescription description;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    public TaskBuilder() {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code TaskDescription} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public TaskBuilder withTaskDescription(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public Task build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        return new Task(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":41}},{"path":"src/test/java/seedu/address/testutil/TypicalDeadlineTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class TypicalDeadlineTasks {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    public static final DeadlineTask FIRST \u003d new DeadlineTaskBuilder().withTaskDescription(\"send out survey\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final DeadlineTask SECOND \u003d new DeadlineTaskBuilder().withTaskDescription(\"eat berries\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public static final DeadlineTask THIRD \u003d new DeadlineTaskBuilder().withTaskDescription(\"eat salmon\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    private TypicalDeadlineTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        for (DeadlineTask task : getTypicalDeadlineTasks()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public static List\u003cDeadlineTask\u003e getTypicalDeadlineTasks() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST, SECOND, THIRD));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":35}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    public static final Task ONE \u003d new TaskBuilder().withTaskDescription(\"send out survey\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final Task TWO \u003d new TaskBuilder().withTaskDescription(\"eat berries\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public static final Task THREE \u003d new TaskBuilder().withTaskDescription(\"eat salmon\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ONE, TWO, THREE));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":35}}]
